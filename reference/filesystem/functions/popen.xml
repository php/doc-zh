<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 0c9c2dd669fe9395eaa73d487fbd160f9057429a Maintainer: HonestQiao Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="function.popen" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>popen</refname>
  <refpurpose>打开进程文件指针</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>resource</type><type>false</type></type><methodname>popen</methodname>
   <methodparam><type>string</type><parameter>command</parameter></methodparam>
   <methodparam><type>string</type><parameter>mode</parameter></methodparam>
  </methodsynopsis>
  <para>
   打开一个指向进程的管道，该进程由派生给定的 command 命令执行而产生。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>command</parameter></term>
     <listitem>
      <para>
       命令。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       模式。<literal>'r'</literal> 表示阅读，<literal>'w'</literal> 表示写入。
      </para>
      <para>
       在 Windows 上，<function>popen</function> 默认是文本模式，即任何从管道中读取/写入的 <literal>\n</literal>
       字符都将转换为 <literal>\r\n</literal>。如果避免这种情况，可以通过将 <parameter>mode</parameter>
       设置为 <literal>'rb'</literal> 和 <literal>'wb'</literal> 来强制执行二进制模式。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回一个和 <function>fopen</function>
   所返回的相同的文件指针，只不过它是单向的（只能用于读或写）并且必须用
   <function>pclose</function> 来关闭。此指针可以用于
   <function>fgets</function>，<function>fgetss</function> 和
   <function>fwrite</function>。
   当模式为 'r'，返回的文件指针等于命令的 STDOUT，当模式为 'w'，返回的文件指针等于命令的 STDIN。
  </para>
  <para>
   如果出错返回 &false;。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>popen</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php
$handle = popen("/bin/ls", "r");
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   如果未找到要执行的命令，会返回一个合法的资源。这看上去很怪，但有道理。它允许访问
   shell 返回的任何错误信息：
   <example>
    <title><function>popen</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php
error_reporting(E_ALL);

/* 加入重定向以得到标准错误输出 stderr。 */
$handle = popen('/path/to/executable 2>&1', 'r');
echo "'$handle'; " . gettype($handle) . "\n";
$read = fread($handle, 2096);
echo $read;
pclose($handle);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    如果需要双向支持，使用 <function>proc_open</function>。
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pclose</function></member>
    <member><function>fopen</function></member>
    <member><function>proc_open</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
