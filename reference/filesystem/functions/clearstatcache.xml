<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e82ff8a846af03b863c4a57fbedc0a93af0e68db Maintainer: dallas Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="function.clearstatcache" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>clearstatcache</refname>
  <refpurpose>清除文件状态缓存</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>clearstatcache</methodname>
   <methodparam choice="opt"><type>bool</type><parameter>clear_realpath_cache</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>filename</parameter><initializer>""</initializer></methodparam>
  </methodsynopsis>
  <para>
   当使用 <function>stat</function>，<function>lstat</function>
   或者任何列在受影响函数表（见下面）中的函数时，PHP
   将缓存这些函数的返回信息以提供更快的性能。然而在某些情况下，你可能想清除被缓存的信息。例如如果在一个脚本中多次检查同一个文件，而该文件在此脚本执行期间有被删除或修改的危险时，你需要清除文件状态缓存。这种情况下，可以用
   <function>clearstatcache</function> 函数来清除被
   PHP 缓存的该文件信息。
  </para>
  <para>
   必须注意的是，对于不存在的文件，PHP 并不会缓存其信息。所以如果调用
   <function>file_exists</function> 来检查不存在的文件，在该文件没有被创建之前，它都会返回
   &false;。如果该文件被创建了，就算以后被删除，它都会返回 &true;
   函数 <function>unlink</function> 会自动清除该缓存.
  </para>
  <note>
   <para>
    本函数缓存特定文件名的信息，因此只在对同一个文件名进行多次操作并且需要该文件信息不被缓存时才需要调用
    <function>clearstatcache</function>。
   </para>
  </note>
  <para>
   受影响的函数包括
   <function>stat</function>，
   <function>lstat</function>，
   <function>file_exists</function>，
   <function>is_writable</function>，
   <function>is_readable</function>，
   <function>is_executable</function>，
   <function>is_file</function>，
   <function>is_dir</function>，
   <function>is_link</function>，
   <function>filectime</function>，
   <function>fileatime</function>，
   <function>filemtime</function>，
   <function>fileinode</function>，
   <function>filegroup</function>，
   <function>fileowner</function>，
   <function>filesize</function>，
   <function>filetype</function>
   和 <function>fileperms</function>。
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>clear_realpath_cache</parameter></term>
     <listitem>
      <para>
       是否<emphasis>也</emphasis>清除真实路径缓存
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       仅清除指定文件名的真实路径缓存; 只在
       <parameter>clear_realpath_cache</parameter> 为 &true; 
       时启用。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>clearstatcache</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php
$file = 'output_log.txt';

function get_owner($file)
{
    $stat = stat($file);
    $user = posix_getpwuid($stat['uid']);
    return $user['name'];
}

$format = "UID @ %s: %s\n";

printf($format, date('r'), get_owner($file));

chown($file, 'ross');
printf($format, date('r'), get_owner($file));

clearstatcache();
printf($format, date('r'), get_owner($file));
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
UID @ Sun, 12 Oct 2008 20:48:28 +0100: root
UID @ Sun, 12 Oct 2008 20:48:28 +0100: root
UID @ Sun, 12 Oct 2008 20:48:28 +0100: ross
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
