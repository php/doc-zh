<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: ae5b5761e220b355014d0845e060ea1669befe7a Maintainer: dallas Status: ready -->
<!-- CREDITS: lm92, Luffy -->
<refentry xml:id="function.fread" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>fread</refname>
  <refpurpose>读取文件（可安全用于二进制文件）</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>fread</methodname>
   <methodparam><type>resource</type><parameter>stream</parameter></methodparam>
   <methodparam><type>int</type><parameter>length</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>fread</function> 从文件指针
   <parameter>stream</parameter> 读取最多
   <parameter>length</parameter> 个字节。
   
   该函数在遇上以下几种情况时停止读取文件：
   <itemizedlist>
    <listitem>
     <simpara>
      读取了 <parameter>length</parameter> 个字节
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      到达了文件末尾（EOF）
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      a packet becomes available or the <link linkend="function.socket-set-timeout">
      socket timeout</link> occurs (for network streams)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      if the stream is read buffered and it does not represent a plain file, at
      most one read of up to a number of bytes equal to the chunk size (usually
      8192) is made; depending on the previously buffered data, the size of the
      returned data may be larger than the chunk size.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>
 
  <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stream</parameter></term>
     <listitem>
      &fs.file.pointer;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       最多读取 <parameter>length</parameter> 个字节。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
  <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回所读取的字符串，&return.falseforfailure;。 
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>一个简单的 <function>fread</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php
// get contents of a file into a string
$filename = "/usr/local/something.txt";
$handle = fopen($filename, "r");
$contents = fread($handle, filesize($filename));
fclose($handle);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Binary <function>fread</function> example</title>
    <warning>
     <para>
     在区分二进制文件和文本文件的系统上（如
    Windows）打开文件时，<function>fopen</function> 函数的 mode 参数要加上 'b'。
     </para>
    </warning>
    <programlisting role="php">
<![CDATA[
<?php
$filename = "c:\\files\\somepic.gif";
$handle = fopen($filename, "rb");
$contents = fread($handle, filesize($filename));
fclose($handle);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Remote <function>fread</function> examples</title>
    <warning>
     <para>
      当从任何不是普通本地文件读取时，例如在读取从<link
    linkend="features.remote-files">远程文件</link>或
    <function>popen</function> 以及 <function>fsockopen</function>
    返回的流时，读取会在一个包可用之后停止。这意味着应该如下例所示将数据收集起来合并成大块。
     </para>
    </warning>
    <programlisting role="php">
<![CDATA[
<?php
$handle = fopen("http://www.example.com/", "rb");
if (FALSE === $handle) {
    exit("Failed to open stream to URL");
}

$contents = stream_get_contents($handle);

fclose($handle);
?>
]]>
    </programlisting>
    <programlisting role="php">
<![CDATA[
<?php
$handle = fopen("http://www.example.com/", "rb");
$contents = '';
while (!feof($handle)) {
    $contents .= fread($handle, 8192);
}
fclose($handle);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    如果只是想将一个文件的内容读入到一个字符串中，用
    <function>file_get_contents</function>，它的性能比上面的代码好得多。
   </para>
  </note>
  <note>
   <para>
    Note that <function>fread</function> reads from the current position of 
    the file pointer. Use <function>ftell</function> to find the current 
    position of the pointer and <function>rewind</function> to rewind the 
    pointer position.
   </para>
  </note>
 </refsect1>
 
  <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fwrite</function></member>
    <member><function>fopen</function></member>
    <member><function>fsockopen</function></member>
    <member><function>popen</function></member>
    <member><function>fgets</function></member>
    <member><function>fgetss</function></member>
    <member><function>fscanf</function></member>
    <member><function>file</function></member>
    <member><function>fpassthru</function></member>
    <member><function>fseek</function></member>
    <member><function>ftell</function></member>
    <member><function>rewind</function></member>
    <member><function>unpack</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
