<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e9366ee458b2900c53a503b1ad97664e1d9a8859 Maintainer: haytoo Status: ready -->
<refentry xml:id="function.apcu-store" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>apcu_store</refname>
  <refpurpose>
   缓存一个变量到存储中
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>apcu_store</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>ttl</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>array</type><methodname>apcu_store</methodname>
   <methodparam><type>array</type><parameter>values</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>unused</parameter><initializer>NULL</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>ttl</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   缓存一个变量到存储中。
  </para>
  <note>
   <simpara>
    与 PHP 中常见的变量生命周期不同的是，通过 <function>apcu_store</function> 存储的变量可以在多个 request 之间共享（直到该变量从 cache 中被删除）。
   </simpara>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       使用此名称存储变量。<parameter>key</parameter> 是唯一的，因此当多次使用同样的 <parameter>key</parameter> 存储变量时，后一次会覆盖前一次的值。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       被存储的变量
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ttl</parameter></term>
     <listitem>
      <para>
       变量生存时间（Time To Live）；被存储的 <parameter>var</parameter> 经过 <parameter>ttl</parameter> 秒后，会从存储中被删除（下一次请求时）。如果没提供 <parameter>ttl</parameter> （或 <parameter>ttl</parameter> 为 <literal>0</literal> ），该变量会一直存在直到手动删除它，或者其他原因导致该变量从缓存中消失（清除，重启等等。）。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>values</parameter></term>
     <listitem>
      <para>
       数组索引作为 key，数组值作为被存储的 var。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
   第二种语法返回包含存储失败的 key 的数组。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>apcu_store</function> 示例</title>
    <programlisting role="php">
<![CDATA[
<?php
$bar = 'BAR';
apcu_store('foo', $bar);
var_dump(apcu_fetch('foo'));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(3) "BAR"
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>apcu_add</function></member>
    <member><function>apcu_fetch</function></member>
    <member><function>apcu_delete</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
