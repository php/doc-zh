<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
 <!-- EN-Revision: 443d81b33e6537a000cc235c2a11748ba8d56232 Maintainer: daijie Status: ready -->
<!-- CREDITS: Luffy -->
<refentry xml:id="function.strtok" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtok</refname>
  <refpurpose>标记分割字符串</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>strtok</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>string</type><parameter>token</parameter></methodparam>
  </methodsynopsis>
  <simpara>可选 token （不支持命名参数）：</simpara>
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>strtok</methodname>
   <methodparam><type>string</type><parameter>token</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>strtok</function> 将字符串 <parameter>string</parameter> 分割为若干子字符串，每个子字符串以
   <parameter>token</parameter> 中的字符分割。这也就意味着，如果有个字符串是 "This is an example string"，
   你可以使用空格字符作为 <parameter>token</parameter>，将这句话分割成独立的单词。
  </para>
  <para>
   注意，仅第一次调用 strtok 函数时才使用 <parameter>string</parameter> 参数。
   随后每次调用 strtok 都将只使用 <parameter>token</parameter> 参数，因为它会记住它在当前字符串中的位置。
   如果要重新开始分割一个新的字符串，你需要再次使用 <parameter>string</parameter> 参数来调用 strtok 函数来对其进行初始化。
   注意，可以在 <parameter>token</parameter> 参数中使用多个字符。字符串将被 <parameter>token</parameter> 参数中任何一个字符分割。
  </para>
  <note>
   <para>
    这个函数的行为可能与熟悉 <function>explode</function> 的人期望略有不同。
    首先，在解析的字符串中，两个或多个连续的 <parameter>token</parameter> 的
    字符被认为是单一的分隔符。
    此外，位于字符串开始或结束处的 <parameter>token</parameter> 将被忽略。
    例如，如果使用一个字符串 <literal>";aaa;;bbb;"</literal> ，连续调用 <function>strtok</function>
    并将 <literal>";"</literal> 作为一个 <parameter>token</parameter>
    将返回字符串 "aaa" 和 "bbb"，然后返回 &false; 。
    因此，字符串将仅被拆分为两个元素，而 <literal>explode(";", $string)</literal> 将返回一个包含 5 个元素的数组。
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       被分成若干子字符串的原始<type>字符串</type>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>token</parameter></term>
     <listitem>
      <para>
       分割 <parameter>string</parameter> 时使用的分界字符。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   标记后的<type>字符串</type>，如果没有更多标记可用，则返回 &false; 。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.3.0</entry>
       <entry>
        现在，当未提供 <parameter>token</parameter> 时，会抛出 <constant>E_WARNING</constant>。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>strtok</function> 示例</title>
    <programlisting role="php">
<![CDATA[
<?php
$string = "This is\tan example\nstring";
/* 使用制表符和换行符作为分界符 */
$tok = strtok($string, " \n\t");

while ($tok !== false) {
    echo "Word=$tok<br />";
    $tok = strtok(" \n\t");
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>当 <function>strtok</function> 找不到标记时的反应</title>
    <programlisting role="php">
<![CDATA[
<?php
$first_token  = strtok('/something', '/');
$second_token = strtok('/');
var_dump($first_token, $second_token);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
    string(9) "something"
    bool(false)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><function>strtok</function> 和 <function>explode</function> 的不同点</title>
    <programlisting role="php">
     <![CDATA[
<?php
$string = ";aaa;;bbb;";
$parts = [];
$tok = strtok($string, ";");
while ($tok !== false) {
    $parts[] = $tok;
    $tok = strtok(";");
}
echo json_encode($parts),"\n";
$parts = explode(";", $string);
echo json_encode($parts),"\n";
]]>
    </programlisting>
    &example.outputs;
    <screen>
     <![CDATA[
["aaa","bbb"]
["","aaa","","bbb",""]
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  
  &return.falseproblem;
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>explode</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
