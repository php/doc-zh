<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 464fbf0d12f89b1e723908780fb68acf667f5901 Maintainer: daijie Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="function.str-ireplace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>str_ireplace</refname>
  <refpurpose><function>str_replace</function> 的忽略大小写版本</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>array</type></type><methodname>str_ireplace</methodname>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>search</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>replace</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>array</type></type><parameter>subject</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">count</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   该函数返回字符串或者数组。该字符串或数组是将 <parameter>subject</parameter> 中全部的 <parameter>search</parameter> 都被 <parameter>replace</parameter> 替换（忽略大小写）之后的结果。
  </para>
  <para>
   要根据模式而不是固定字符串替换文本，将 <function>preg_replace</function> 与 <literal>i</literal> <link linkend="reference.pcre.pattern.modifiers">模式修饰符</link>一起使用。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  
  <para>
   如果 <parameter>search</parameter> 和 <parameter>replace</parameter> 为数组，那么 <function>str_ireplace</function> 将对 <parameter>subject</parameter> 做二者的映射替换。如果 <parameter>replace</parameter> 的值的个数少于 <parameter>search</parameter> 的个数，多余的替换将使用空字符串来进行。如果 <parameter>search</parameter> 是一个数组而 <parameter>replace</parameter> 是一个字符串，那么 <parameter>search</parameter> 中每个元素的替换将始终使用这个字符串。
  </para>
  <para>
   如果 <parameter>search</parameter> 或 <parameter>replace</parameter> 是数组，他们的元素将从头到尾一个个处理。
  </para>
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>search</parameter></term>
     <listitem>
       <para>
        要搜索的值，就像是 <emphasis>needle</emphasis>。可以使用 array 来提供多个 needle。
       </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replace</parameter></term>
     <listitem>
      <para>
       <parameter>search</parameter> 的替换值。一个数组可以被用来指定多重替换。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>subject</parameter></term>
     <listitem>
      <para>
       要被搜索和替换的字符串或数组，就像是
      <emphasis>haystack</emphasis>。
      </para>
      <para>
       如果 <parameter>subject</parameter> 是一个数组，替换操作将遍历整个 <parameter>subject</parameter>，并且也将返回一个数组。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>count</parameter></term>
     <listitem>
      <para>
      如果被指定，它的值将被设置为替换发生的次数。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回替换后的字符串或者数组。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &strings.changelog.ascii-case-folding;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>str_ireplace</function> 示例</title>
    <programlisting role="php">
<![CDATA[
<?php
$bodytag = str_ireplace("%body%", "black", "<body text=%BODY%>");
echo $bodytag; // <body text=black>
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
  <caution>
   <title>替换顺序陷阱</title>
   <para>
    因为 <function>str_ireplace</function> 是从左到右替换，当进行多个替换时，可能会替换先前插入的值。<function>str_replace</function>
    文档中的示例 #2 展示了在实践中受到的影响。
   </para>
  </caution>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_replace</function></member>
    <member><function>preg_replace</function></member>
    <member><function>strtr</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
