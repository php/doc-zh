<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 62126c55f1c6ed444043e7272c4f9e233818a44b Maintainer: HonestQiao Status: ready -->
<!-- CREDITS: Luffy, mowangjuanzi -->
<refentry xml:id="function.substr" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>substr</refname>
  <refpurpose>返回字符串的子串</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>substr</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>int</type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   返回字符串 <parameter>string</parameter> 由 <parameter>offset</parameter> 和 <parameter>length</parameter> 参数指定的子字符串。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       输入字符串。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       如果 <parameter>offset</parameter> 是非负数，返回的字符串将从 <parameter>string</parameter> 的 <parameter>offset</parameter> 位置开始，从 0 开始计算。例如，在字符串 “<literal>abcdef</literal>” 中，在位置 <literal>0</literal> 的字符是 “<literal>a</literal>”，位置 <literal>2</literal> 的字符串是 “<literal>c</literal>” 等等。
      </para>
      <para>
       如果 <parameter>offset</parameter> 是负数，返回的字符串将从 <parameter>string</parameter> 结尾处向前数第 <parameter>offset</parameter> 个字符开始。
      </para>
      <para>
       如果 <parameter>string</parameter> 的长度小于 <parameter>offset</parameter>，将返回空字符串。
      </para>
      <para>
       <example>
        <title>使用负数 <parameter>offset</parameter></title>
        <programlisting role="php">
<![CDATA[
<?php
$rest = substr("abcdef", -1);    // 返回 "f"
$rest = substr("abcdef", -2);    // 返回 "ef"
$rest = substr("abcdef", -3, 1); // 返回 "d"
?>
]]>
        </programlisting>
       </example>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       如果提供了正数的 <parameter>length</parameter>，返回的字符串将从 <parameter>offset</parameter> 处开始最多包括 <parameter>length</parameter> 个字符（取决于 <parameter>string</parameter> 的长度）。
      </para>
      <para>
       如果提供了负数的 <parameter>length</parameter>，那么 <parameter>string</parameter> 末尾处的 <parameter>length</parameter> 个字符将会被省略（若 <parameter>offset</parameter> 是负数则从字符串尾部算起）。如果 <parameter>offset</parameter> 不在这段文本中，那么将返回空字符串。
      </para>
      <para>
       如果提供了值为 <literal>0</literal> 的 <parameter>length</parameter>，那么将返回一个空字符串。
      </para>
      <para>
       如果忽略 <parameter>length</parameter> 或为 &null;，返回的子字符串将从 <parameter>offset</parameter> 位置开始直到字符串结尾。
      </para>
      <example>
       <title>使用负数 <parameter>length</parameter></title>
       <programlisting role="php">
<![CDATA[
<?php
$rest = substr("abcdef", 0, -1);  // 返回 "abcde"
$rest = substr("abcdef", 2, -1);  // 返回 "cde"
$rest = substr("abcdef", 4, -4);  // 返回 ""; 在 PHP 8.0.0 之前，返回 false
$rest = substr("abcdef", -3, -1); // 返回 "de"
?>
]]>
       </programlisting>
      </example>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回提取的 <parameter>string</parameter> 部分或者空字符串。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       现在 <parameter>length</parameter> 允许为 null。当 <parameter>length</parameter>
       显式设置为 &null; 时，函数返回在字符串末尾结束的子字符串，而之前将返回空字符串。
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       函数将返回空字符串, 在此之前返回 &false;。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>substr</function> 基本用法</title>
    <programlisting role="php">
<![CDATA[
<?php
echo substr('abcdef', 1);     // bcdef
echo substr("abcdef", 1, null); // bcdef; 在 PHP 8.0.0 之前，返回空字符串
echo substr('abcdef', 1, 3);  // bcd
echo substr('abcdef', 0, 4);  // abcd
echo substr('abcdef', 0, 8);  // abcdef
echo substr('abcdef', -1, 1); // f

// 访问字符串中的单个字符
// 也可以使用中括号
$string = 'abcdef';
echo $string[0];                 // a
echo $string[3];                 // d
echo $string[strlen($string)-1]; // f
?>
]]>
    </programlisting>
   </example>   
   <example>
    <title><function>substr</function> casting behaviour</title>
    <programlisting role="php">
<![CDATA[
<?php
class apple {
    public function __toString() {
        return "green";
    }
}

echo "1) ".var_export(substr("pear", 0, 2), true).PHP_EOL;
echo "2) ".var_export(substr(54321, 0, 2), true).PHP_EOL;
echo "3) ".var_export(substr(new apple(), 0, 2), true).PHP_EOL;
echo "4) ".var_export(substr(true, 0, 1), true).PHP_EOL;
echo "5) ".var_export(substr(false, 0, 1), true).PHP_EOL;
echo "6) ".var_export(substr("", 0, 1), true).PHP_EOL;
echo "7) ".var_export(substr(1.2e3, 0, 4), true).PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
1) 'pe'
2) '54'
3) 'gr'
4) '1'
5) ''
6) ''
7) '1200'
]]>
    </screen>
   </example>
   <example>
   <title>无效字符范围</title>
   <para>
    如果请求的字符范围无效, <function>substr</function> 从 
    PHP 8.0.0 开始返回空字符串；在此之前返回 &false; 。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
var_dump(substr('a', 2));
?>
]]>
   </programlisting>
   &example.outputs.8;
   <screen>
<![CDATA[
string(0) ""
]]>
   </screen>
   &example.outputs.7;
   <screen>
<![CDATA[
bool(false)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strrchr</function></member>
    <member><function>substr_replace</function></member>
    <member><function>preg_match</function></member>
    <member><function>trim</function></member>
    <member><function>mb_substr</function></member>
    <member><function>wordwrap</function></member>
    <member><link linkend="language.types.string.substr">字符串访问和修改</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
