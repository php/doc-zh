<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e095023e408c8cb6378ae16bb6870343a3946919 Maintainer: HonestQiao Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="function.strrpos" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>strrpos</refname>
  <refpurpose>计算指定字符串在目标字符串中最后一次出现的位置</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>strrpos</methodname>
   <methodparam><type>string</type><parameter>haystack</parameter></methodparam>
   <methodparam><type>string</type><parameter>needle</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   返回 <parameter>haystack</parameter> 字符串中 <parameter>needle</parameter> 最后一次出现的数字位置。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>haystack</parameter></term>
     <listitem>
      <para>
       在此字符串中进行查找。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>needle</parameter></term>
     <listitem>
      &strings.parameter.needle.non-string;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para> 
       如果为 0 或正数，则从左到右搜索，跳过 <parameter>haystack</parameter> 的开头
       <parameter>offset</parameter> 个字节。
      </para>
      <para>
       如果为负数，则从右向左执行搜索，跳过 <parameter>haystack</parameter> 的最后
       <parameter>offset</parameter> 个字节并搜索首次出现的 <parameter>needle</parameter>。
       <note>
        <para>
         这实际是在最后 <parameter>offset</parameter> 个字节之前寻找最后出现的
         <parameter>needle</parameter>。
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回 needle 在 <parameter>haystack</parameter> 字符串中存在的位置（与搜索顺序或者 offset 无关）。
   <note>
    <simpara>
     字符串位置从 0 开始，而不是 1。
    </simpara>
   </note>
  </para>
  <para>
   如果未找到 needle，则返回 &false;。
  </para>
  &return.falseproblem;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       不再支持将 &integer; 传递给 <parameter>needle</parameter>
      </entry>
     </row>
     <row>
      <entry>7.3.0</entry>
      <entry>
       弃用将 &integer; 传递给 <parameter>needle</parameter>。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>检查字串是否存在</title>
    <para>
     很容易将“在位置 0 处找到”和“未发现字符串”这两种情况搞错。这是检测区别的办法：
    </para>
    <programlisting role="php">
<![CDATA[
<?php

$pos = strrpos($mystring, "b");
if ($pos === false) { // 注意: 三个等号
    // 未发现...
}

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>使用偏移位置进行查找</title>
    <programlisting role="php">
<![CDATA[
<?php
$foo = "0123456789a123456789b123456789c";

// 从第 0 个字节（从头）寻找“0”
var_dump(strrpos($foo, '0', 0));

// 从第 1 个字节（字节“0”之后）寻找“0”
var_dump(strrpos($foo, '0', 1));

// 从第 21 个字节（20 个字节之后）寻找“7”
var_dump(strrpos($foo, '7', 20));

// 从第 29 个字节（28 个字节之后）寻找“7”
var_dump(strrpos($foo, '7', 28));

// 从倒数第 5 个字节起从右向左寻找“7”
var_dump(strrpos($foo, '7', -5));

// 从倒数第 2 个字节起从右向左寻找“c”
var_dump(strrpos($foo, 'c', -2));

// 从倒数第 2 个字节起从右向左寻找“9c”
var_dump(strrpos($foo, '9c', -2));
?>
]]>
    </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
int(0)
bool(false)
int(27)
bool(false)
int(17)
bool(false)
int(29)
]]>
   </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strpos</function></member>
    <member><function>stripos</function></member>
    <member><function>strripos</function></member>
    <member><function>strrchr</function></member>
    <member><function>substr</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
