<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e095023e408c8cb6378ae16bb6870343a3946919 Maintainer: nio Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="function.crc32" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>crc32</refname>
  <refpurpose>计算一个字符串的 crc32 多项式</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>crc32</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
  </methodsynopsis>
  <para>
   生成 <parameter>string</parameter> 的 32 位循环冗余校验和多项式。这通常用于检查正在传输的数据是否完整。
  </para>
  <warning>
   <simpara>
    由于 PHP 的整数类型是有符号的，所以在 32 位系统上许多 crc32 校验和将产生负整数。不过在
    64 位上所有 <function>crc32</function> 的结果将都是正整数。
   </simpara>
   <simpara>
    因此需要使用 <function>sprintf</function> 或 <function>printf</function>
    的“%u”格式标志符获取十进制格式的无符号 crc32 校验和的字符串表示形式。
   </simpara>
   <simpara>
    对于十六进制的校验和可以使用 <function>sprintf</function> 或 <function>printf</function>
    的“%x”格式标志符或 <function>dechex</function> 转换程序，这两个函数负责将
    <function>crc32</function> 结果转为无符号整数。
   </simpara>
   <simpara>
    64 位的设备也会返回负数，更高的结果值会破坏十六进制转换，因为负数会得到额外的
    0xFFFFFFFF######## 偏移量。由于十六进制似乎是最常见的用例，所以决定不破坏该原则，即使从 32
    位移动到 64 位时破坏了大约 50% 的十进制直接比较。
   </simpara>
   <simpara>
    回想一下，让函数返回整数可能不是最好的主意，而立即返回十六进制的字符串（例如
    <function>md5</function>）可能是更好的开始。
   </simpara>
   <simpara>
    可移植方案可以考虑通用的 <function>hash</function>。<code>hash("crc32b", $str)</code>
    返回跟 <code>str_pad(dechex(crc32($str)), 8, '0', STR_PAD_LEFT)</code> 相同的字符串。
   </simpara>
  </warning>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
   <para>
    <variablelist>
     <varlistentry>
      <term><parameter>string</parameter></term>
      <listitem>
       <para>
        要校验的数据。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
   <para>
    以整数形式返回 <parameter>string</parameter> 的 crc32 校验和。
   </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>显示 crc32 校验和</title>
    <para>
     示例中演示了如何使用 <function>printf</function>
     函数打印转换后的校验和：
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$checksum = crc32("The quick brown fox jumped over the lazy dog.");
printf("%u\n", $checksum);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
   <para>
    <simplelist>
     <member><function>hash</function></member>
     <member><function>md5</function></member>
     <member><function>sha1</function></member>
    </simplelist>
   </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
