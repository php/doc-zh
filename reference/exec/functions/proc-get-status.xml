<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 2b782ad1abad454105767b8377c8d01716f7e654 Maintainer: yuanyuqiang Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id='function.proc-get-status' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>proc_get_status</refname>
  <refpurpose>获取由 <function>proc_open</function> 函数打开的进程的信息</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>proc_get_status</methodname>
   <methodparam><type>resource</type><parameter>process</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>proc_get_status</function> 函数可以获取由
   <function>proc_open</function> 函数打开的进程的信息。
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>process</parameter></term>
     <listitem>
      <para>
       要检查的由 <function>proc_open</function> 打开的进程 <type>resource</type>。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   收集了进程信息的 <type>array</type>。返回的数组包含下列元素：
  </para>
  <para>
  <informaltable>
   <tgroup cols="3">
    <thead>
     <row><entry>元素</entry><entry>类型</entry><entry>描述</entry></row>
    </thead>
    <tbody>
     <row>
      <entry>command</entry>
      <entry><type>string</type></entry>
      <entry>
       传入 <function>proc_open</function> 函数的命令行字符串。
      </entry>
     </row>
     <row>
      <entry>pid</entry>
      <entry><type>int</type></entry>
      <entry>进程 ID</entry>
     </row>
     <row>
      <entry>running</entry>
      <entry><type>bool</type></entry>
      <entry>
       &true; 表示进程还在运行中， &false; 表示进程已经终止
      </entry>
     </row>
     <row>
      <entry>signaled</entry>
      <entry><type>bool</type></entry>
      <entry>
       &true; 表示子进程被未捕获的信号所终止。
       在 Windows 平台永远为 &false;。
      </entry>
     </row>
     <row>
      <entry>stopped</entry>
      <entry><type>bool</type></entry>
      <entry>
        &true; 表示子进程被信号停止。
        在 Windows 平台永远为 &false;。
      </entry>
     </row>
     <row>
      <entry>exitcode</entry>
      <entry><type>int</type></entry>
      <entry>
        进程的退出码（仅在 <literal>running</literal> 为 &false; 时有意义）。
        仅在第一次调用此函数时会返回实际的值，
        后续的调用将返回 <literal>-1</literal>。
      </entry>
     </row>
     <row>
      <entry>termsig</entry>
      <entry><type>int</type></entry>
      <entry>
        导致子进程终止执行的信号值
        （仅在 <literal>signaled</literal> 为 &true; 时有意义）。
      </entry>
     </row>
     <row>
      <entry>stopsig</entry>
      <entry><type>int</type></entry>
      <entry>
        导致子进程停止执行的信号值
        （仅在 <literal>stopped</literal> 为 &true; 时有意义）。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>proc_open</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
