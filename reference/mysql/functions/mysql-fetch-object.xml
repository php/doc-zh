<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4754397753fd79f1c846868b66a2448babab1c54 Maintainer: Avenger Status: ready -->
<refentry xml:id="function.mysql-fetch-object" xmlns="http://docbook.org/ns/docbook" xmlns:phd="http://www.php.net/ns/phd">
   <refnamediv>
    <refname>mysql_fetch_object</refname>
    <refpurpose>从结果集中取得一行作为对象返回</refpurpose>
   </refnamediv>
 <refsynopsisdiv>
  <warning>
   &mysql.alternative.note;
   <simplelist role="alternatives">
    <member><function>mysqli_fetch_object</function></member>
    <member><methodname phd:args="PDO::FETCH_OBJ">PDOStatement::fetch</methodname></member>
   </simplelist>
  </warning>
 </refsynopsisdiv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
    <type>object</type><methodname>mysql_fetch_object</methodname>
    <methodparam><type>resource</type><parameter>result</parameter></methodparam>
    <methodparam choice="opt"><type>string</type><parameter>class_name</parameter></methodparam>
    <methodparam choice="opt"><type>array</type><parameter>params</parameter></methodparam>
  </methodsynopsis>
  <para>
    返回一个对象，其属性与获取的行相对应，并将内部数据指针向前移动。
  </para>
 </refsect1>


 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysql.result.description;
    <varlistentry>
     <term><parameter>class_name</parameter></term>
      <listitem>
       <para>
        要实例化、设置属性并返回的类的名称，如果不指定，默认返回
        <classname>stdClass</classname> 对象。
       </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
      <listitem>
       <para>
        可选 <type>array</type> 数组参数，会传递给 <parameter>class_name</parameter> 类的构造函数。
       </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    返回根据所取得的行生成的对象 <type>object</type>，如果没有更多行则返回 &false;。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>mysql_fetch_object</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
mysql_connect("hostname", "user", "password");
mysql_select_db("mydb");
$result = mysql_query("select * from mytable");
while ($row = mysql_fetch_object($result)) {
    echo $row->user_id;
    echo $row->fullname;
}
mysql_free_result($result);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>mysql_fetch_object</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
class foo {
    public $name;
}

mysql_connect("hostname", "user", "password");
mysql_select_db("mydb");

$result = mysql_query("select name from mytable limit 1");
$obj = mysql_fetch_object($result, 'foo');
var_dump($obj);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <title>Performance</title>
   <para>
     速度上，本函数和
     <function>mysql_fetch_array</function> 一样，也几乎和
     <function>mysql_fetch_row</function> 一样快（差别很不明显）。
   </para>
  </note>
  <note>
   <para>
     <function>mysql_fetch_object</function> 和
     <function>mysql_fetch_array</function>
     类似，只有一点区别 - 返回一个对象而不是数组。间接地也意味着只能通过字段名来访问数组，而不是偏移量（数字是合法的属性名）。
   </para>
  </note>
  &database.field-case;
  &database.fetch-null;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysql_fetch_array</function></member>
    <member><function>mysql_fetch_assoc</function></member>
    <member><function>mysql_fetch_row</function></member>
    <member><function>mysql_data_seek</function></member>
    <member><function>mysql_query</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
