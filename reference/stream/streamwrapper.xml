<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: ecaa2146429a7f88de40dfce14718afc896b74c5 Maintainer: mowangjuanzi Status: ready -->

<phpdoc:classref xml:id="class.streamwrapper" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>streamWrapper 类</title>
 <titleabbrev>streamWrapper</titleabbrev>

 <partintro>

<!-- {{{ streamWrapper intro -->
  <section xml:id="streamwrapper.intro">
   &reftitle.intro;
   <para>
    允许实现自定义协议处理程序和流，以便与其它文件系统函数（比如 <function>fopen</function>、
    <function>fread</function> 等）一起使用。
   </para>
   <note>
    <para>
     这<emphasis>不是</emphasis>真实的类，只是如何定义协议的原型类。
    </para>
   </note>
   <note>
    <para>
     不使用此处描述的方法而使用其它方式可能会导致未定义行为。
    </para>
   </note>
   <para>
    一旦流函数尝试访问与其关联的协议，就会初始化此类的实例。
   </para>
  </section>
<!-- }}} -->

  <section xml:id="streamwrapper.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>streamWrapper</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname><replaceable>streamWrapper</replaceable></classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>resource</type>
     <varname linkend="streamwrapper.props.context">context</varname>
    </fieldsynopsis>

    
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.streamwrapper')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])" />
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.streamwrapper')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])" />
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.streamwrapper')/db:refentry/db:refsect1[@role='description']/descendant::db:destructorsynopsis[not(@role='procedural')])" />
   </classsynopsis>
<!-- }}} -->

  </section>

  
<!-- {{{ streamWrapper properties -->
  <section xml:id="streamwrapper.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="streamwrapper.props.context">
     <term>资源 <varname>context</varname></term>
     <listitem>
      <para>
       当前 <link linkend="context">context</link>，或者没有 context 传递给调用函数，则为 &null;。
      </para>
      <para>
       使用 <function>stream_context_get_options</function> 解析 context。
      </para>
      <note>
       <para>
        此属性<emphasis>必须</emphasis>是 public，以便 PHP 可以使用使用实际的 context 资源填充它。
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->

 <section role="seealso"><!-- {{{ -->
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="stream.streamwrapper.example-1" /></member>
    <member><function>stream_wrapper_register</function></member>
    <member><function>stream_wrapper_unregister</function></member>
    <member><function>stream_wrapper_restore</function></member>
   </simplelist>
  </para>
 </section><!-- }}} -->

 </partintro>

 &reference.stream.entities.streamwrapper;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
