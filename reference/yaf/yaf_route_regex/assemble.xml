<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: c9389e4a0e96801fd14d91336ff3f12e45929a73 Maintainer: anonymous #47025 Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="yaf-route-regex.assemble" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Yaf_Route_Regex::assemble</refname>
  <refpurpose>组合 url</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type class="union"><type>string</type><type>null</type></type><methodname>Yaf_Route_Regex::assemble</methodname>
   <methodparam><type>array</type><parameter>info</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>query</parameter></methodparam>
  </methodsynopsis>
  <para>
   根据指定参数和自定义参数将 regex 这个 route 组合成一个 url
  </para>
  <para>	
   在 regex route 使用 assemble 需要在初始化时指定 reverse 参数，否则将不能正常工作	
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>info</parameter></term>
    <listitem>
     <para>
      需要传入一个数组，数组的 key 可以为 :a、:c、:m，:a 表示 action，:c 表示 controller，:m 表示 module。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>query</parameter></term>
    <listitem>
     <para>
      用户自定义的 query 字符串，将根据此路由规则拼接在 url 中
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   成功时返回 &string;，失败时为 &null;。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>Yaf_Route_Regex::assemble</function> 示例</title>
   <programlisting role="php">
<![CDATA[
<?php

$router = new Yaf_Router();

$route  = new Yaf_Route_Regex(
            "#^/product/([^/]+)/([^/])+#",
            array(
                'controller' => "product",  //route to product controller,
                ),
            array(),
            array(),
            '/:m/:c/:a'
        );

$router->addRoute("regex", $route);

var_dump($router->getRoute('regex')->assemble(
            array(
                ':m' => 'module',
                ':c' => 'controller',
                ':a' => 'action'
                ),
            array(
                'tkey1' => 'tval1',
                'tkey2' =>
                'tval2'
                )
            )
        );
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
string(49) "/module/controller/action?tkey1=tval1&tkey2=tval2"
]]>
   </screen>
  </example>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
