<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 593ea510e853ff034e03f78a4be0daa41661c9d4 Maintainer: HonestQiao Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="function.imagettftext" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>imagettftext</refname>
  <refpurpose>用 TrueType 字体向图像写入文本</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>imagettftext</methodname>
   <methodparam><type>GdImage</type><parameter>image</parameter></methodparam>
   <methodparam><type>float</type><parameter>size</parameter></methodparam>
   <methodparam><type>float</type><parameter>angle</parameter></methodparam>
   <methodparam><type>int</type><parameter>x</parameter></methodparam>
   <methodparam><type>int</type><parameter>y</parameter></methodparam>
   <methodparam><type>int</type><parameter>color</parameter></methodparam>
   <methodparam><type>string</type><parameter>font_filename</parameter></methodparam>
   <methodparam><type>string</type><parameter>text</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>[]</initializer></methodparam>
  </methodsynopsis>
  <para>
   使用 TrueType 字体将指定的 <parameter>text</parameter> 写入图像。
  </para>
  <note>
   <para>
    PHP 8.0.0 之前，<function>imagefttext</function> 是 <function>imagettftext</function>
    的扩展变体，额外支持 <parameter>extrainfo</parameter>。自 PHP 8.0.0 起，<function>imagettftext</function>
    是 <function>imagefttext</function> 的别名。
   </para>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>size</parameter></term>
     <listitem>
      <para>&gd.font.size;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>angle</parameter></term>
     <listitem>
      <para>
       角度制表示的角度，0 度为从左向右读的文本。较高数值表示逆时针旋转。例如
       90 度表示从下向上读的文本。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>x</parameter></term>
     <listitem>
      <para>
       由 <parameter>x</parameter>，<parameter>y</parameter> 所表示的坐标定义了第一个字符的基本点（大概是字符的左下角）。这和
       <function>imagestring</function> 不同，其中 <parameter>x</parameter>，<parameter>y</parameter>
       定义了第一个字符的左上角。例如“top left”为 0, 0。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>y</parameter></term>
     <listitem>
      <para>
       Y 坐标。它设定了字体基线的位置，不是字符的最底端。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>color</parameter></term>
     <listitem>
      <para>
       颜色索引。使用负的颜色索引值具有关闭防锯齿的效果。见
       <function>imagecolorallocate</function>。
      </para>
     </listitem>
    </varlistentry>
    &gd.ttf.fontfile;
    <varlistentry>
     <term><parameter>text</parameter></term>
     <listitem>
      <para>
       UTF-8 编码的文本字符串。
      </para>
      <para>
       可以包含十进制数字化字符表示（形式为：&amp;#8364;）来访问字体中超过位置
       127 的字符，支持十六进制格式（如 &amp;#xA9;）。UTF-8 编码的字符串可以直接传递。
      </para>
      <para>
       不支持命名实体，比如 &amp;copy;。可以考虑使用 <function>html_entity_decode</function>
       将这些命名实体解码为 UTF-8 字符。
      </para>
      <para>
       如果字符串中使用了字体不支持的字符，则将用空心矩形替换该字符。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回含有 8 个元素的数组，代表构成文本外框的四个点，顺序为左下、右下、右上、左上。无论角度如何，这些点是相对于文本的，因此“左上角”指的是以水平方向看文字时的左上角。错误时返回 &false;。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       新增 <parameter>options</parameter>。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>imagettftext</function> 示例</title>
    <para>
     此示例脚本将生成白色 400x30 像素的 PNG 图像，其中有黑色（带灰色阴影）Arial
     字体写的“Testing...”。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// Set the content-type
header('Content-Type: image/png');

// Create the image
$im = imagecreatetruecolor(400, 30);

// Create some colors
$white = imagecolorallocate($im, 255, 255, 255);
$grey = imagecolorallocate($im, 128, 128, 128);
$black = imagecolorallocate($im, 0, 0, 0);
imagefilledrectangle($im, 0, 0, 399, 29, $white);

// The text to draw
$text = 'Testing...';
// Replace path by your own font path
$font = 'arial.ttf';

// Add some shadow to the text
imagettftext($im, 20, 0, 11, 21, $grey, $font, $text);

// Add the text
imagettftext($im, 20, 0, 10, 20, $black, $font, $text);

// Using imagepng() results in clearer text compared with imagejpeg()
imagepng($im);
imagedestroy($im);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>示例输出：imagettftext()</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/imagettftext.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  &note.freetype;
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>imagettfbbox</function></member>
   <member><function>imagefttext</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
