<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4d13f5e4b45f699eb855a5e84736aeda2ebd142a Maintainer: yuanyuqiang Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="datetime.createfromformat" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>DateTime::createFromFormat</refname>
  <refname>date_create_from_format</refname>
  <refpurpose>根据指定格式解析时间字符串</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="DateTime">
   <modifier>public</modifier> <modifier>static</modifier> <type class="union"><type>DateTime</type><type>false</type></type><methodname>DateTime::createFromFormat</methodname>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam><type>string</type><parameter>datetime</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>DateTimeZone</type><type>null</type></type><parameter>timezone</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type class="union"><type>DateTime</type><type>false</type></type><methodname>date_create_from_format</methodname>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam><type>string</type><parameter>datetime</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>DateTimeZone</type><type>null</type></type><parameter>timezone</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   返回新的 DateTime 对象，该对象是通过指定 <parameter>format</parameter> 将表示日期和时间的
   <parameter>datetime</parameter> 格式化生成。
  </para>
  <para>
   类似于 <methodname>DateTimeImmutable::createFromFormat</methodname>
   和 <function>date_create_immutable_from_format</function>，但创建的是
   <classname>DateTime</classname> 对象。
  </para>
  <para>
   此方法（包括参数、示例和注意事项）记录在 <link
   linkend="datetimeimmutable.createfromformat">DateTimeImmutable::createFromFormat</link> 页面上。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   参阅 <link
   linkend="datetimeimmutable.createfromformat">DateTimeImmutable::createFromFormat</link>。
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回 DateTime 对象&return.falseforfailure;。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   当 <parameter>datetime</parameter> 包含 NULL 字节时，此方法抛出 <exceptionname>ValueError</exceptionname>。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.21、8.1.8、8.2.0</entry>
      <entry>
       现在，当将 NULL 字节传递到 <parameter>datetime</parameter> 时，会引发
       <exceptionname>ValueError</exceptionname>，而之前会默默忽略该错误。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   有关大量示例，请参阅 <link
   linkend="datetimeimmutable.createfromformat">DateTimeImmutable::createFromFormat</link>。
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>DateTimeImmutable::createFromFormat</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
