<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 0466dd93f73635c728c6c4707aaf5876692f1ef3 Maintainer: yuanyuqiang Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<phpdoc:classref xml:id="class.dateperiod" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>DatePeriod 类</title>
 <titleabbrev>DatePeriod</titleabbrev>

 <partintro>

<!-- {{{ DatePeriod intro -->
  <section xml:id="dateperiod.intro">
   &reftitle.intro;
   <para>
    DatePeriod 类表示一个时间周期。
   </para>
   <para>
    时间周期内允许对一组日期和时间进行迭代，在指定的时间间隔内定期重复。
   </para>
  </section>
<!-- }}} -->

  <section xml:id="dateperiod.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>DatePeriod</classname>
    </ooclass>

    <classsynopsisinfo>
     <ooclass>
      <classname>DatePeriod</classname>
     </ooclass>

     <oointerface>
      <interfacename>IteratorAggregate</interfacename>
     </oointerface>
    </classsynopsisinfo>

    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="dateperiod.constants.exclude-start-date">DatePeriod::EXCLUDE_START_DATE</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="dateperiod.constants.include-end-date">DatePeriod::INCLUDE_END_DATE</varname>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>readonly</modifier>
     <type class="union"><type>DateTimeInterface</type><type>null</type></type>
     <varname linkend="dateperiod.props.start">start</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>readonly</modifier>
     <type class="union"><type>DateTimeInterface</type><type>null</type></type>
     <varname linkend="dateperiod.props.current">current</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>readonly</modifier>
     <type class="union"><type>DateTimeInterface</type><type>null</type></type>
     <varname linkend="dateperiod.props.end">end</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>readonly</modifier>
     <type class="union"><type>DateInterval</type><type>null</type></type>
     <varname linkend="dateperiod.props.interval">interval</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>readonly</modifier>
     <type>int</type>
     <varname linkend="dateperiod.props.recurrences">recurrences</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>readonly</modifier>
     <type>bool</type>
     <varname linkend="dateperiod.props.include-start-date">include_start_date</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>readonly</modifier>
     <type>bool</type>
     <varname linkend="dateperiod.props.include-end-date">include_end_date</varname>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.dateperiod')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])">
     <xi:fallback/>
    </xi:include>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.dateperiod')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>
<!-- }}} -->

  </section>
  
<!-- {{{ DatePeriod constants -->
  <section xml:id="dateperiod.constants">
   &reftitle.constants;
   <variablelist>
    <varlistentry xml:id="dateperiod.constants.exclude-start-date">
     <term><constant>DatePeriod::EXCLUDE_START_DATE</constant></term>
     <listitem>
      <para>在 <function>DatePeriod::__construct</function> 构造函数中使用，排除开始时间。</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="dateperiod.constants.include-end-date">
     <term><constant>DatePeriod::INCLUDE_END_DATE</constant></term>
     <listitem>
      <para>在 <function>DatePeriod::__construct</function> 构造函数中使用，包含结束时间。</para>
     </listitem>
    </varlistentry>

   </variablelist>
  </section>
<!-- }}} -->

  <section xml:id="dateperiod.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="dateperiod.props.recurrences">
     <term><varname>recurrences</varname></term>
     <listitem>
      <para>
       迭代器返回的最小实例数。
      </para>
      <para>
       如果在 <classname>DatePeriod</classname> 实例的构造函数中显式通过 <literal>$recurrences</literal>
       参数传递重复次数，然后此属性将包含该值，如果开始时间没有通过 <constant>DatePeriod::EXCLUDE_START_DATE</constant>
       禁用，则该属性<emphasis>加</emphasis> 1，如果结束时间已经通过 <constant>DatePeriod::INCLUDE_END_DATE</constant>
       启用，则该属性<emphasis>加</emphasis> 1。
      </para>
      <para>
       如果没有显式传递重复次数，则此属性包含返回实例的最小数量。这将是 
       <literal>0</literal>，如果开始时间没有通过 <constant>DatePeriod::EXCLUDE_START_DATE</constant>
       禁用，则该属性<emphasis>加</emphasis> 1，如果结束时间已经通过 <constant>DatePeriod::INCLUDE_END_DATE</constant>
       启用，则该属性<emphasis>加</emphasis> 1。
      </para>
      <para>
       <example>
        <programlisting role="php">
<![CDATA[<?php
$start = new DateTime('2018-12-31 00:00:00');
$end   = new DateTime('2021-12-31 00:00:00');
$interval = new DateInterval('P1M');
$recurrences = 5;

// 通过构造函数显式设置重复次数
$period = new DatePeriod($start, $interval, $recurrences, DatePeriod::EXCLUDE_START_DATE);
echo $period->recurrences, "\n";

$period = new DatePeriod($start, $interval, $recurrences);
echo $period->recurrences, "\n";

$period = new DatePeriod($start, $interval, $recurrences, DatePeriod::INCLUDE_END_DATE);
echo $period->recurrences, "\n";

// 构造函数中没有设置重复次数
$period = new DatePeriod($start, $interval, $end);
echo $period->recurrences, "\n";

$period = new DatePeriod($start, $interval, $end, DatePeriod::EXCLUDE_START_DATE);
echo $period->recurrences, "\n";
?>]]>
         </programlisting>
         &example.outputs;
         <screen role="php">
5
6
7
1
0
         </screen>
        </example>
       </para>
      <para>
       参见：<methodname>DatePeriod::getRecurrences</methodname>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="dateperiod.props.include-end-date">
     <term><varname>include_end_date</varname></term>
     <listitem>
      <para>
       在循环过程中，是否包含结束时间。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="dateperiod.props.include-start-date">
     <term><varname>include_start_date</varname></term>
     <listitem>
      <para>
       在循环过程中，是否包含开始时间。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="dateperiod.props.start">
     <term><varname>start</varname></term>
     <listitem>
      <para>
        时间周期的开始时间。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="dateperiod.props.current">
     <term><varname>current</varname></term>
     <listitem>
      <para>
       表示在时间周期内迭代的时候，当前的时间。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="dateperiod.props.end">
     <term><varname>end</varname></term>
     <listitem>
      <para>
       时间周期的结束时间。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="dateperiod.props.interval">
     <term><varname>interval</varname></term>
     <listitem>
      <para>
       ISO 8601 格式的间隔。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>

  <section role="changelog">
   &reftitle.changelog;
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.2.0</entry>
       <entry>
        新增 <constant>DatePeriod::INCLUDE_END_DATE</constant> 常量和
        <property>include_end_date</property> 属性。
       </entry>
      </row>
      <row>
       <entry>8.0.0</entry>
       <entry>
        现在 <classname>DatePeriod</classname> 实现了（implement）
        <interfacename>IteratorAggregate</interfacename>。之前实现的是
        <interfacename>Traversable</interfacename>。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </section>

 </partintro>

 &reference.datetime.entities.dateperiod;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
