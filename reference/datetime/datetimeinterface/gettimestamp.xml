<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 6071d92a37aa0dcda036e5c353072bb7cbfff739 Maintainer: mowangjuanzi Status: ready -->
<refentry xml:id="datetime.gettimestamp" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>DateTimeInterface::getTimestamp</refname>
  <refname>DateTimeImmutable::getTimestamp</refname>
  <refname>DateTime::getTimestamp</refname>
  <refname>date_timestamp_get</refname>
  <refpurpose>获取 Unix 时间戳</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="DateTimeInterface">
   <modifier>public</modifier> <type>int</type><methodname>DateTimeInterface::getTimestamp</methodname>
   <void/>
  </methodsynopsis>
  <methodsynopsis role="DateTimeImmutable">
   <modifier>public</modifier> <type>int</type><methodname>DateTimeImmutable::getTimestamp</methodname>
   <void/>
  </methodsynopsis>
  <methodsynopsis role="DateTime">
   <modifier>public</modifier> <type>int</type><methodname>DateTime::getTimestamp</methodname>
   <void/>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>int</type><methodname>date_timestamp_get</methodname>
   <methodparam><type>DateTimeInterface</type><parameter>object</parameter></methodparam>
  </methodsynopsis>
  <para>
   获取 Unix 时间戳。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回表示日期的 Unix 时间戳。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   如果时间戳不能表示为 &integer;，则抛出 <classname>ValueError</classname>。在 PHP 8.0.0 之前，在这种情况下返回
   &false;。不过，可以使用 <literal>U</literal> 格式和 <methodname>DateTimeInterface::format</methodname> 作为 &string; 检索时间戳。
  </para>
 </refsect1>

 <refsect1 role="changelog"><!-- {{{ -->
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       这些函数在失败时不再返回 &false;。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1><!-- }}} -->

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>DateTime::getTimestamp</function> 示例</title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php
$date = new DateTimeImmutable();
echo $date->getTimestamp();
?>
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php
$date = date_create();
echo date_timestamp_get($date);
?>
]]>
   </programlisting>
   &examples.outputs.similar;
   <screen>
<![CDATA[
1272509157
]]>
   </screen>
  </example>
  <para>
   如果需要以毫秒或微秒精度检索时间戳，则可以使用 <function>DateTimeInterface::format</function> 函数。
  </para>
  <example>
   <title>以毫秒和微秒精度检索时间戳</title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php
$date = new DateTimeImmutable();
$milli = (int)$date->format('Uv'); // Timestamp in milliseconds
$micro = (int)$date->format('Uu'); // Timestamp in microseconds

echo $milli, "\n", $micro, "\n";
?>
]]>
   </programlisting>
   &examples.outputs.similar;
   <screen>
<![CDATA[
1674057635586
1674057635586918
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>DateTime::setTimestamp</function></member>
   <member><function>DateTimeImmutable::setTimestamp</function></member>
   <member><function>DateTimeInterface::format</function></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
