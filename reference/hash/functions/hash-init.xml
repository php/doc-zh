<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 5bc68add3da3cd18c40f851e944b15095d3a26aa Maintainer: yuanyuqiang Status: ready -->
<!-- CREDITS: mowangjuanzi, Luffy -->
<!-- Generated by xml_proto.php v2.3. Found in /scripts directory of phpdoc. -->
<refentry xml:id="function.hash-init" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>hash_init</refname>
  <refpurpose>初始化增量散列运算上下文</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>HashContext</type><methodname>hash_init</methodname>
   <methodparam><type>string</type><parameter>algo</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter>key</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>[]</initializer></methodparam>
  </methodsynopsis>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>algo</parameter></term>
     <listitem>
      <para>
       要使用的散列算法名称，例如：“md5”、“sha256”、“haval160,4”等。如何获取受支持的算法清单，请参见
       <function>hash_algos</function>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       进行散列运算的可选设置，目前仅支持一个选项：<constant>HASH_HMAC</constant>。当指定此选项的时候，<emphasis>必须</emphasis>指定
       <parameter>key</parameter> 参数。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       当 <parameter>flags</parameter> 参数为 
       <constant>HASH_HMAC</constant> 时，使用此参数传入进行 HMAC 散列运算时的共享密钥。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       各种散列算法的一系列选项数组。
       目前 MurmurHash 算法仅支持 <literal>“seed”</literal> 参数。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回散列运算上下文对象，以供
   <function>hash_update</function>、<function>hash_update_stream</function>、<function>hash_update_file</function>
   和 <function>hash_final</function> 函数使用。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   如果 <parameter>algo</parameter> 未知或非加密散列函数，或者 <parameter>key</parameter>
   为空时，抛出 <classname>ValueError</classname> 异常。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.1.0</entry>
       <entry>新增 <parameter>options</parameter> 参数。</entry>
      </row>
      <row>
       <entry>8.0.0</entry>
       <entry>
        如果 <parameter>algo</parameter> 未知或非加密散列函数，或者 <parameter>key</parameter>
        为空时，现在抛出 <classname>ValueError</classname> 异常。之前返回 &false;
        并发出 <constant>E_WARNING</constant> 消息。
       </entry>
      </row>
      <row>
       <entry>7.2.0</entry>
       <entry>当使用 <constant>HASH_HMAC</constant> 选项的时候，不再支持非加密的散列函数（adler32，crc32，crc32b，fnv132，fnv1a32，fnv164，fnv1a64，joaat）。</entry>
      </row>
      <row>
       <entry>7.2.0</entry>
       <entry>
        返回 <classname>HashContext</classname> 对象，不再返回资源类型。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>增量散列运算示例</title>
    <programlisting role="php">
<![CDATA[
<?php
$hash = hash('sha256', 'The quick brown fox jumped over the lazy dog.');

$ctx = hash_init('sha256');
hash_update($ctx, 'The quick brown fox ');
hash_update($ctx, 'jumped over the lazy dog.');
$incremental_hash = hash_final($ctx);

echo $incremental_hash, PHP_EOL;
var_dump($hash === $incremental_hash);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
68b1282b91de2c054c36629cb8dd447f12f096d3e3c587978dc2248444633483
bool(true)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>hash</function></member>
    <member><function>hash_algos</function></member>
    <member><function>hash_file</function></member>
    <member><function>hash_hmac</function></member>
    <member><function>hash_hmac_file</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
