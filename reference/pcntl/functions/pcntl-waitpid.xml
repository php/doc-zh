<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 61374bbe228e8e9c55a24aba59a1e2bb2a871148 Maintainer: mowangjuanzi Status: ready -->
<!-- CREDITS: Luffy -->
<refentry xml:id="function.pcntl-waitpid" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pcntl_waitpid</refname>
  <refpurpose>等待或返回 fork 的子进程状态</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>pcntl_waitpid</methodname>
   <methodparam><type>int</type><parameter>process_id</parameter></methodparam>
   <methodparam><type>int</type><parameter role="reference">status</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">resource_usage</parameter><initializer>[]</initializer></methodparam>
  </methodsynopsis>
  <para>
  挂起当前进程的执行直到参数 <parameter>process_id</parameter> 指定的进程号的进程退出，
  或接收到一个信号要求中断当前进程或调用一个信号处理函数。
  </para>
  <para>
  如果 <parameter>process_id</parameter> 指定的子进程在此函数调用时已经退出（俗称僵尸进程），此函数
  将立刻返回。关于 waitpid 更详细的规范请参见系统的 waitpid（2）手册。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>process_id</parameter></term>
     <listitem>
      <para>
       参数 <parameter>process_id</parameter> 的值可以是以下之一：
       <table>
        <title><parameter>process_id</parameter> 可选值</title>
        <tgroup cols="2">
         <tbody>
          <row>
           <entry><literal>&lt; -1</literal></entry>
           <entry>
           等待任意进程组 ID 等于参数 <parameter>process_id</parameter> 给定值的绝对值的进程。
           </entry>
          </row>
          <row>
           <entry><literal>-1</literal></entry>
           <entry>
           等待任意子进程；与 wait 函数行为一致。
           </entry>
          </row>
          <row>
           <entry><literal>0</literal></entry>
           <entry>
           等待任意与调用进程组 ID 相同的子进程。
           </entry>
          </row>
          <row>
           <entry><literal>&gt; 0</literal></entry>
           <entry>
            等待进程号等于参数 <parameter>process_id</parameter> 值的子进程。
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
      <note>
       <para>
       指定 <literal>-1</literal> 作为 <parameter>process_id</parameter> 的值等同于 <function>pcntl_wait</function>
       提供（负的 <parameter>flags</parameter>）。
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>status</parameter></term>
     <listitem>
      <para>
       <function>pcntl_waitpid</function> 将会存储状态信息到 <parameter>status</parameter>
       参数上，这个通过 <parameter>status</parameter> 参数返回的状态信息可以用以下函数
       <function>pcntl_wifexited</function>、
       <function>pcntl_wifstopped</function>、
       <function>pcntl_wifsignaled</function>、
       <function>pcntl_wexitstatus</function>、
       <function>pcntl_wtermsig</function> 以及
       <function>pcntl_wstopsig</function> 获取其具体的值。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       <parameter>flags</parameter> 的值可以是以下两个常量中 0 个或多个 <literal>OR</literal> 运算的结果：
       <table>
        <title><parameter>flags</parameter> 可用的值</title>
        <tgroup cols="2">
         <tbody>
          <row>
           <entry><constant>WNOHANG</constant></entry>
           <entry>
            如果没有子进程退出立刻返回。
           </entry>
          </row>
          <row>
           <entry><constant>WUNTRACED</constant></entry>
           <entry>
            子进程已经退出并且其状态未报告时返回。
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>pcntl_waitpid</function> 返回退出的子进程进程号，发生错误时返回 -1，如果使用
   <constant>WNOHANG</constant> 并且没有可用子进程时返回 0。
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pcntl_fork</function></member>
    <member><function>pcntl_signal</function></member>
    <member><function>pcntl_wifexited</function></member>
    <member><function>pcntl_wifstopped</function></member>
    <member><function>pcntl_wifsignaled</function></member>
    <member><function>pcntl_wexitstatus</function></member>
    <member><function>pcntl_wtermsig</function></member>
    <member><function>pcntl_wstopsig</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
