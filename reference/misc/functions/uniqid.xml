<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 52c495140bdb84f45f186bfb1cccf09788b0121e Maintainer: daijie Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="function.uniqid" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>uniqid</refname>
  <refpurpose>生成一个唯一ID</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>uniqid</methodname>
   <methodparam choice="opt"><type>string</type><parameter>prefix</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>more_entropy</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   获取一个带前缀、基于当前时间微秒数的唯一ID。
  </para>
  &caution.cryptographically-insecure;
  <warning>
    <para>
     此函数不保证返回值的唯一性。由于绝大多数系统使用 NTP
     或者类似服务调整系统的时间，所以系统时间经常发生变化。此外，进程/线程可能不会返回唯一的 
     ID。用 <parameter>more_entropy</parameter> 来增加唯一性的概率。
    </para>
  </warning>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>prefix</parameter></term>
     <listitem>
      <para>
       有用的参数。例如：如果在多台主机上可能在同一微秒生成唯一ID。
      </para>
      <para>
       <parameter>prefix</parameter>为空，则返回的字符串长度为
       13。<parameter>more_entropy</parameter> 为 &true;，则返回的字符串长度为 23。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>more_entropy</parameter></term>
     <listitem>
      <para>
       如果设置为 &true;，<function>uniqid</function>
       会在返回的字符串结尾增加额外的熵（使用线性同余组合发生器）。
       使得唯一ID更具唯一性。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回字符串形式的唯一ID。
  </para>
  <warning>
   <para>
    此函数努力创建唯一识别符，但它不保证返回值得唯一性。
   </para>
  </warning>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>uniqid</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php
/* 一个 uniqid，像：4b3403665fea6 */
printf("uniqid(): %s\r\n", uniqid());

/* 也可以为uniqid 添加前缀，以下两种方式相同：
 *
 * $uniqid = $prefix . uniqid();
 * $uniqid = uniqid($prefix);
 */
printf("uniqid('php_'): %s\r\n", uniqid('php_'));

/* 还可以启用 more_entropy 参数，在 
 * 某些系统上是必须的，比如 Cygwin。这使得 uniqid()
 * 产生如下值：4b340550242239.64159797
 */
printf("uniqid('', true): %s\r\n", uniqid('', true));
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    在 Cygwin 环境下，为了使此函数能够工作，<parameter>more_entropy</parameter> 必须设置为 &true;。
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>random_bytes</function></member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
