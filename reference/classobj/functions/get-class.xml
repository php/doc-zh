<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: d6fbec8b2161d13e51af9763bbd1487b0b25bd42 Maintainer: HonestQiao Status: ready -->
<refentry xml:id="function.get-class" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>get_class</refname>
  <refpurpose>返回对象的类名</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>get_class</methodname>
   <methodparam choice="opt"><type>object</type><parameter>object</parameter></methodparam>
  </methodsynopsis>
  <para>
   返回对象实例 <parameter>object</parameter> 所属类的名字。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>object</parameter></term>
     <listitem>
      <para>
       要测试的对象。如果在类里，此参数可以省略。
      </para>
      <note>
       <simpara>
        Explicitly passing &null; as the <parameter>object</parameter> is no
        longer allowed as of PHP 7.2.0 and emits an <constant>E_WARNING</constant>.
        As of PHP 8.0.0, a <classname>TypeError</classname> is emitted when
        &null; is used.
       </simpara>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回对象实例 <parameter>object</parameter>
   所属类的名字。
  </para>
  <para>
   如果在一个类里，省略了参数 <parameter>object</parameter>，
   则返回当前所在类的名称。
  </para>
  <para>
    如果 <parameter>object</parameter> 是命名空间中某个类的实例，则会返回带上命名空间的类名。
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   如果用其他类型调用 <function>get_class</function>，而不是一个对象的话，
   <classname>TypeError</classname> is raised. Prior to PHP 8.0.0,
   an <constant>E_WARNING</constant> level error was raised.
  </para>
  <para>
   If <function>get_class</function> is called with no arguments from outside a class,
   <classname>Error</classname> is raised. Prior to PHP 8.0.0,
   an <constant>E_WARNING</constant> level error was raised.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        Calling this function from outside a class, without any arguments, will
        trigger an <classname>Error</classname>. Previously,
        an <constant>E_WARNING</constant> was raised
        and the function returned &false;.
       </entry>
      </row>
      <row>
       <entry>7.2.0</entry>
       <entry>
        Prior to this version the default value for <parameter>object</parameter>
        was &null; and it had the same effect as not passing any value. Now
        &null; has been removed as the default value for <parameter>object</parameter>,
        and is no longer a valid input.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>使用 <function>get_class</function></title>
    <programlisting role="php">
<![CDATA[
<?php

class foo {
    function name()
    {
        echo "My name is " , get_class($this) , "\n";
    }
}

// create an object
$bar = new foo();

// external call
echo "Its name is " , get_class($bar) , "\n";

// internal call
$bar->name();

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Its name is foo
My name is foo
]]>
    </screen>
   </example>
   <example>
    <title>超类中使用 <function>get_class</function></title>
    <programlisting role="php">
<![CDATA[
<?php

abstract class bar {
    public function __construct()
    {
        var_dump(get_class($this));
        var_dump(get_class());
    }
}

class foo extends bar {
}

new foo;

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(3) "foo"
string(3) "bar"
]]>
    </screen>
   </example>
   <example>
    <title>命名空间中的类使用 <function>get_class</function></title>
    <programlisting role="php">
<![CDATA[
<?php

namespace Foo\Bar;

class Baz {
    public function __construct()
    {

    }
}

$baz = new \Foo\Bar\Baz;

var_dump(get_class($baz));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(11) "Foo\Bar\Baz"
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>get_called_class</function></member>
    <member><function>get_parent_class</function></member>
    <member><function>gettype</function></member>
    <member><function>get_debug_type</function></member>
    <member><function>is_subclass_of</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
