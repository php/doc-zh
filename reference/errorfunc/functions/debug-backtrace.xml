<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 26a8f2141b987f95047435f83d2710eb11468778 Maintainer: daijie Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="function.debug-backtrace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>debug_backtrace</refname>
  <refpurpose>产生一条回溯跟踪(backtrace)</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>debug_backtrace</methodname>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer><constant>DEBUG_BACKTRACE_PROVIDE_OBJECT</constant></initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>debug_backtrace</function> 产生一条 PHP 的回溯跟踪(backtrace)。
  </para>
 </refsect1>
 
 <refsect1 role="parameters"><!-- {{{ -->
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       这个参数是以下选项的位掩码：
       <table>
        <title><function>debug_backtrace</function> 选项</title>
        <tgroup cols="2">
         <tbody>
          <row>
           <entry>DEBUG_BACKTRACE_PROVIDE_OBJECT</entry>
           <entry>
            是否填充 "object" 的索引。
           </entry>
          </row>
          <row>
           <entry>DEBUG_BACKTRACE_IGNORE_ARGS</entry>
           <entry>
            是否忽略 "args" 的索引，包括所有的 function/method 的参数，能够节省内存开销。
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      <note>
        <para>
         有四种可能的组合：
         <table>
          <title><function>debug_backtrace</function> 选项</title>
          <tgroup cols="2">
           <tbody>
            <row>
             <entry><code>debug_backtrace()</code></entry>
             <entry morerows="2" valign="middle">
              两个索引都有
             </entry>
            </row>
            <row>
             <entry><code>debug_backtrace(DEBUG_BACKTRACE_PROVIDE_OBJECT)</code></entry>
            </row>
            <row>
             <entry><code>debug_backtrace(1)</code></entry>
            </row>
            <row>
             <entry><code>debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS &amp; DEBUG_BACKTRACE_PROVIDE_OBJECT)</code></entry>
             <entry morerows="1" valign="middle">
              忽略索引 <literal>"object"</literal>。
             </entry>
            </row>
            <row>
             <entry><code>debug_backtrace(0)</code></entry>
            </row>
            <row>
             <entry><code>debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS)</code></entry>
             <entry morerows="1" valign="middle">
              忽略索引 <literal>"object"</literal> <emphasis>and</emphasis> index <literal>"args"</literal>。
             </entry>
            </row>
            <row>
             <entry><code>debug_backtrace(2)</code></entry>
            </row>
           </tbody>
          </tgroup>
         </table>
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limit</parameter></term>
     <listitem>
      <para>
       这个参数能够用于限制返回堆栈帧的数量。默认为（<parameter>limit</parameter>=<literal>0</literal>），返回所有的堆栈帧。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1><!-- }}} -->
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回一个包含众多关联数组的 <type>array</type>。
   以下为有可能返回的元素：
  </para>
  <para>
   <table>
    <title>有可能从 <function>debug_backtrace</function> 返回的元素</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Type;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>function</entry>
       <entry><type>string</type></entry>
       <entry>
        当前的函数名，参见：<link linkend="language.constants.predefined">__FUNCTION__</link>。
       </entry>
      </row>
      <row>
       <entry>line</entry>
       <entry><type>int</type></entry>
       <entry>
        当前的行号。参见：<link linkend="language.constants.predefined">__LINE__</link>。
       </entry>
      </row>
      <row>
       <entry>file</entry>
       <entry><type>string</type></entry>
       <entry>
        当前的文件名。参见：<link linkend="language.constants.predefined">__FILE__</link>。
       </entry>
      </row>
      <row>
       <entry>class</entry>
       <entry><type>string</type></entry>
       <entry>
        当前 <link linkend="language.oop5">class</link>
        的名称。参见<link linkend="language.constants.predefined">__CLASS__</link>
       </entry>
      </row>
      <row>
       <entry>object</entry>
       <entry><type>object</type></entry>
       <entry>
        当前的 <link linkend="language.oop5">object</link>。
       </entry>
      </row>
      <row>
       <entry>type</entry>
       <entry><type>string</type></entry>
       <entry>
        当前调用的类型。如果是一个方法，会返回 "-&gt;"。如果是一个静态方法，会返回 "::"。如果是一个函数调用，则返回空。
       </entry>
      </row>
      <row>
       <entry>args</entry>
       <entry><type>array</type></entry>
       <entry>
        如果在一个函数里，这会列出函数的参数。如果是在一个被包含的文件里，会列出包含的文件名。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>debug_backtrace</function> 范例</title>
    <programlisting role="php">
<![CDATA[
<?php
// filename: /tmp/a.php

function a_test($str)
{
    echo "\nHi: $str";
    var_dump(debug_backtrace());
}

a_test('friend');
?>

<?php
// filename: /tmp/b.php
include_once '/tmp/a.php';
?>
]]>
    </programlisting>
    <para>
     执行 <filename>/tmp/b.php</filename> 返回的结果类似于以下：
    </para>
    <screen>
<![CDATA[
Hi: friend
array(2) {
[0]=>
array(4) {
    ["file"] => string(10) "/tmp/a.php"
    ["line"] => int(10)
    ["function"] => string(6) "a_test"
    ["args"]=>
    array(1) {
      [0] => &string(6) "friend"
    }
}
[1]=>
array(4) {
    ["file"] => string(10) "/tmp/b.php"
    ["line"] => int(2)
    ["args"] =>
    array(1) {
      [0] => string(10) "/tmp/a.php"
    }
    ["function"] => string(12) "include_once"
  }
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>trigger_error</function></member>
    <member><function>debug_print_backtrace</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
