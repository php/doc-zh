<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: aaabaa98a82308ed1e135730982210ba8e024fe6 Maintainer: HonestQiao Status: ready -->
<!-- CREDITS: Luffy -->
<section xml:id="session.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
 <table>
  <title>会话配置选项</title>
  <tgroup cols="4">
   <thead>
    <row>
     <entry>&Name;</entry>
     <entry>&Default;</entry>
     <entry>&Changeable;</entry>
     <entry>&Changelog;</entry>
    </row>
   </thead>
   <tbody xml:id="session.configuration.list">
    <row>
     <entry><link linkend="ini.session.save-path">session.save_path</link></entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.name">session.name</link></entry>
     <entry>"PHPSESSID"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.save-handler">session.save_handler</link></entry>
     <entry>"files"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.auto-start">session.auto_start</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_PERDIR</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.gc-probability">session.gc_probability</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.gc-divisor">session.gc_divisor</link></entry>
     <entry>"100"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.gc-maxlifetime">session.gc_maxlifetime</link></entry>
     <entry>"1440"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.serialize-handler">session.serialize_handler</link></entry>
     <entry>"php"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.cookie-lifetime">session.cookie_lifetime</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.cookie-path">session.cookie_path</link></entry>
     <entry>"/"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.cookie-domain">session.cookie_domain</link></entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.cookie-secure">session.cookie_secure</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>在 PHP 7.2.0 之前，默认值是 <literal>""</literal>。</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.cookie-httponly">session.cookie_httponly</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>在 PHP 7.2.0 之前，默认值是 <literal>""</literal>。</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.cookie-samesite">session.cookie_samesite</link></entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>自 PHP 7.3.0 起有效</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.use-strict-mode">session.use_strict_mode</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>自 PHP 5.5.2 起有效</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.use-cookies">session.use_cookies</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.use-only-cookies">session.use_only_cookies</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.referer-check">session.referer_check</link></entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.cache-limiter">session.cache_limiter</link></entry>
     <entry>"nocache"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.cache-expire">session.cache_expire</link></entry>
     <entry>"180"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.use-trans-sid">session.use_trans_sid</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.trans-sid-tags">session.trans_sid_tags</link></entry>
     <entry>"a=href,area=href,frame=src,form="</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>自 PHP 7.1.0 起有效。</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.trans-sid-hosts">session.trans_sid_hosts</link></entry>
     <entry><literal>$_SERVER['HTTP_HOST']</literal></entry>
     <entry>PHP_INI_ALL</entry>
     <entry>自 PHP 7.1.0 起有效。</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.sid-length">session.sid_length</link></entry>
     <entry>"32"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>自 PHP 7.1.0 起有效。</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.sid-bits-per-character">session.sid_bits_per_character</link></entry>
     <entry>"4"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>自 PHP 7.1.0 起有效。</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.upload-progress.enabled">session.upload_progress.enabled</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_PERDIR</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.upload-progress.cleanup">session.upload_progress.cleanup</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_PERDIR</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.upload-progress.prefix">session.upload_progress.prefix</link></entry>
     <entry>"upload_progress_"</entry>
     <entry>PHP_INI_PERDIR</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.upload-progress.name">session.upload_progress.name</link></entry>
     <entry>"PHP_SESSION_UPLOAD_PROGRESS"</entry>
     <entry>PHP_INI_PERDIR</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.upload-progress.freq">session.upload_progress.freq</link></entry>
     <entry>"1%"</entry>
     <entry>PHP_INI_PERDIR</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.upload-progress.min-freq">session.upload_progress.min_freq</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_PERDIR</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.lazy-write">session.lazy_write</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.hash-function">session.hash_function</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>自 PHP 7.1.0 起移除。</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.hash-bits-per-character">session.hash_bits_per_character</link></entry>
     <entry>"4"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>自 PHP 7.1.0 起移除。</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.entropy-file">session.entropy_file</link></entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>自 PHP 7.1.0 起移除。</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.entropy-length">session.entropy_length</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>自 PHP 7.1.0 起移除。</entry>
    </row>
   </tbody>
  </tgroup>
 </table>
 &ini.php.constants;
 </para>
 <para>
  会话管理系统支持许多配置选项，可以在自己的 &php.ini; 文件中设定。这里只是个简短的概览。
 <variablelist>

  <varlistentry xml:id="ini.session.save-handler">
   <term>
    <parameter>session.save_handler</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.save_handler</literal>
     定义处理器（handler）名称，可以获取/储存关联 session 数据。
     默认为
     <literal>files</literal>。
     注意不同的扩展可能会注册它们各自的 <literal>save_handler</literal>。
     <function>phpinfo</function> 提到的预装数据，包含了注册过的 hander。
     可以参考 <function>session_set_save_handler</function>。
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.save-path">
   <term>
    <parameter>session.save_path</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.save_path</literal> 定义了传递给存储处理器的参数。如果选择了默认的
     files 文件处理器，则此值是创建文件的路径。默认为
     <literal>/tmp</literal>。参见
     <function>session_save_path</function>。
    </simpara>
    <para>
     此指令还有一个可选的 <literal>N</literal> 参数来决定会话文件分布的目录深度。例如，设定为
     <literal>'5;/tmp'</literal> 将使创建的会话文件和路径类似于
     <literal>/tmp/4/b/1/e/3/sess_4b1e384ad74619bd212e236e52a5a174If</literal>。要使用
     <literal>N</literal> 参数，必须在使用前先创建好这些目录。在 <filename>ext/session</filename>
     目录下有个小的 shell 脚本名叫 <filename>mod_files.sh</filename>，windows 版本是 <filename>mod_files.bat</filename>
     可以用来做这件事。此外注意如果使用了 <literal>N</literal> 参数并且大于
     0，那么将不会执行自动垃圾回收，更多信息见 &php.ini;。另外如果用了 <literal>N</literal>
     参数，要确保将 <literal>session.save_path</literal> 的值用双引号 "quotes"
     括起来，因为分隔符分号（ <literal>;</literal>）在 &php.ini; 中也是注释符号。
    </para>
    <para>
     文件储存模块默认使用 mode 600 创建文件。通过 修改可选参数 <literal>MODE</literal> 来改变这种默认行为：
     <literal>N;MODE;/path</literal> ，其中 <literal>MODE</literal> 是 mode 的八进制表示。 
      <literal>MODE</literal> 设置不影响进程的掩码(umask)。
    </para>
    <warning>
     <para>
      如果将此设定为一个全局可读的目录，例如
      <filename>/tmp</filename>（默认值），服务器上的其他用户有可能通过该目录的文件列表破解会话。
     </para>
    </warning>
    <caution>
     <para>
      使用以上描述的可选目录层级参数 <literal>N</literal> 时请注意，对于绝大多数站点，
      大于1或者2的值会不太合适——因为这需要创建大量的目录：
      例如，值设置为 3 需要在文件系统上创建 <literal>64^3</literal> 个目录，
      将浪费很多空间和 inode。
     </para>
     <para>
      仅仅在绝对肯定站点足够大时，才可以设置 <literal>N</literal> 大于2。
     </para>
    </caution>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.name">
   <term>
    <parameter>session.name</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.name</literal> 指定会话名以用做 cookie 的名字。只能由字母数字组成，默认为
     <literal>PHPSESSID</literal>。参见 <function>session_name</function>。
    </simpara>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="ini.session.auto-start">
   <term>
    <parameter>session.auto_start</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.auto_start</literal> 指定会话模块是否在请求开始时自动启动一个会话。默认为
     <literal>0</literal>（不启动）。
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.serialize-handler">
   <term>
    <parameter>session.serialize_handler</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.serialize_handler</literal> 定义用来序列化／反序列化的处理器名字。
     当前支持 PHP 序列化格式 (名为 <literal>php_serialize</literal>)、 PHP
      PHP 内部格式 (名为 <literal>php</literal> 及
     <literal>php_binary</literal>) 和 WDDX  (名为
     <literal>wddx</literal>)。
     
     如果 PHP 编译时加入了 <link linkend="ref.wddx">WDDX
     支持</link>，则只能用 WDDX。
     <literal>php_serialize</literal> 在内部简单地直接使用
     serialize/unserialize 函数，并且不会有 <literal>php</literal>
     和 <literal>php_binary</literal> 所具有的限制。
     
     使用较旧的序列化处理器导致 $_SESSION 的索引既不能是数字也不能包含特殊字符(<literal>|</literal> and <literal>!</literal>) 。
     
     使用 <literal>php_serialize</literal> 避免脚本退出时，数字及特殊字符索引导致出错。
     
     默认使用
      <literal>php</literal>。
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.gc-probability">
   <term>
    <parameter>session.gc_probability</parameter>
    <type>int</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.gc_probability</literal> 与
     <literal>session.gc_divisor</literal> 合起来用来管理 gc（garbage collection
     垃圾回收）进程启动的概率。默认为 <literal>1</literal>。详见 <link
     linkend="ini.session.gc-divisor">session.gc_divisor</link>。
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.gc-divisor">
   <term>
    <parameter>session.gc_divisor</parameter>
    <type>int</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.gc_divisor</literal> 与
     <literal>session.gc_probability</literal> 合起来定义了在每个会话初始化时启动
     gc（garbage collection 垃圾回收）进程的概率。此概率用
     gc_probability/gc_divisor 计算得来。例如 1/100
     意味着在每个请求中有 1% 的概率启动 gc 进程。<literal>session.gc_divisor</literal>
     默认为 <literal>100</literal>。
    </simpara>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="ini.session.gc-maxlifetime">
   <term>
    <parameter>session.gc_maxlifetime</parameter>
    <type>int</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.gc_maxlifetime</literal> 指定过了多少秒之后数据就会被视为“垃圾”并被清除。
     垃圾搜集可能会在 session 启动的时候开始（取决于
     <link linkend="ini.session.gc-probability">session.gc_probability</link> 和
     <link linkend="ini.session.gc-divisor">session.gc_divisor</link>）。
     默认为 <literal>1440</literal>（24分钟）。
    </simpara>
    <note>
     <para>
      如果不同的脚本具有不同的
      <literal>session.gc_maxlifetime</literal>
      数值但是共享了同一个地方存储会话数据，则具有最小数值的脚本会清理数据。此情况下，与
      <link linkend="ini.session.save-path">session.save_path</link> 一起使用本指令。
     </para>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.referer-check">
   <term>
    <parameter>session.referer_check</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.referer_check</literal> 包含有用来检查每个 HTTP
     Referer 的子串。如果客户端发送了 Referer
     信息但是在其中并未找到该子串，则嵌入的会话 ID 会被标记为无效。默认为空字符串。
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.entropy-file">
   <term>
    <parameter>session.entropy_file</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.entropy_file</literal> 给出了一个到外部资源（文件）的路径，该资源将在会话
     ID 创建进程中被用作附加的熵值资源。例如在许多 Unix 系统下都可以用
     <literal>/dev/random</literal> 或 <literal>/dev/urandom</literal>。
    </simpara>
    <simpara>
     在 Windows 上也支持此功能。
     设置  <literal>session.entropy_length</literal> 为非零的值将使 PHP 使用 Windows Random API 作为熵值源。
    </simpara>
    <note>
      <simpara>
       PHP 7.1.0 中移除。
      </simpara>
     <simpara>
     在 <literal>/dev/urandom</literal> 或 <literal>/dev/arandom</literal> 可用的时候，
      <literal>session.entropy_file</literal>  默认使用它们。
     </simpara>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.entropy-length">
   <term>
    <parameter>session.entropy_length</parameter>
    <type>int</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.entropy_length</literal> 指定了从上面的文件中读取的字节数。默认为
     <literal>0</literal>（禁用）。
    </simpara>
    <simpara>
      PHP 7.1.0 中移除。
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.use-strict-mode">
   <term>
    <parameter>session.use_strict_mode</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.use_strict_mode</literal>
     设置是否启用严格 session id 模式。
     开启此模式后，模块不会接受未初始化过的 session ID。
     从浏览器端传入未初始化的 session ID 后，将会发送一个新的 session ID 给它。
     通过 session 启用严格模式可固定 session 以保护应用。
     默认为 <literal>0</literal> （禁用）。
    </simpara>
    <note>
     <simpara>
      开启 <literal>session.use_strict_mode</literal> 是常规的 session 安全强制性措施。
      建议所有站点都开启此模式。
      可以参考 <function>session_create_id</function> 例子中的代码。
     </simpara>
    </note>
    <warning>
     <para>
      如果 <function>session_set_save_handler</function> 注册的自定义 session 处理器
      没有实现 <methodname>SessionUpdateTimestampHandlerInterface::validateId</methodname>，
      也没有相应提供 <parameter>validate_sid</parameter> 回调，那么无论上述指令的值如何设置，
      实际上严格 session ID 模式都是关闭状态的。
      尤其需要注意<emphasis>没有</emphasis>
      实现 <methodname>SessionHandler::validateId</methodname>
      的 <classname>SessionHandler</classname>。
     </para>
    </warning>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.use-cookies">
   <term>
    <parameter>session.use_cookies</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.use_cookies</literal> 指定是否在客户端用
     cookie 来存放会话 ID。默认为 <literal>1</literal>（启用）。
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.use-only-cookies">
   <term>
    <parameter>session.use_only_cookies</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.use_only_cookies</literal> 指定是否在客户端<emphasis
     role="strong">仅仅</emphasis>使用 cookie 来存放会话 ID。。启用此设定可以防止有关通过
     URL 传递会话 ID 的攻击。默认值为<literal>1</literal>（启用）
    </simpara>
   </listitem>
  </varlistentry>


  <varlistentry xml:id="ini.session.cookie-lifetime">
   <term>
    <parameter>session.cookie_lifetime</parameter>
    <type>int</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.cookie_lifetime</literal> 以秒数指定了发送到浏览器的
     cookie 的生命周期。值为 0
     表示“直到关闭浏览器”。默认为
     <literal>0</literal>。参见
     <function>session_get_cookie_params</function> 和
     <function>session_set_cookie_params</function>。
    </simpara>
    <note>
     <para>
      过期时间是根据服务器时间设置的，
      它没有必要和浏览器端的时间一致。
     </para>
    </note> 
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.cookie-path">
   <term>
    <parameter>session.cookie_path</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.cookie_path</literal> 指定了要设定会话 cookie 的路径。默认为
     <literal>/</literal>。参见
     <function>session_get_cookie_params</function> 和
     <function>session_set_cookie_params</function>。
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.cookie-domain">
   <term>
    <parameter>session.cookie_domain</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.cookie_domain</literal> 指定了要设定会话 cookie
     的域名。默认为无，表示根据 cookie 规范产生 cookie 的主机名。参见
     <function>session_get_cookie_params</function> 和
     <function>session_set_cookie_params</function>。
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.cookie-secure">
   <term>
    <parameter>session.cookie_secure</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.cookie_secure</literal> 指定是否仅通过安全连接发送
     cookie。默认为 <literal>off</literal>。此设定是 PHP 4.0.4 添加的。参见
     <function>session_get_cookie_params</function> 和
     <function>session_set_cookie_params</function>。
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.cookie-httponly">
   <term>
    <parameter>session.cookie_httponly</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <simpara>
     设置 cookie 仅能够通过 HTTP 协议访问。
     它意味着 cookie 无法通过类似 JavaScript 这样的脚本语言访问。
     该设置可有效避免 XSS 攻击窃取身份（但并非所有浏览器都支持）。
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.cookie-samesite">
   <term>
    <parameter>session.cookie_samesite</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     Allows servers to assert that a cookie ought not to be sent along with
     cross-site requests. This assertion allows user agents to mitigate the risk
     of cross-origin information leakage, and provides some protection against
     cross-site request forgery attacks. Note that this is not supported by all
     browsers.
     An empty value means that no SameSite cookie attribute will be set.
     <literal>Lax</literal> and <literal>Strict</literal> mean that the cookie
     will not be sent cross-domain for POST requests; <literal>Lax</literal>
     will sent the cookie for cross-domain GET requests, while <literal>Strict</literal>
     will not.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.cache-limiter">
   <term>
    <parameter>session.cache_limiter</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.cache_limiter</literal>
     指定会话页面所使用的缓冲控制方法（
     <literal>none</literal>/<literal>nocache</literal>/
     <literal>private</literal>/<literal>
       private_no_expire</literal>/<literal>public</literal>）。默认为
     <literal>nocache</literal>。参见
     <function>session_cache_limiter</function> 文档查看各个值的含义。
    </simpara>
   </listitem>
  </varlistentry>


  <varlistentry xml:id="ini.session.cache-expire">
   <term>
    <parameter>session.cache_expire</parameter>
    <type>int</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.cache_expire</literal> 以分钟数指定缓冲的会话页面的存活期，此设定对
     nocache 缓冲控制方法无效。默认为 <literal>180</literal>。参见
     <function>session_cache_expire</function>。
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.use-trans-sid">
   <term>
    <parameter>session.use_trans_sid</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.use_trans_sid</literal> 指定是否启用透明 SID
     支持。默认为 <literal>0</literal>（禁用）。
    </simpara>
    <note>
     <simpara>
      基于 URL 的会话管理比基于 cookie 的会话管理有更多安全风险。例如用户有可能通过
      email 将一个包含有效的会话 ID 的 URL 发给他的朋友，或者用户总是有可能在收藏夹中存有一个包含会话
      ID 的 URL 来以同样的会话 ID 去访问站点。
     </simpara>
     <simpara>
      自 PHP 7.1.0 开始，透明 SID 开始使用完整的 URL 绝对路径，例如 https://php.net/。
      在此之前 PHP 只会使用相对路径。使用 <link
      linkend="ini.session.trans-sid-hosts">session.trans_sid_hosts</link> 定义重写的目标 host。
     </simpara>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.trans-sid-tags">
    <term>
     <parameter>session.trans_sid_tags</parameter>
     <type>string</type>
    </term>
    <listitem>
     <simpara>
      开启支持透明 sid 时， <literal>session.trans_sid_tags</literal>
      指定是否需要重写 HTML 标签来包含 session id。
      默认为
      <literal>a=href,area=href,frame=src,input=src,form=</literal>
     </simpara>
     <simpara>
      <literal>form</literal> 是个特殊标签。
      <literal>&lt;input hidden="session_id" name="session_name"&gt;</literal>
      作为表单变量添加。
     </simpara>
     <note>
      <simpara>
       PHP 7.1.0 之前，<link linkend="ini.url-rewriter.tags">url_rewriter.tags</link>
       用于此目的。
       PHP 7.1.0 之后，<literal>fieldset</literal> 不再作为特殊标签对待。
      </simpara>
     </note>
    </listitem>
   </varlistentry>

  <varlistentry xml:id="ini.session.trans-sid-hosts">
   <term>
    <parameter>session.trans_sid_hosts</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     当透明 sid 支持开启时，<literal>session.trans_sid_hosts</literal>
     设置了要重写包含 session 的主机名，
     默认为 <literal>$_SERVER['HTTP_HOST']</literal>。
     多个主机用半角逗号 "," 分隔；主机名之间不能用空格。
     例如 <literal>php.net,wiki.php.net,bugs.php.net</literal>。
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.sid-length">
    <term>
     <parameter>session.sid_length</parameter>
     <type>int</type>
    </term>
    <listitem>
     <simpara>
      通过 <literal>session.sid_length</literal> 可以设置
      session ID 字符串长度。
      Session ID 的长度可以是在 22 到 256 之间。
     </simpara>
     <simpara>
      默认是 32。
      如果需要较好的兼容性可以设置为 32、40 等。
      较长的 session ID 会更难猜测。
      推荐至少要 32 个字符。
     </simpara>
     <tip>
      <para>
       Compatibility Note: Use 32 instead of
       <literal>session.hash_function</literal>=0 (MD5) and
       <literal>session.hash_bits_per_character</literal>=4,
       <literal>session.hash_function</literal>=1 (SHA1) and
       <literal>session.hash_bits_per_character</literal>=6. Use 26 instead of
       <literal>session.hash_function</literal>=0 (MD5) and
       <literal>session.hash_bits_per_character</literal>=5. Use 22 instead of
       <literal>session.hash_function</literal>=0 (MD5) and
       <literal>session.hash_bits_per_character</literal>=6.
       必须正确配置 INI 值，让 session ID 至少有 128 比特（bits）。
       不要忘了为 <literal>session.sid_bits_per_character</literal>
       设置合适的值；否则将会有一个较弱的 session ID。
      </para>
     </tip> 
     <note>
      <simpara>
       PHP 7.1.0 中加入该设置。
      </simpara>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.session.sid-bits-per-character">
    <term>
     <parameter>session.sid_bits_per_character</parameter>
     <type>int</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.sid_bits_per_character</literal> 设置要编码 session ID 字符的比特数。
      可能的设置有：
      '4'（0-9、a-f）、'5'（0-9、a-v）、'6'（0-9、a-z、A-Z、"-"、","）。
     </simpara>
     <simpara>
      默认为 4。
      更多的比特数会产生更强健的 session ID。
      对于绝大多数环境，推荐值是 5。
     </simpara>
     <para>
     </para>
     <note>
      <simpara>
       PHP 7.1.0 中加入该设置。
      </simpara>
     </note>
    </listitem>
   </varlistentry>

  <varlistentry xml:id="ini.session.hash-function">
   <term>
    <parameter>session.hash_function</parameter>
    <type>mixed</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.hash_function</literal> 允许用户指定生成会话
     ID 的散列算法。'0' 表示 MD5（128 位），'1' 表示 SHA-1（160 位）。
    </simpara>
    <para>
     还可以指定 <link linkend="ref.hash">hash 扩展</link>（开启的时候）
     支持的任意算法，例如 <literal>sha512</literal> 或
     <literal>whirlpool</literal>。
     可通过 <function>hash_algos</function> 函数获取支持的算法完整名单。
    </para>
    <note>
     <para>
      PHP 7.1.0 中已经移除。
     </para>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.hash-bits-per-character">
   <term>
    <parameter>session.hash_bits_per_character</parameter>
    <type>int</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.hash_bits_per_character</literal>
     允许用户定义将二进制散列数据转换为可读的格式时每个字符存放多少个比特。可能值为
     '4'（0-9，a-f），'5'（0-9，a-v），以及 '6'（0-9，a-z，A-Z，"-"，","）。
    </simpara>
    <note>
     <para>
      这是 PHP 5 引进的。
     </para>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.upload-progress.enabled">
   <term>
    <parameter>session.upload_progress.enabled</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <simpara>
     Enables upload progress tracking, populating the <varname>$_SESSION</varname> variable.
     Defaults to 1, enabled.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.upload-progress.cleanup">
   <term>
    <parameter>session.upload_progress.cleanup</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <simpara>
     Cleanup the progress information as soon as all POST data has been read
     (i.e. upload completed). Defaults to 1, enabled.
    </simpara>
    <note>
     <simpara>
      It is highly recommended to keep this feature enabled.
     </simpara>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.upload-progress.prefix">
   <term>
    <parameter>session.upload_progress.prefix</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     A prefix used for the upload progress key in the <varname>$_SESSION</varname>.
     This key will be concatenated with the value of
     <literal>$_POST[ini_get("session.upload_progress.name")]</literal> to
     provide a unique index.
    </simpara>
    <simpara>
     Defaults to "upload_progress_".
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.upload-progress.name">
   <term>
    <parameter>session.upload_progress.name</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     The name of the key to be used in <varname>$_SESSION</varname> storing
     the progress information. See also
     <link linkend="ini.session.upload-progress.prefix">session.upload_progress.prefix</link>.
    </simpara>
    <simpara>
     If <literal>$_POST[ini_get("session.upload_progress.name")]</literal>
     is not passed or available, upload progressing will not be recorded.
    </simpara>
    <simpara>
     Defaults to "PHP_SESSION_UPLOAD_PROGRESS".
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.upload-progress.freq">
   <term>
    <parameter>session.upload_progress.freq</parameter>
    <type>mixed</type>
   </term>
   <listitem>
    <simpara>
     Defines how often the upload progress information should be updated.
     This can be defined in bytes (i.e. "update progress information after every 100 bytes"), or in percentages (i.e. "update progress information after receiving every 1% of the whole filesize").
    </simpara>
    <simpara>
     Defaults to "1%".
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.upload-progress.min-freq">
   <term>
    <parameter>session.upload_progress.min_freq</parameter>
    <type>int</type>
   </term>
   <listitem>
    <simpara>
     The minimum delay between updates, in seconds.
     Defaults to "1" (one second).
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.lazy-write">
   <term>
    <parameter>session.lazy_write</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.lazy_write</literal>，设置成 1 的含义是：
     只有 session 数据发生变化时才需要重新写入。默认为开启状态 1。
    </simpara>
   </listitem>
  </varlistentry>

 </variablelist>
 </para>

 <para>
  Upload progress will not be registered unless
  session.upload_progress.enabled is enabled, and the
  $_POST[ini_get("session.upload_progress.name")] variable is set.
  See <link linkend="session.upload-progress">Session Upload Progress</link> for mor details on this functionality.
 </para>


</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
