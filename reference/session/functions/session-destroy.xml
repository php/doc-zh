<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 35b95a56ccc03b66af7117fc815ac7881e2e0ad3 Maintainer: yuanyuqiang Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.session-destroy">
 <refnamediv>
  <refname>session_destroy</refname>
  <refpurpose>销毁一个会话中的全部数据</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>session_destroy</methodname>
   <void/>
  </methodsynopsis>
  <simpara>
   <function>session_destroy</function> 销毁当前会话中的全部数据，
   但是不会重置当前会话所关联的全局变量，
   也不会重置会话 cookie。
   如果需要再次使用会话变量，
   必须重新调用 <function>session_start</function> 函数。
  </simpara>
  <note>
   <simpara>
    通常情况下，在你的代码中不必调用 <function>session_destroy</function> 函数，
    可以直接清除 $_SESSION 数组中的数据来实现会话数据清理。
   </simpara>
  </note>
  <para>
   为了彻底销毁会话，必须同时重置会话 ID。
   如果是通过 cookie 方式传送会话 ID 的，那么同时也需要
   调用 <function>setcookie</function> 函数来
   删除客户端的会话 cookie。
  </para>
  <para>
   当启用了 <link linkend="ini.session.use-strict-mode">session.use_strict_mode</link> 配置项的时候，你不需要删除过期会话 ID 对应的 cookie，
   因为会话模块已经不再接受携带过期会话 ID 的 cookie 了，
   然后它会生成一个新的会话 ID cookie。
   建议所有的站点都启用 <link linkend="ini.session.use-strict-mode">session.use_strict_mode</link> 配置项。
  </para>
  <warning>
   <para>
    过早的删除会话中的数据可能会导致不可预期的结果。
    例如，当存在从 JavaScript 或者 URL 链接过来的并发请求的时候，
    某一个请求删除了会话中的数据，会导致其他的并发请求无法使用会话数据。
   </para>
   <para>
    虽然当前的会话处理模块不会接受为空的会话 ID，
    但是由于客户端（浏览器）的处理方式，
    立即删除会话中的数据可能会导致生成为空的会话 cookie，
    进而导致客户端生成很多不必要的会话 ID cookie。
   </para>
   <para>
    为了避免这种情况的发生，你需要在 $_SESSION 中设置一个时间戳，
    在这个时间戳之后的对于会话的访问都将被拒绝。
    或者，确保你的应用中不存在并发请求。
    这个规则同样适用于 <function>session_regenerate_id</function>。
   </para>
  </warning>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>销毁会话数据以及 <varname>$_SESSION</varname></title>
    <programlisting role="php">
<![CDATA[
<?php
// 初始化会话。
// 如果要使用会话，别忘了现在就调用：
session_start();

// 重置会话中的所有变量
$_SESSION = array();

// 如果要清理的更彻底，那么同时删除会话 cookie
// 注意：这样不但销毁了会话中的数据，还同时销毁了会话本身
if (ini_get("session.use_cookies")) {
    $params = session_get_cookie_params();
    setcookie(session_name(), '', time() - 42000,
        $params["path"], $params["domain"],
        $params["secure"], $params["httponly"]
    );
}

// 最后，销毁会话
session_destroy();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    对于旧版本中不使用 <varname>$_SESSION</varname> 的代码，
    仅能使用 <function>session_unset</function> 来完成会话销毁工作。
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="ini.session.use-strict-mode">session.use_strict_mode</link></member>
    <member><function>session_reset</function></member>
    <member><function>session_regenerate_id</function></member>
    <member><function>unset</function></member>
    <member><function>setcookie</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
