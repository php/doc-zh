<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 7b6a20ed5d1f1bec158b0c57b69bf021a9ed2799 Maintainer: 谢毅斌 Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="reflectionmethod.setaccessible" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ReflectionMethod::setAccessible</refname>
  <refpurpose>设置方法是否可访问</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>ReflectionMethod::setAccessible</methodname>
   <methodparam><type>bool</type><parameter>accessible</parameter></methodparam>
  </methodsynopsis>
  <para>
   通过 <methodname>ReflectionMethod::invoke</methodname> 方法启用对 protected 或 private 方法的调用。
  </para>
  <note>
   <simpara>
    自 PHP 8.1.0 起，调用此方法无效；默认情况下，所有方法都可调用。
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>accessible</parameter></term>
     <listitem>
      <para>
       可以访问设置 &true;，否则设置 &false;。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>简单类定义</title>
   <programlisting role="php">
<![CDATA[
<?php
class MyClass
{
    private function foo()
    {
        return 'bar';
    }
}

$method = new ReflectionMethod("MyClass", "foo");
$method->setAccessible(true);

$obj = new MyClass();
echo $method->invoke($obj);
echo $obj->foo();
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
bar
Fatal error: Uncaught Error: Call to private method MyClass::foo() from global scope in /in/qdaZS:16
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>ReflectionMethod::isPrivate</methodname></member>
    <member><methodname>ReflectionMethod::isProtected</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
