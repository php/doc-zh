<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4658c8e6ce1cae4c1bd9c51e93a32809a487217f Maintainer: daijie Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<phpdoc:classref xml:id="class.reflectionparameter" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>ReflectionParameter 类</title>
 <titleabbrev>ReflectionParameter</titleabbrev>

 <partintro>

<!-- {{{ ReflectionParameter intro -->
  <section xml:id="reflectionparameter.intro">
   &reftitle.intro;
   <para>
    <classname>ReflectionParameter</classname> 检索函数或方法参数的相关信息。
   </para>
   <para>
    要自行检查函数的参数，首先创建 <classname>ReflectionFunction</classname> 或
    <classname>ReflectionMethod</classname> 的实例，然后使用它们的
    <methodname>ReflectionFunctionAbstract::getParameters</methodname> 方法来检索参数的数组。
   </para>
  </section>
<!-- }}} -->

  <section xml:id="reflectionparameter.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>ReflectionParameter</classname>
    </ooclass>

    <classsynopsisinfo>
     <ooclass>
      <classname>ReflectionParameter</classname>
     </ooclass>

     <oointerface>
      <interfacename>Reflector</interfacename>
     </oointerface>
    </classsynopsisinfo>

    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>string</type>
     <varname linkend="reflectionparameter.props.name">name</varname>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.reflectionparameter')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[@role='ReflectionParameter'])">
     <xi:fallback/>
    </xi:include>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.reflectionparameter')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[@role='ReflectionParameter'])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>
<!-- }}} -->

  </section>

  
<!-- {{{ ReflectionParameter properties -->
  <section xml:id="reflectionparameter.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="reflectionparameter.props.name">
     <term><varname>name</varname></term>
     <listitem>
      <para>
       参数名。只读，在尝试赋值的时候会抛出 <classname>ReflectionException</classname>。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->

  <section role="changelog">
   &reftitle.changelog;
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        已移除 <methodname>ReflectionParameter::export</methodname>。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </section>
 </partintro>

 &reference.reflection.entities.reflectionparameter;

</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
