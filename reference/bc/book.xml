<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 46a9cdd2dbef4ec89bf65fad9930e2feb78bbb98 Maintainer: daijie Status: ready -->
<!-- CREDITS: Luffy -->
<book xml:id="book.bc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <?phpdoc extension-membership="bundled" ?>
 <title>BCMath 任意精度数学</title>
 <titleabbrev>BC Math</titleabbrev>

 <!-- {{{ preface -->
 <preface xml:id="intro.bc">
  &reftitle.intro;
  <para>
    对于任意精度的数学， 如果有足够多的内存，PHP 提供的 BCMath 支持用字符串的形式表示任意大小和精度的数字，最大尺寸为
   <literal>2147483647</literal>（即 <literal>0x7FFFFFFF</literal>）。
  </para>
  <para>
   有效（即格式良好）的 BCMath 数字是匹配正则表达式
   <literal>/^[+-]?[0-9]*(\.[0-9]*)?$/</literal> 的字符串。
  </para>
  <caution>
   <para>
    BCMath 函数想要操作的是 <type>string</type>，如果传入了 <type>float</type> 可能无法达到想要的效果，
    因为 PHP 会将 <type>float</type> 的值转换为 <type>string</type>。
    也就意味着 <type>string</type> 可能会带科学计数法符号（BCMath 并不支持），
    另外在 PHP 8.0.0 之前，小数点分隔符也不支持本地化（BCMath 只能识别英文句号小数点）。
   </para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$num1 = 0; // (string) 0 => '0'
$num2 = -0.000005; // (string) -0.000005 => '-5.05E-6'
echo bcadd($num1, $num2, 6); // => '0.000000'

setlocale(LC_NUMERIC, 'de_DE'); // 使用逗号小数点
$num2 = 1.2; // (string) 1.2 => '1,2'
echo bcsub($num1, $num2, 1); // => '0.0'
?>
]]>
    </programlisting>
   </informalexample>
  </caution>
 </preface>
 <!-- }}} -->

 &reference.bc.setup;
 &reference.bc.reference;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
