<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 0ce949d098c21c0109d289c372cc02d12228dbd3 Maintainer: daijie Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="pdo.query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::query</refname>
  <refpurpose>
    预处理并执行没有占位符的 SQL 语句
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type class="union"><type>PDOStatement</type><type>false</type></type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>fetchMode</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>

  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type class="union"><type>PDOStatement</type><type>false</type></type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>fetchMode</parameter><initializer>PDO::FETCH_COLUMN</initializer></methodparam>
   <methodparam><type>int</type><parameter>colno</parameter></methodparam>
  </methodsynopsis>

  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type class="union"><type>PDOStatement</type><type>false</type></type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>fetchMode</parameter><initializer>PDO::FETCH_CLASS</initializer></methodparam>
   <methodparam><type>string</type><parameter>classname</parameter></methodparam>
   <methodparam><type>array</type><parameter>constructorArgs</parameter></methodparam>
  </methodsynopsis>

  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type class="union"><type>PDOStatement</type><type>false</type></type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>fetchMode</parameter><initializer>PDO::FETCH_INTO</initializer></methodparam>
   <methodparam><type>object</type><parameter>object</parameter></methodparam>
  </methodsynopsis>

  <para>
   <methodname>PDO::query</methodname> 在单次函数调用内预处理并执行 SQL 语句，以 <classname>PDOStatement</classname> 对象形式返回结果集（如果有数据的话）。
   
  </para>
  <para>
   如果反复调用同一个查询，用 <methodname>PDO::prepare</methodname> 准备 <classname>PDOStatement</classname> 对象，并用 <methodname>PDOStatement::execute</methodname> 执行语句，将具有更好的性能。
  </para>
  <para>
   如果没有完整获取结果集内的数据，就调用下一个 <methodname>PDO::query</methodname>，将可能调用失败。应当在执行下一个 <methodname>PDO::query</methodname>
   前，先用 <methodname>PDOStatement::closeCursor</methodname> 释放数据库 <classname>PDOStatement</classname> 关联的资源。
  </para>

  <note>
   <para>
    如果 <parameter>query</parameter> 包含占位符，则必须使用 <methodname>PDO::prepare</methodname> 和 <methodname>PDOStatement::execute</methodname>
    方法分别预处理和执行语句。
   </para>
  </note>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>query</parameter></term>
      <listitem>
       <para>
         预处理和执行的 SQL 语句。
       </para>
       <para>
        如果 SQL 包含占位符，则必须使用 <methodname>PDO::prepare</methodname> 和
        <methodname>PDOStatement::execute</methodname>。或者在调用 <methodname>PDO::query</methodname>
        之前手动预处理 SQL，如果驱动程序支持，使用 <methodname>PDO::quote</methodname> 正确格式化数据。
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>fetchMode</parameter></term>
      <listitem>
       <para>
        返回 <classname>PDOStatement</classname> 的默认获取模式。必须是
        <link linkend="pdo.constants"><literal>PDO::FETCH_*</literal></link> 常量之一。
       </para>
       <para>
        If this argument is passed to the function, the remaining arguments
        will be treated as though <methodname>PDOStatement::setFetchMode</methodname>
        was called on the resultant statement object.
        The subsequent arguments vary depending on the selected fetch mode.
       </para>
      </listitem>
     </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回 <classname>PDOStatement</classname> 对象&return.falseforfailure;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>没有占位符的 SQL 可以使用 <methodname>PDO::query</methodname> 执行</title>
    <programlisting role="php">
<![CDATA[
<?php
$sql = 'SELECT name, color, calories FROM fruit ORDER BY name';
foreach ($conn->query($sql) as $row) {
    print $row['name'] . "\t";
    print $row['color'] . "\t";
    print $row['calories'] . "\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
apple   red     150
banana  yellow  250
kiwi    brown   75
lemon   yellow  25
orange  orange  300
pear    green   150
watermelon      pink    90
]]>
    </screen>
   </example>
  </para>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDO::exec</methodname></member>
    <member><methodname>PDO::prepare</methodname></member>
    <member><methodname>PDOStatement::execute</methodname></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
