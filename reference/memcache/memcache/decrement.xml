<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: b95d28e6ec86e4a71e012737d36ebdc1cf009180 Maintainer: HonestQiao Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="memcache.decrement" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Memcache::decrement</refname>
  <refpurpose>减小元素的值</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>Memcache::decrement</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>value</parameter><initializer>1</initializer></methodparam>
  </methodsynopsis>

  <para>
   <function>Memcache::decrement</function>方法将元素的值减小<parameter>value</parameter>。 类似于 
   <function>Memcache::increment</function>方法，首先将元素当前值转换成数值然后减去<parameter>value</parameter>。
   <note>
    <para>
    新的元素的值不会小于0。
    </para>
   </note>
   <note>
    <para>
    不要将<function>Memcache::decrement</function>方法用于压缩存储的元素，那样作会导致
    <function>Memcache::get</function>方法获取值会失败。
    </para>
   </note>
   <function>Memcache::decrement</function>在元素不存在时<emphasis>不能</emphasis>创建它。
   同样可以使用<function>memcache_decrement</function>函数来完成相同的工作。
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       要减小值的元素的key。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       <parameter>value</parameter>参数指要将指定元素的值减小多少。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   成功的时候返回元素的新值&return.falseforfailure;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>Memcache::decrement</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php

/* procedural API */
$memcache_obj = memcache_connect('memcache_host', 11211);
/* 将test_item对应的值减小2 */
$new_value = memcache_decrement($memcache_obj, 'test_item', 2);

/* OO API */
$memcache_obj = new Memcache;
$memcache_obj->connect('memcache_host', 11211);
/* decrement item by 3 */
$new_value = $memcache_obj->decrement('test_item', 3);
?>
]]>
     </programlisting>
    </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Memcache::increment</function></member>
    <member><function>Memcache::replace</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
