<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 5bc68add3da3cd18c40f851e944b15095d3a26aa Maintainer: duanxiaoqiang Status: ready -->
<!-- CREDITS: mowangjuanzi, Luffy -->
<refentry xml:id="function.openssl-seal" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>openssl_seal</refname>
  <refpurpose>密封 (加密) 数据</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>openssl_seal</methodname>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter>data</parameter></methodparam>
   <methodparam><type>string</type><parameter role="reference">sealed_data</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">encrypted_keys</parameter></methodparam>
   <methodparam><type>array</type><parameter>public_key</parameter></methodparam>
   <methodparam><type>string</type><parameter>cipher_algo</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter role="reference">iv</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>openssl_seal</function> 使用随机生成的密钥和给定的 <parameter>cipher_algo</parameter> 方法密封（加密）<parameter>data</parameter>
   数据。密钥用与 <parameter>public_key</parameter> 中的标识符相关联的每个公共密钥加密，并且每个加密密钥在 <parameter>encrypted_keys</parameter>
   中返回。这意味着一个人可以将密封的数据发送给多个接收者（如果一个人已经获得了他们的公钥）。每个接收方都必须同时接收加密的数据和用接收方的公钥加密的信封密钥。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       要密封的数据。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sealed_data</parameter></term>
     <listitem>
      <para>
       被密封后的数据。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>encrypted_keys</parameter></term>
     <listitem>
      <para>
       已被加密的密钥数组。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>public_key</parameter></term>
     <listitem>
      <para>
       包含公钥的 <classname>OpenSSLAsymmetricKey</classname> 实例数组。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cipher_algo</parameter></term>
     <listitem>
      <para>
       加密算法。
       <caution>
        <simpara>
         默认值（<literal>'RC4'</literal>）认为不安全。强烈建议明确指定安全密码方法。
        </simpara>
       </caution>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>iv</parameter></term>
     <listitem>
      <para>
       初始化向量。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   成功时返回密封后数据的长度，错误为 &false;。
   如果密封后的数据成功地通过 <parameter>sealed_data</parameter> 变量返回，那么信封密钥也将会通过 <parameter>encrypted_keys</parameter> 变量返回。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>public_key</parameter> 现在接受 <classname>OpenSSLAsymmetricKey</classname>
       实例 &array;；之前接受类型 <literal>OpenSSL key</literal> 的 &resource; 数组。
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>cipher_algo</parameter> 不再是可选参数。
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>iv</parameter> 现在可为 null。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>openssl_seal</function> 示例</title>
    <programlisting role="php">
<![CDATA[
<?php
// $data is assumed to contain the data to be sealed

// fetch public keys for our recipients, and ready them
$fp = fopen("/src/openssl-0.9.6/demos/maurice/cert.pem", "r");
$cert = fread($fp, 8192);
fclose($fp);
$pk1 = openssl_get_publickey($cert);
// Repeat for second recipient
$fp = fopen("/src/openssl-0.9.6/demos/sign/cert.pem", "r");
$cert = fread($fp, 8192);
fclose($fp);
$pk2 = openssl_get_publickey($cert);

// seal message, only owners of $pk1 and $pk2 can decrypt $sealed with keys
// $ekeys[0] and $ekeys[1] respectively.
openssl_seal($data, $sealed, $ekeys, array($pk1, $pk2));

// free the keys from memory
openssl_free_key($pk1);
openssl_free_key($pk2);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>openssl_open</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
