<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 5106807f258ed4b465f89b9faf4375f628e02b98 Maintainer: Szopen Xiao Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="function.readline-callback-handler-install" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>readline_callback_handler_install</refname>
  <refpurpose>初始化 readline 回调接口和终端，然后打印提示并立即返回</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>readline_callback_handler_install</methodname>
   <methodparam><type>string</type><parameter>prompt</parameter></methodparam>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
  </methodsynopsis>
  <para>
   设置 readline 回调接口然后打印 <parameter>prompt</parameter>
   并立即返回。在不移除旧的回调接口的情况下再次调用此函数，将自动覆盖旧接口。
  </para>
  <para>
   与 <function>stream_select</function> 结合使用时，回调功能很有用，因为允许
   IO 和用户输入交互，这与 <function>readline</function> 不同。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>prompt</parameter></term>
     <listitem>
      <para>
       提示信息。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       <parameter>callback</parameter> 函数接受一个参数；返回用户输入。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Readline 回调接口示例</title>
    <programlisting role="php">
<![CDATA[
<?php
function rl_callback($ret)
{
    global $c, $prompting;

    echo "You entered: $ret\n";
    $c++;

    if ($c > 10) {
        $prompting = false;
        readline_callback_handler_remove();
    } else {
        readline_callback_handler_install("[$c] Enter something: ", 'rl_callback');
    }
}

$c = 1;
$prompting = true;

readline_callback_handler_install("[$c] Enter something: ", 'rl_callback');

while ($prompting) {
    $w = NULL;
    $e = NULL;
    $n = stream_select($r = array(STDIN), $w, $e, null);
    if ($n && in_array(STDIN, $r)) {
        // read a character, will call the callback when a newline is entered
        readline_callback_read_char();
    }
}

echo "Prompting disabled. All done.\n";
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>readline_callback_handler_remove</function></member>
    <member><function>readline_callback_read_char</function></member>
    <member><function>stream_select</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
