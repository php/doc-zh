<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: db22a7cfcbc3af221f67e228336ac3e2d62aaf2c Maintainer: songmeifeng Status: ready -->
<!-- CREDITS: Luffy -->
<refentry xml:id="function.socket-create-listen" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>socket_create_listen</refname>
  <refpurpose>在端口上打开一个套接字以接受连接</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>Socket</type><type>false</type></type><methodname>socket_create_listen</methodname>
   <methodparam><type>int</type><parameter>port</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>backlog</parameter><initializer><constant>SOMAXCONN</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>socket_create_listen</function> 创建一个 <constant>AF_INET</constant> 类型的 <classname>Socket</classname> 
   实例，在<emphasis>所有</emphasis>本地接口上监听指定端口，等待新连接。
  </para>
  <para>
   此方法旨在简化创建新的套接字任务，仅监听且用于接受新连接。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       监听所有接口的端口号
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>backlog</parameter></term>
     <listitem>
      <para>
       <parameter>backlog</parameter> 参数定义了待处理的连接队列的最大长度。<constant>SOMAXCONN</constant> 
       可以作为 <parameter>backlog</parameter> 参数，详情见 <function>socket_listen</function>。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>socket_create_listen</function> 成功时返回一个新的 <classname>Socket</classname> 
   实例，错误时返回 &false;。可以通过调用 <function>socket_last_error</function> 
   来检索实际的错误码。将错误码作为参数传递给 <function>socket_strerror</function> 以获得错误的文本解释。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
        成功时，该函数现在返回一个 <classname>Socket</classname> 实例；在此之前，返回值是一个 <type>resource</type>。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    如果想创建只监听某个接口的套接字，需要使用 <function>socket_create</function>，<function>socket_bind</function> 
    和 <function>socket_listen</function>。
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>socket_create</function></member>
    <member><function>socket_create_pair</function></member>
    <member><function>socket_bind</function></member>
    <member><function>socket_listen</function></member>
    <member><function>socket_last_error</function></member>
    <member><function>socket_strerror</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
