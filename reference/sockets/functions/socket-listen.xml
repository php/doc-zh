<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 14dc7c47365f2b71f6c907a5ba5bccf42534d5a9 Maintainer: songmeifeng Status: ready -->
<refentry xml:id="function.socket-listen" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>socket_listen</refname>
  <refpurpose>监听套接字的连接</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>socket_listen</methodname>
   <methodparam><type>Socket</type><parameter>socket</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>backlog</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>socket_create</function> 创建套接字 <parameter>socket</parameter> 
   并通过 <function>socket_bind</function> 绑定名称后，可以监听 <parameter>socket</parameter> 
   收到的连接。
  </para>
  <para>
   <function>socket_listen</function> 仅适用于 <constant>SOCK_STREAM</constant> 
   或 <constant>SOCK_SEQPACKET</constant> 类型的套接字。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       由 <function>socket_create</function> 或 <function>socket_addrinfo_bind</function> 
       创建的套接字实例。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>backlog</parameter></term>
     <listitem>
      <para>
       <parameter>backlog</parameter> 指定处理连接请求队列的最大值。如果一个连接请求到达时队列已满，客户端可能会收到 <literal>ECONNREFUSED</literal> 
       的错误提示。若底层协议支持重传，则忽略该请求，以便重试成功。。
      </para>
      <note>
       <para>
        传递给 <parameter>backlog</parameter> 
        参数的最大值取决于底层平台。Linux 中，超过最大值将默认截取为 <constant>SOMAXCONN</constant>。win32 中，如果超过 <constant>SOMAXCONN</constant> 
        的值，负责套接字的底层服务将把 backlog 设置为最大的 <emphasis>reasonable</emphasis> 
        合理值，在此平台上，没有提供可以找到 backlog 实际值的标准描述。
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success; 可以通过 <function>socket_last_error</function> 
   来检索错误码。将错误码作为参数传递给 <function>socket_strerror</function> 以获得错误的文本解释。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &sockets.changelog.socket-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>socket_accept</function></member>
    <member><function>socket_bind</function></member>
    <member><function>socket_connect</function></member>
    <member><function>socket_create</function></member>
    <member><function>socket_strerror</function></member>
    <member><function>socket_addrinfo_bind</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
