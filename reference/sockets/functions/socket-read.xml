<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 14dc7c47365f2b71f6c907a5ba5bccf42534d5a9 Maintainer: her-cat Status: ready -->
<refentry xml:id="function.socket-read" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>socket_read</refname>
  <refpurpose>从套接字中读取最大长度的数据</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>socket_read</methodname>
   <methodparam><type>Socket</type><parameter>socket</parameter></methodparam>
   <methodparam><type>int</type><parameter>length</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer><constant>PHP_BINARY_READ</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>socket_read</function> 函数是从 <function>socket_create</function>
   或 <function>socket_accept</function> 函数所创建的 <classname>Socket</classname>
   实例 <parameter>socket</parameter> 中读取数据。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       使用 <function>socket_create</function>
       或 <function>socket_accept</function>
       函数创建的 <classname>Socket</classname> 实例。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       <parameter>length</parameter> 参数指定了最大能够读取的字节数。否则您可以使用
       <constant>\r</constant>、<constant>\n</constant>、<constant>\0</constant>
       结束读取（根据 <parameter>mode</parameter> 参数设置，请参见下文）。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       可选参数 <parameter>mode</parameter> 是一个命名常量：
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>PHP_BINARY_READ</constant> （默认）- 使用系统的
          <literal>recv()</literal> 函数。二进制安全地读取数据。
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>PHP_NORMAL_READ</constant> - 读取到
          <literal>\n</literal>、<literal>\r</literal> 时停止。
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>socket_read</function> 返回一个字符串，表示接收到的数据。如果发生了错误（包括远程主机关闭了连接），则返回 &false;。错误码可使用
   <function>socket_last_error</function> 获取。也可使用 <function>socket_strerror</function>
   来获取错误码的文字描述。
  </para>
  <note>
   <para>
    当套接字中没有更多数据可读取时，<function>socket_read</function>
    返回一个长度为 0 的空字符串（""）。
   </para>
  </note>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &sockets.changelog.socket-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>socket_accept</function></member>
    <member><function>socket_bind</function></member>
    <member><function>socket_connect</function></member>
    <member><function>socket_listen</function></member>
    <member><function>socket_last_error</function></member>
    <member><function>socket_strerror</function></member>
    <member><function>socket_write</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
