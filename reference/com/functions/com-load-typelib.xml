<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: b9043112d87ec0ca6db17276d7013acc2368ed33 Maintainer: mowangjuanzi Status: ready -->
<refentry xml:id="function.com-load-typelib" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>com_load_typelib</refname>
  <refpurpose>载入 Typelib</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>com_load_typelib</methodname>
   <methodparam><type>string</type><parameter>typelib</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>case_insensitive</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   载入类型库并在引擎中注册它们的常量，就像使用 <function>define</function> 定义一样。
  </para>
  <para>
   注意，使用 <link linkend="ini.com.typelib-file">com.typelib-file</link> &php.ini; 配置设置来预载入和注册常量会更加有效，尽管不是那么灵活。
  </para>
  <para>
   如果开启 <link linkend="ini.com.autoregister-typelib">com.autoregister-typelib</link>，然后
   PHP 将在实例化 COM 对象时尝试自动注册与其相关的常量。这取决于 COM 对象本身提供的接口并且不总是可用。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>typelib</parameter></term>
     <listitem>
      <para>
       <parameter>typelib</parameter> 可以是以下其中一个：
       <itemizedlist>
        <listitem>
         <para>
          <literal>.tlb</literal> 文件或者包含类型库的可执行模块的文件名。
         </para>
        </listitem>
        <listitem>
         <para>
          类型库 GUID，后跟版本号，例如
          <literal>{00000200-0000-0010-8000-00AA006D2EA4},2,0</literal>。
         </para>
        </listitem>
        <listitem>
         <para>
          类型库名称，例如 <literal>Microsoft OLE DB ActiveX Data
          Objects 1.0 Library</literal>。
         </para>
        </listitem>
       </itemizedlist>
       PHP 将会尝试按照此顺序解析类型库，随着该列表的推进，该过程变得越来越昂贵；通过物理枚举注册表来按名称搜索类型库，直到找到匹配项。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>case_insensitive</parameter></term>
     <listitem>
      <para>
       <parameter>case_insensitive</parameter> 的行为正好与 <function>define</function>
       中的 <literal>$case_insensitive</literal> 参数相反。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
