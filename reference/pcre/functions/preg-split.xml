<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 41c8533ff5a8f93ba9fdf0732d05dd5ab79864c9 Maintainer: daijie Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="function.preg-split" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>preg_split</refname>
  <refpurpose>通过一个正则表达式分隔字符串</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>preg_split</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>string</type><parameter>subject</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter><initializer>-1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
  通过一个正则表达式分隔给定字符串.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       用于搜索的模式，字符串形式。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>subject</parameter></term>
     <listitem>
      <para>
       输入字符串
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limit</parameter></term>
     <listitem>
      <para>
      如果指定，将限制分隔得到的子串最多只有<parameter>limit</parameter>个，返回的最后一个
      子串将包含所有剩余部分。<parameter>limit</parameter>值为-1， 0或null时都代表"不限制"。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       <parameter>flags </parameter>可以是任何下面标记的组合(以位或运算 <literal>|</literal> 组合)：
       <variablelist>
        <varlistentry>
         <term><constant>PREG_SPLIT_NO_EMPTY</constant></term>
         <listitem>
          <simpara>
          如果这个标记被设置， <function>preg_split</function> 将仅返回分隔后的非空部分。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><constant>PREG_SPLIT_DELIM_CAPTURE</constant></term>
         <listitem>
          <simpara>
          如果这个标记设置了，用于分隔的模式中的括号表达式将被捕获并返回。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><constant>PREG_SPLIT_OFFSET_CAPTURE</constant></term>
         <listitem>
          <para>
          如果这个标记被设置, 对于每一个出现的匹配返回时将会附加字符串偏移量. 
          注意：这将会改变返回数组中的每一个元素, 使其每个元素成为一个由第<literal>0</literal>
          个元素为分隔后的子串，第<literal>1</literal>个元素为该子串在<parameter>subject</parameter>
          中的偏移量组成的数组。
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
  返回一个使用 <parameter>pattern</parameter> 边界分隔 <parameter>subject</parameter> 后得到
  的子串组成的数组，&return.falseforfailure;。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &pcre.pattern.warning;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>preg_split</function>示例：获取搜索字符串的部分</title>
    <programlisting role="php">
<![CDATA[
<?php
//使用逗号或空格(包含" ", \r, \t, \n, \f)分隔短语
$keywords = preg_split("/[\s,]+/", "hypertext language, programming");
print_r($keywords);
?>
]]>
    </programlisting>
    &example.outputs; 
    <screen>
<![CDATA[
Array
(
    [0] => hypertext
    [1] => language
    [2] => programming
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>将一个字符串分隔为组成它的字符</title>
    <programlisting role="php">
<![CDATA[
<?php
$str = 'string';
$chars = preg_split('//', $str, -1, PREG_SPLIT_NO_EMPTY);
print_r($chars);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => s
    [1] => t
    [2] => r
    [3] => i
    [4] => n
    [5] => g
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>分隔一个字符串并获取每部分的偏移量</title>
    <programlisting role="php">
<![CDATA[
<?php
$str = 'hypertext language programming';
$chars = preg_split('/ /', $str, -1, PREG_SPLIT_OFFSET_CAPTURE);
print_r($chars);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => Array
        (
            [0] => hypertext
            [1] => 0
        )

    [1] => Array
        (
            [0] => language
            [1] => 10
        )

    [2] => Array
        (
            [0] => programming
            [1] => 19
        )

)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <tip>
   <para>
   如果你不需要正则表达式功能，可以有更快(并且更简单)的选择比如 <function>explode</function>
    或 <function>str_split</function>。
   </para>
  </tip>
  <tip>
   <para>
    如果没有成功匹配，将会返回一个数组，包含了单个元素，即输入的字符串。
   </para>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="pcre.pattern">PCRE 模式</link></member>
    <member><function>preg_quote</function></member>
    <member><function>implode</function></member>
    <member><function>preg_match</function></member>
    <member><function>preg_match_all</function></member>
    <member><function>preg_replace</function></member>
    <member><function>preg_last_error</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
