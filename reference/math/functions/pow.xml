<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 7dbc44bd0d8923890acf1acedf79daba672af39c Maintainer: dallas Status: ready -->
<!-- CREDITS: mowangjuanzi, Luffy -->
<refentry xml:id="function.pow" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pow</refname>
   <refpurpose>指数表达式</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
   <methodsynopsis>
   <type class="union"><type>int</type><type>float</type><type>object</type></type><methodname>pow</methodname>
   <methodparam><type>mixed</type><parameter>num</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>exponent</parameter></methodparam>
  </methodsynopsis>
  <para>
   返回 <parameter>num</parameter> 的 <parameter>exponent</parameter> 次方的幂。
  </para>
  <note>
   <para>
    可以使用 <link linkend="language.operators.arithmetic">**</link> 运算符代替。
   </para>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>num</parameter></term>
     <listitem>
      <para>
       底数
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>exponent</parameter></term>
     <listitem>
      <para>
       指数
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>num</parameter> 的 <parameter>exponent</parameter>
   次方。如果两个参数都是非负整数且结果可以用整数表示，则返回 <type>int</type>
   类型，否则返回 <type>float</type>。
  </para>
  <para>
   PHP 扩展可能会覆盖此操作的行为，使其返回一个对象。
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>pow</function> 的一些示例</title>
    <programlisting role="php">
<![CDATA[
<?php

var_dump(pow(2, 8)); // int(256)
echo pow(-1, 20), PHP_EOL; // 1
echo pow(0, 0), PHP_EOL; // 1
echo pow(10, -1), PHP_EOL; // 0.1
var_dump(pow(new GMP("3"), new GMP("2"))); // object(GMP)

echo pow(-1, 5.5); // NAN

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    本函数会转换所有输入为数字，甚至是非标量值，将会导致<emphasis>怪异的</emphasis>结果。
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>exp</function></member>
    <member><function>sqrt</function></member>
    <member><function>bcpow</function></member>
    <member><function>gmp_pow</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
