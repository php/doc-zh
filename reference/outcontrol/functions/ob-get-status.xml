<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 55f70d19870c396f3bf86b6c45826da3cb7e525f Maintainer: mowangjuanzi Status: ready -->
<refentry xml:id="function.ob-get-status" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ob_get_status</refname>
  <refpurpose>得到所有输出缓冲区的状态</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>ob_get_status</methodname>
   <methodparam choice="opt"><type>bool</type><parameter>full_status</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>ob_get_status</function> 返回最顶层输出缓冲区的状态信息；或者如果 <parameter>full_status</parameter>
   设为 &true;，返回所有有效的输出缓冲级别。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>full_status</parameter></term>
     <listitem>
      <para>
        设为 &true; 返回所有有效的输出缓冲区级别的状态信息。如果设为 &false; 或者没有设置，仅返回最顶层输出缓冲区的状态信息。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    如果调用时没有 <parameter>full_status</parameter> 参数，或者
    <parameter>full_status</parameter> = &false; 将返回一个包含下面元素的简单数组：
   <informalexample>
    <screen>
<![CDATA[
Array
(
    [level] => 2
    [type] => 0
    [status] => 0
    [name] => URL-Rewriter
    [del] => 1
)
]]>
    </screen>
   </informalexample>
   <segmentedlist>
    <title> <function>ob_get_status</function> 的简单结果</title>
    <segtitle>Key</segtitle><segtitle>Value</segtitle>
    <seglistitem><seg>level</seg><seg>输出嵌套级别</seg></seglistitem>
    <seglistitem><seg>type</seg><seg><literal>0</literal>（内部处理程序）或者 <literal>1</literal>（用户提供的处理程序）</seg></seglistitem>
    <seglistitem><seg>status</seg><seg><literal>PHP_OUTPUT_HANDLER_START</literal> (0), <literal>PHP_OUTPUT_HANDLER_CONT</literal> (1) or <literal>PHP_OUTPUT_HANDLER_END</literal> (2) 三个之一</seg></seglistitem>
    <seglistitem><seg>name</seg><seg>起作用的输出处理程序的名字，或者是默认的输出处理程序的名字（如果没有设置的话）</seg></seglistitem>
    <seglistitem><seg>del</seg><seg>由<function>ob_start</function>设置的删除标签（Erase-flag）</seg></seglistitem>
   </segmentedlist>
  </para>
  <para>
   如果调用时<parameter>full_status</parameter> = &true;，将返回一个数组，该数组的每个元素包含有效的输出缓冲区级别的状态信息。缓冲区的级别数用来当作数组的第一维数；每个元素自身是另一个数组，它持有该有效输出级别的状态信息。
   <informalexample>
    <screen>
<![CDATA[
Array
(
    [0] => Array
        (
            [chunk_size] => 0
            [size] => 40960
            [block_size] => 10240
            [type] => 1
            [status] => 0
            [name] => default output handler
            [del] => 1
        )

    [1] => Array
        (
            [chunk_size] => 0
            [size] => 40960
            [block_size] => 10240
            [type] => 0
            [buffer_size] => 0
            [status] => 0
            [name] => URL-Rewriter
            [del] => 1
        )

)
]]>
    </screen>
   </informalexample>
  </para>
  <para>
   完整的输出包含以下附加元素：
   <segmentedlist>
    <title>完整的<function>ob_get_status</function> 结果</title>
    <segtitle>Key</segtitle><segtitle>Value</segtitle>
    <seglistitem><seg>chunk_size</seg><seg>由 <function>ob_start</function>设置的Chunk size值</seg></seglistitem>
    <seglistitem><seg>size</seg><seg>...</seg></seglistitem>
    <seglistitem><seg>blocksize</seg><seg>...</seg></seglistitem>
   </segmentedlist>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ob_get_level</function></member>
    <member><function>ob_list_handlers</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
