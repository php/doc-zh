<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 53054bf8decc8648cf2e90a493692a161e2371af Maintainer: mowangjuanzi Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="function.filter-input" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
 <refnamediv>
  <refname>filter_input</refname>
  <refpurpose>通过名称获取特定的外部变量，并且可以通过过滤器处理它</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>filter_input</methodname>
   <methodparam><type>int</type><parameter>type</parameter></methodparam>
   <methodparam><type>string</type><parameter>var_name</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>filter</parameter><initializer><constant>FILTER_DEFAULT</constant></initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>int</type></type><parameter>options</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>type</parameter></term>
    <listitem>
     <simpara>
      <constant>INPUT_<replaceable>*</replaceable></constant> 常量之一。
     </simpara>
     <warning>
      <simpara>
       在用户对超全局变量进行任何修改之前，正在过滤的超全局变量内容是 <acronym>SAPI</acronym>
       提供的原始“原始”内容。要过滤修改后的超全局变量，请使用 <function>filter_var</function>。
      </simpara>
     </warning>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>var_name</parameter></term>
    <listitem>
     <simpara>
      在相应 <parameter>type</parameter> 的超全局变量中要过滤的变量名称。
     </simpara>
    </listitem>
   </varlistentry>
   <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('function.filter-var')/db:refsect1[@role='parameters']//db:varlistentry[db:term[db:parameter[text()='filter']]]/.)">
    <xi:fallback/>
   </xi:include>
   <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('function.filter-var')/db:refsect1[@role='parameters']//db:varlistentry[db:term[db:parameter[text()='options']]]/.)">
    <xi:fallback/>
   </xi:include>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   成功时返回过滤后的变量。如果变量未设置，则返回 &false;。失败时也返回 &false;，当使用
   <constant>FILTER_NULL_ON_FAILURE</constant> flag 时返回 &null;。
  </simpara>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>filter_input</function> 示例</title>
    <programlisting role="php">
<![CDATA[
<?php
$search_html = filter_input(INPUT_GET, 'search', FILTER_SANITIZE_SPECIAL_CHARS);
$search_url = filter_input(INPUT_GET, 'search', FILTER_SANITIZE_ENCODED);
echo "You have searched for $search_html.\n";
echo "<a href='?search=$search_url'>Search again.</a>";
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
You have searched for Me &#38; son.
<a href='?search=Me%20%26%20son'>Search again.</a>
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>filter_input_array</function></member>
   <member><function>filter_var</function></member>
   <member><function>filter_var_array</function></member>
   <member>
    验证过滤器
    <constant>FILTER_VALIDATE_<replaceable>*</replaceable></constant>
   </member>
   <member>
    清理过滤器
    <constant>FILTER_SANITIZE_<replaceable>*</replaceable></constant>
   </member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
