<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: bbd4f6a100b48cd3390590037088fe7c5c5cc0e7 Maintainer: daijie Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="function.assert-options" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>assert_options</refname>
  <refpurpose>设置/获取断言的各种标志</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>assert_options</methodname>
   <methodparam><type>int</type><parameter>what</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   设置 <function>assert</function> 的各种控制选项，或者是仅仅查询当前的设置。
  </para>
  <note>
   <simpara>
    自 PHP 7.0.0 起，不鼓励使用 <function>assert_options</function>，而是分别使用
    <function>ini_set</function> 和 <function>ini_get</function> 设置和获取
    &php.ini; 指令 <link linkend="ini.zend.assertions">zend.assertions</link> 和
    <link linkend="ini.assert.exception">assert.exception</link>。
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>what</parameter></term>
     <listitem>
      <para>
       <table>
        <title>断言标志</title>
        <tgroup cols="4">
         <thead>
          <row>
           <entry>标志</entry>
           <entry>INI 设置</entry>
           <entry>默认值</entry>
           <entry>描述</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>ASSERT_ACTIVE</entry>
           <entry>assert.active</entry>
           <entry>1</entry>
           <entry>启用 <function>assert</function> 断言</entry>
          </row>
          <row>
           <entry>ASSERT_WARNING</entry>
           <entry>assert.warning</entry>
           <entry>1</entry>
           <entry>为每个失败的断言产生一个 PHP 警告（warning）</entry>
          </row>
          <row>
           <entry>ASSERT_BAIL</entry>
           <entry>assert.bail</entry>
           <entry>0</entry>
           <entry>在断言失败时中止执行</entry>
          </row>
          <row>
           <entry>ASSERT_QUIET_EVAL</entry>
           <entry>assert.quiet_eval</entry>
           <entry>0</entry>
           <entry>
            在断言表达式求值时禁用 error_reporting
           </entry>
          </row>
          <row>
           <entry>ASSERT_CALLBACK</entry>
           <entry>assert.callback</entry>
           <entry>(&null;)</entry>
           <entry>断言失败时调用回调函数</entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       可选的新选项值。
      </para>
      <para>
       通过 <constant>ASSERT_CALLBACK</constant> 和 assert.callback 设置的回调函数应该有以下签名：
       <methodsynopsis role="procedural">
        <type>void</type><methodname>assert_callback</methodname>
        <methodparam><type>string</type><parameter>file</parameter></methodparam>
        <methodparam><type>int</type><parameter>line</parameter></methodparam>
        <methodparam><type>string</type><parameter>assertion</parameter></methodparam>
        <methodparam choice="opt"><type>string</type><parameter>description</parameter></methodparam>
       </methodsynopsis>
       <variablelist>
        <varlistentry>
         <term><parameter>file</parameter></term>
         <listitem>
          <simpara>
           调用 <function>assert</function> 的文件名。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>line</parameter></term>
         <listitem>
          <simpara>
           调用 <function>assert</function> 的行数。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>assertion</parameter></term>
         <listitem>
          <simpara>
           传递给 <function>assert</function> 的断言，转换为字符串。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>description</parameter></term>
         <listitem>
          <simpara>
           传递给 <function>assert</function> 的描述。
          </simpara>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   向 <parameter>value</parameter> 传递空字符串会重置断言回调。
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回任意标志的原始设置，出错时返回 &false;。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
   <title><function>assert_options</function> 例子</title>
   <programlisting role="php">
<![CDATA[
<?php
// 处理断言失败时的函数
function assert_failure($file, $line, $assertion, $message)
{
    echo "The assertion $assertion in $file on line $line has failed: $message";
}

// 我们的测试函数
function test_assert($parameter)
{
    assert(is_bool($parameter));
}

// 设置断言标志
assert_options(ASSERT_ACTIVE,   true);
assert_options(ASSERT_BAIL,     true);
assert_options(ASSERT_WARNING,  false);
assert_options(ASSERT_CALLBACK, 'assert_failure');

// 让一个断言会失败
test_assert(1);

// 由于 ASSERT_BAIL 是 true，这里永远也到不了
echo 'Never reached';
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>assert</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
