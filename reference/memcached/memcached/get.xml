<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4a26c016c355918158990f7a20a4e4522b204846 Maintainer: mowangjuanzi Status: ready -->
<refentry xml:id="memcached.get" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Memcached::get</refname>
  <refpurpose>检索元素</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>Memcached::get</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type>callable</type><parameter>cache_cb</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>Memcached::get</function> 返回之前存储在 <parameter>key</parameter> 下的元素。如果元素被找到，并且
   <parameter>cas_token</parameter> 指定为 <constant>Memcached::GET_EXTENDED</constant>，也会返回该元素的 CAS
   记号。关于 CAS 记号的使用，参阅 <methodname>Memcached::cas</methodname>。可以通过 <parameter>cache_cb</parameter>
   参数指定 <link linkend="memcached.callbacks">Read-through caching callback</link>。
  </para>
  <para>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       要检索的元素的 key。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cache_cb</parameter></term>
     <listitem>
      <para>
       通读缓存回掉函数或 &null;。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       flag 控制返回结果。当指定为 <constant>Memcached::GET_EXTENDED</constant> 时，该函数还将返回 CAS 记号。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回存储在缓存中的值，否则返回 &false;。
   如果 <parameter>flags</parameter> 设置为 <constant>Memcached::GET_EXTENDED</constant>，则返回包含值和 CAS
   记号的数组，而不仅仅返回值。如果 key 不存在，<methodname>Memcached::getResultCode</methodname> 将返回
   <constant>Memcached::RES_NOTFOUND</constant>。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>PECL memcached 3.0.0</entry>
      <entry>
       移除 <parameter role="reference">cas_token</parameter> 参数。
       相反，添加 <parameter>flags</parameter>，当赋予 <constant>Memcached::GET_EXTENDED</constant> 的值时，将确保获取 CAS 记号。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>Memcached::get</function> 示例 #1</title>
    <programlisting role="php">
<![CDATA[
<?php
$m = new Memcached();
$m->addServer('localhost', 11211);

$m->set('foo', 100);
var_dump($m->get('foo'));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
int(100)
]]>
    </screen>
   </example>
   <example>
    <title><function>Memcached::get</function> 示例 #2</title>
    <programlisting role="php">
<![CDATA[
<?php
$m = new Memcached();
$m->addServer('localhost', 11211);

if (!($ip = $m->get('ip_block'))) {
    if ($m->getResultCode() == Memcached::RES_NOTFOUND) {
        $ip = array();
        $m->set('ip_block', $ip);
    } else {
        /* log error */
        /* ...       */
    }
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>Memcached::getByKey</methodname></member>
    <member><methodname>Memcached::getMulti</methodname></member>
    <member><methodname>Memcached::getDelayed</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
