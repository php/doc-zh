<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 3db49ee0a331a657dd97b539a749f53d3965b593 Maintainer: HonestQiao Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="function.xml-set-element-handler" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>xml_set_element_handler</refname>
  <refpurpose>建立起始和终止元素处理程序</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>xml_set_element_handler</methodname>
   <methodparam><type>XMLParser</type><parameter>parser</parameter></methodparam>
   <methodparam><type>callable</type><parameter>start_handler</parameter></methodparam>
   <methodparam><type>callable</type><parameter>end_handler</parameter></methodparam>
  </methodsynopsis>
  <para>
   为 <parameter>parser</parameter> 参数指定的 XML 解析器建立元素处理函数。参数 <parameter>start_handler</parameter> 和 <parameter>end_handler</parameter> 为表示函数名称的字符串，这些函数必须在为 <parameter>parser</parameter> 指定的解析器调用 <function>xml_parse</function> 函数时已存在。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>parser</parameter></term>
     <listitem>
      <para>
       指向 XML 解析器，用于建立起始和终止元素处理程序。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>start_handler</parameter></term>
     <listitem>
      <para>
       由 <parameter>start_handler</parameter> 参数命名的函数名必须接受三个参数：
       <methodsynopsis>
        <methodname><replaceable>start_element_handler</replaceable></methodname>
        <methodparam><type>XMLParser</type><parameter>parser</parameter></methodparam>
        <methodparam><type>string</type><parameter>name</parameter></methodparam>
        <methodparam><type>array</type><parameter>attribs</parameter></methodparam>
       </methodsynopsis>
       <variablelist>
        <varlistentry>
         <term><parameter>parser</parameter></term> 
         <listitem>
          <simpara>
           第一个参数 <replaceable>parser</replaceable> 为指向要调用处理程序的 XML 解析器的指针。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>name</parameter></term>
         <listitem>
          <simpara>
           第二个参数 <parameter>name</parameter>，包含调用此处理程序的元素名称。如果<link linkend="xml.case-folding">大小写折叠（case-folding）</link>对该解析器有效，元素名将用大写字母表示。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>attribs</parameter></term>
         <listitem>
          <simpara>
           第三个参数 <parameter>attribs</parameter> 为一个包含有对应元素的属性的数组（如果该元素有属性）。数组元素的下标为属性名，元素的值即为属性的值。属性名将以和元素名同样的标准进行<link linkend="xml.case-folding">大小写折叠（case-folded）</link>，其值<emphasis>不</emphasis>进行大小写折叠。
          </simpara>
          <simpara>
           属性的原始顺序将会被参数保留，用 <function>each</function> 函数遍历 <parameter>attribs</parameter> 时，该数组下表的顺序和属性的顺序相同。
          </simpara>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
      &note.func-callback;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>end_handler</parameter></term>
     <listitem>
      <para>
       由 <parameter>end_handler</parameter> 参数命名的函数名必须接受两个参数：
       <methodsynopsis>
        <methodname><replaceable>end_element_handler</replaceable></methodname>
        <methodparam><type>XMLParser</type><parameter>parser</parameter></methodparam>
        <methodparam><type>string</type><parameter>name</parameter></methodparam>
       </methodsynopsis>
       <variablelist>
        <varlistentry>
         <term><parameter>parser</parameter></term> 
         <listitem>
          <simpara>
           第一个参数 <replaceable>parser</replaceable> 为指向要调用处理程序的 XML 解析器的指针。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>name</parameter></term>
         <listitem>
          <simpara>
          第二个参数 <parameter>name</parameter>，包含调用此处理程序的元素名称。如果<link linkend="xml.case-folding">大小写折叠（case-folding）</link>对该解析器有效，元素名将用大写字母表示。
          </simpara>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
      <para>
       如果处理程序名被设置为空字符串或者 &false;，则该有问题的处理程序将被屏蔽。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
      &xml.changelog.parser-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
