<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 3db49ee0a331a657dd97b539a749f53d3965b593 Maintainer: HonestQiao Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="function.xml-set-external-entity-ref-handler" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>xml_set_external_entity_ref_handler</refname>
  <refpurpose>设置外部实体引用处理程序</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>xml_set_external_entity_ref_handler</methodname>
   <methodparam><type>XMLParser</type><parameter>parser</parameter></methodparam>
   <methodparam><type>callable</type><parameter>handler</parameter></methodparam>
  </methodsynopsis>
  <para>
   为 XML 解析器 <parameter>parser</parameter> 设置外部实体引用处理函数。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>parser</parameter></term>
     <listitem>
      <para>
       XML 解析器的引用，用于建立外部实体指向处理函数。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>handler</parameter></term>
     <listitem>
      <para>
       参数 <parameter>handler</parameter> 为表示函数名称的字符串，函数必须在为 <parameter>parser</parameter> 指定的解析器调用 <function>xml_parse</function> 函数时已存在。
      </para>
      <para>
       由 <parameter>handler</parameter> 参数命名的函数名必须接受五个参数，并应该返回一个整型值。如果处理程序的返回值为 &false;（这也是函数没有确定返回值时的返回值），XML 解析器将停止解析， <function>xml_get_error_code</function> 函数将返回  <constant>XML_ERROR_EXTERNAL_ENTITY_HANDLING</constant>。
       <methodsynopsis>
        <methodname><replaceable>handler</replaceable></methodname>
        <methodparam><type>XMLParser</type><parameter>parser</parameter></methodparam>
        <methodparam><type>string</type><parameter>open_entity_names</parameter></methodparam>
        <methodparam><type>string</type><parameter>base</parameter></methodparam>
        <methodparam><type>string</type><parameter>system_id</parameter></methodparam>
        <methodparam><type>string</type><parameter>public_id</parameter></methodparam>
       </methodsynopsis>
       <variablelist>
        <varlistentry>
         <term><parameter>parser</parameter></term>
         <listitem>
          <simpara>
            第一个参数 <replaceable>parser</replaceable> 为指向要调用处理程序的 XML 解析器的指针。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>open_entity_names</parameter></term>
         <listitem>
          <simpara>
           第二个参数 <parameter>open_entity_names</parameter> 是为该实体的解析开放的实体名列表（包括被指向的实体名），这些实体名由空格隔开。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>base</parameter></term>
         <listitem>
          <simpara>
          这个参数是解析外部实体的系统标识符（<parameter>system_id</parameter>）的基础。当前该参数通常都被设置为空字符串。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>system_id</parameter></term>
         <listitem>
          <simpara>
           第四个参数 <parameter>system_id</parameter> 是在实体定义声明中指定的系统标识符。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>public_id</parameter></term>
         <listitem>
          <simpara>
           第五个参数 <parameter>public_id</parameter> 是在实体定义声明中指定的公共标识符，如果未指定任何标识符，则该字符串为空。公共标识符中的空格将按照 XML 的要求被正常化。
          </simpara>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
      <para>
       如果处理函数名被设置为空字符串或者 &false;，则该有问题的处理器将被屏蔽。
      </para>
      &note.func-callback;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
      &xml.changelog.parser-param;
     <row>
      <entry>7.3.0</entry>
      <entry>
       如果扩展是针对 libxml 构建的，则不再忽略 <parameter>handler</parameter> 的返回值。以前，会忽略返回值，且解析也从不停止。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
