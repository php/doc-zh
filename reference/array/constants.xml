<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 54ff7bf8e0f8fa90988cccf6b583517366605f6d Maintainer: dallas Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<appendix xml:id="array.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants.core;
 <para>
 <variablelist>
  <varlistentry xml:id="constant.case-lower">
   <term>
    <constant>CASE_LOWER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     <constant>CASE_LOWER</constant> 用在
     <function>array_change_key_case</function> 中将数组的键名转换成小写字母。这也是
     <function>array_change_key_case</function> 的默认值。从 PHP 8.2.0 开始，只转换 ASCII 字符。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.case-upper">
   <term>
    <constant>CASE_UPPER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     <constant>CASE_UPPER</constant> 用在
     <function>array_change_key_case</function> 中将数组的键名转换成大写字母。从 PHP 8.2.0 开始，只转换 ASCII 字符。
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>

 <para> 排序顺序标识：
 <variablelist>
  <varlistentry xml:id="constant.sort-asc">
   <term>
    <constant>SORT_ASC</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     <constant>SORT_ASC</constant> 用在 <function>array_multisort</function>
     函数中，使其升序排列。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sort-desc">
   <term>
    <constant>SORT_DESC</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     <constant>SORT_DESC</constant> 用在 <function>array_multisort</function>
     函数中，使其降序排列。
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>

 <para> 排序类型标识：用于各种排序函数
 <variablelist>
  <varlistentry xml:id="constant.sort-regular">
   <term>
    <constant>SORT_REGULAR</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     <constant>SORT_REGULAR</constant> 用于对对象进行通常比较。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sort-numeric">
   <term>
    <constant>SORT_NUMERIC</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     <constant>SORT_NUMERIC</constant> 用于对对象进行数值比较。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sort-string">
   <term>
    <constant>SORT_STRING</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
    <constant>SORT_STRING</constant> 用于对对象进行字符串比较。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sort-locale-string">
   <term>
    <constant>SORT_LOCALE_STRING</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
    <constant>SORT_LOCALE_STRING</constant> 基于当前区域来对对象进行字符串比较。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sort-natural">
   <term>
    <constant>SORT_NATURAL</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
    <constant>SORT_NATURAL</constant> 用于对元素作为字符串使用“自然排序”（像是 <function>natsort</function>
    ）比较。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sort-flag-case">
   <term>
    <constant>SORT_FLAG_CASE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
    <constant>SORT_FLAG_CASE</constant> 可以跟 <constant>SORT_STRING</constant> 或者 <constant>SORT_NATURAL</constant>
     组合（按位或（OR））对字符串进行大小写不敏感排序。从 PHP 8.2.0 开始，只转换 ASCII 字符。
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>

 <para> 过滤器 flags:
 <variablelist>
  <varlistentry xml:id="constant.array-filter-use-key">
   <term>
    <constant>ARRAY_FILTER_USE_KEY</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     <constant>ARRAY_FILTER_USE_KEY</constant> 用于 <function>array_filter</function>
     将每个键作为第一个参数传递给指定回调函数。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.array-filter-use-both">
   <term>
    <constant>ARRAY_FILTER_USE_BOTH</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     <constant>ARRAY_FILTER_USE_BOTH</constant> 用于 <function>array_filter</function>
     将值和键传递给指定回调函数。
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>

 <variablelist>
  <varlistentry xml:id="constant.count-normal">
   <term>
    <constant>COUNT_NORMAL</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.count-recursive">
   <term>
    <constant>COUNT_RECURSIVE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.extr-overwrite">
   <term>
    <constant>EXTR_OVERWRITE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.extr-skip">
   <term>
    <constant>EXTR_SKIP</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.extr-prefix-same">
   <term>
    <constant>EXTR_PREFIX_SAME</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.extr-prefix-all">
   <term>
    <constant>EXTR_PREFIX_ALL</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.extr-prefix-invalid">
   <term>
    <constant>EXTR_PREFIX_INVALID</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.extr-prefix-if-exists">
   <term>
    <constant>EXTR_PREFIX_IF_EXISTS</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.extr-if-exists">
   <term>
    <constant>EXTR_IF_EXISTS</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.extr-refs">
   <term>
    <constant>EXTR_REFS</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
