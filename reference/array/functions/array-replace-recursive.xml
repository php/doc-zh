<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: cd943f94a013b74df8765ab8e1a620a916a64a85 Maintainer: daijie Status: ready -->
<refentry xml:id="function.array-replace-recursive" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_replace_recursive</refname>
  <refpurpose>使用传递的数组递归替换第一个数组的元素</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_replace_recursive</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam rep="repeat"><type>array</type><parameter>replacements</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_replace_recursive</function> 使用后面数组元素的值替换数组 <parameter>array</parameter> 的值。
   如果一个键存在于第一个数组同时也存在于第二个数组，它的值将被第二个数组中的值替换。
   如果一个键存在于第二个数组，但是不存在于第一个数组，则会在第一个数组中创建这个元素。
   如果一个键仅存在于第一个数组，它将保持不变。
   如果传递了多个替换数组，它们将被按顺序依次处理，后面的数组将覆盖之前的值。
  </para>
  <para>
   <function>array_replace_recursive</function> 是递归的：它将遍历数组并将相同的处理应用到数组的内部值。
  </para>
  <para>
   如果第一个数组中的值是标量，它的值将被第二个数组中的值替换，它可能是一个标量或者数组。如果第一个数组和第二个数组中的值都是数组，
   <function>array_replace_recursive</function> 函数将递归地替换它们各自的值。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       替换该数组的值。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replacements</parameter></term>
     <listitem>
      <para>
       包含要提取元素的数组。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回一个<type>数组</type>。如果发生错误，将返回 &null;。
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>array_replace_recursive</function> 范例</title>
    <programlisting role="php">
<![CDATA[
<?php
$base = array('citrus' => array( "orange") , 'berries' => array("blackberry", "raspberry"), );
$replacements = array('citrus' => array('pineapple'), 'berries' => array('blueberry'));

$basket = array_replace_recursive($base, $replacements);
print_r($basket);

$basket = array_replace($base, $replacements);
print_r($basket);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [citrus] => Array
        (
            [0] => pineapple
        )

    [berries] => Array
        (
            [0] => blueberry
            [1] => raspberry
        )

)
Array
(
    [citrus] => Array
        (
            [0] => pineapple
        )

    [berries] => Array
        (
            [0] => blueberry
        )

)

]]>
    </screen>
   </example>
   <example>
    <title><function>array_replace_recursive</function> 及其递归表现</title>
    <programlisting role="php">
<![CDATA[
<?php
$base = array('citrus' => array("orange") , 'berries' => array("blackberry", "raspberry"), 'others' => 'banana' );
$replacements = array('citrus' => 'pineapple', 'berries' => array('blueberry'), 'others' => array('litchis'));
$replacements2 = array('citrus' => array('pineapple'), 'berries' => array('blueberry'), 'others' => 'litchis');

$basket = array_replace_recursive($base, $replacements, $replacements2);
print_r($basket);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [citrus] => Array
        (
            [0] => pineapple
        )

    [berries] => Array
        (
            [0] => blueberry
            [1] => raspberry
        )

    [others] => litchis
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_replace</function></member>
    <member><function>array_merge_recursive</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
