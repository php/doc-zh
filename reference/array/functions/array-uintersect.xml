<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 9e0f03ac354d797d1d16c0fcc1663e5e170f2727 Maintainer: HonestQiao Status: ready -->
<refentry xml:id="function.array-uintersect" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_uintersect</refname>
  <refpurpose>计算数组的交集，用回调函数比较数据</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_uintersect</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam rep="repeat"><type>array</type><parameter>arrays</parameter></methodparam>
   <methodparam><type>callable</type><parameter>value_compare_func</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_uintersect</function> 返回一个数组，该数组包含了所有在
   <parameter>array1</parameter> 中也同时出现在所有其它参数数组中的值。数据比较是用回调函数进行的。
   此比较是通过用户提供的回调函数来进行的。如果认为第一个参数小于，等于，或大于第二个参数时必须分别返回一个小于零，等于零，或大于零的整数。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       第一个数组。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arrays</parameter></term>
     <listitem>
      <para>
       要比较的数组。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value_compare_func</parameter></term>
     <listitem>
      <para>
       &return.callbacksort;
      </para>
      &callback.cmp;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回一个数组，数组中包含了 <parameter>array</parameter> 中在所有的参数中都存在的值。
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>array_uintersect</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = array("a" => "green", "b" => "brown", "c" => "blue", "red");
$array2 = array("a" => "GREEN", "B" => "brown", "yellow", "red");

print_r(array_uintersect($array1, $array2, "strcasecmp"));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [a] => green
    [b] => brown
    [0] => red
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_intersect</function></member>
    <member><function>array_intersect_assoc</function></member>
    <member><function>array_uintersect_assoc</function></member>
    <member><function>array_uintersect_uassoc</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
