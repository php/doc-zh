<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 9e0f03ac354d797d1d16c0fcc1663e5e170f2727 Maintainer: HonestQiao Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<refentry xml:id="function.array-diff-key" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>array_diff_key</refname>
    <refpurpose>使用键名比较计算数组的差集</refpurpose>
   </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_diff_key</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam rep="repeat"><type>array</type><parameter>arrays</parameter></methodparam>
  </methodsynopsis>
    <para>
     根据 <parameter>array</parameter> 中的键名和 <parameter>arrays</parameter> 进行比较，返回不同键名的项。
     本函数和
     <function>array_diff</function> 相同只除了比较是根据键名而不是值来进行的。
    </para>
   </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>

    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       从这个数组进行比较
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>arrays</parameter></term>
     <listitem>
      <para>
       要进行比较的数组
      </para>
     </listitem>
    </varlistentry>

   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回一个数组，该数组包含了所有出现在 <parameter>array</parameter> 中但是未出现在任何其它数组中的键名的值。
  </para>
 </refsect1>

<!--
 <refsect1 role="errors">
  &reftitle.errors;
  &errors.no.unusual.errors;
 </refsect1>
-->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>array_diff_key</function> 例</title>
    <para>
      在 <literal>key =&gt; value</literal> 对中的两个键名仅在
     <literal>(string) $key1 === (string) $key2 </literal>
     时被认为相等。换句话说，执行的是严格类型检查，因此字符串的表达必须完全一样。
    </para>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array('blue' => 1, 'red' => 2, 'green' => 3, 'purple' => 4);
$array2 = array('green' => 5, 'yellow' => 7, 'cyan' => 8);

var_dump(array_diff_key($array1, $array2));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(3) {
  ["blue"]=>
  int(1)
  ["red"]=>
  int(2)
  ["purple"]=>
  int(4)
}
]]>
    </screen>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = array('blue' => 1, 'red'  => 2, 'green' => 3, 'purple' => 4);
$array2 = array('green' => 5, 'yellow' => 7, 'cyan' => 8);
$array3 = array('blue' => 6, 'yellow' => 7, 'mauve' => 8);

var_dump(array_diff_key($array1, $array2, $array3));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(2) {
  ["red"]=>
  int(2)
  ["purple"]=>
  int(4)
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
      注意本函数只检查了多维数组中的一维。当然，可以用
      <literal>array_diff_key($array1[0], $array2[0]);</literal>
      来检查更深的维度。
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_diff</function></member>
    <member><function>array_udiff</function></member>
    <member><function>array_diff_assoc</function></member>
    <member><function>array_diff_uassoc</function></member>
    <member><function>array_udiff_assoc</function></member>
    <member><function>array_udiff_uassoc</function></member>
    <member><function>array_diff_ukey</function></member>
    <member><function>array_intersect</function></member>
    <member><function>array_intersect_assoc</function></member>
    <member><function>array_intersect_uassoc</function></member>
    <member><function>array_intersect_key</function></member>
    <member><function>array_intersect_ukey</function></member>
   </simplelist>
  </para>
 </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
