<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 44428b04b7b046593e9ab33874eddd1fea7dfab1 Maintainer: Luffy Status: ready -->
<refentry xml:id="function.dba-open" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>dba_open</refname>
  <refpurpose>打开数据库</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>Dba\Connection</type><type>false</type></type><methodname>dba_open</methodname>
   <methodparam><type>string</type><parameter>path</parameter></methodparam>
   <methodparam><type>string</type><parameter>mode</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>handler</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>permission</parameter><initializer>0644</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>map_size</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>flags</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>dba_open</function> 用 <parameter>mode</parameter> 和 <parameter>handler</parameter> 为 <parameter>path</parameter> 建立一个数据库实例。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>path</parameter></term>
     <listitem>
      <para>
       数据库文件的路径。通常是文件系统中的一个常规路径。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       一个字符串，指定数据库的访问模式。它是一个字符，可以是 <literal>r</literal> 用于读取访问，
       <literal>w</literal> 用于对已存在的数据库进行读写访问，
       <literal>c</literal> 用于读写访问和数据，如果目前不存在，则创建数据库，
       以及 <literal>n</literal> 用于创建、截断和读写访问。
       数据库是以 BTree 模式创建的，不支持其他模式（如 Hash 或 Queue）。
      </para>
      <para>
       此外，您可以使用下一个字符设置数据库锁定方法。使用 <literal>l</literal> 用 <filename>.lck</filename>
       文件锁定数据库，或使用 <literal>d</literal> 锁定数据库文件本身。重要的是您的所有应用程序都要一致地这样做。
      </para>
      <para>
       如果您想测试访问并且不想等待锁定，可以将 <literal>t</literal> 作为第三个字符添加。当您确信不需要数据库锁定时，
       可以使用 <literal>-</literal> 代替 <literal>l</literal> 或 <literal>d</literal>。当 <literal>d</literal>、
       <literal>l</literal> 或 <literal>-</literal> 都没有使用时，dba 将锁定数据库文件，就像使用 <literal>d</literal> 一样。
      </para>
      <note>
       <para>
        一个数据库文件只能有一个写入者。当您在 web 服务器上使用 dba 时，如果有多个请求需要写入操作，
        它们只能一个接一个地进行。在写入时不允许读取。dba 扩展使用锁来防止这种情况。请参阅下表：
        <table>
         <title>DBA 锁定</title>
         <tgroup cols="9">
          <thead>
           <row>
            <entry>已经打开</entry>
            <entry><parameter>mode</parameter> = "rl"</entry>
            <entry><parameter>mode</parameter> = "rlt"</entry>
            <entry><parameter>mode</parameter> = "wl"</entry>
            <entry><parameter>mode</parameter> = "wlt"</entry>
            <entry><parameter>mode</parameter> = "rd"</entry>
            <entry><parameter>mode</parameter> = "rdt"</entry>
            <entry><parameter>mode</parameter> = "wd"</entry>
            <entry><parameter>mode</parameter> = "wdt"</entry>
           </row>
          </thead>
          <tbody>
           <row>
            <entry>未打开</entry>
            <entry>ok</entry>
            <entry>ok</entry>
            <entry>ok</entry>
            <entry>ok</entry>
            <entry>ok</entry>
            <entry>ok</entry>
            <entry>ok</entry>
            <entry>ok</entry>
           </row>
           <row>
            <entry><parameter>mode</parameter> = "rl"</entry>
            <entry>ok</entry>
            <entry>ok</entry>
            <entry>wait</entry>
            <entry>false</entry>
            <entry>illegal</entry>
            <entry>illegal</entry>
            <entry>illegal</entry>
            <entry>illegal</entry>
           </row>
           <row>
            <entry><parameter>mode</parameter> = "wl"</entry>
            <entry>wait</entry>
            <entry>false</entry>
            <entry>wait</entry>
            <entry>false</entry>
            <entry>illegal</entry>
            <entry>illegal</entry>
            <entry>illegal</entry>
            <entry>illegal</entry>
           </row>
           <row>
            <entry><parameter>mode</parameter> = "rd"</entry>
            <entry>illegal</entry>
            <entry>illegal</entry>
            <entry>illegal</entry>
            <entry>illegal</entry>
            <entry>ok</entry>
            <entry>ok</entry>
            <entry>wait</entry>
            <entry>false</entry>
           </row>
           <row>
            <entry><parameter>mode</parameter> = "wd"</entry>
            <entry>illegal</entry>
            <entry>illegal</entry>
            <entry>illegal</entry>
            <entry>illegal</entry>
            <entry>wait</entry>
            <entry>false</entry>
            <entry>wait</entry>
            <entry>false</entry>
           </row>
          </tbody>
         </tgroup>
        </table>
        <simplelist>
         <member>ok: 第二次调用将成功。</member>
         <member>wait: 第二次调用将等待，直到第一个调用 <function>dba_close</function>。</member>
         <member>false: 第二次调用返回 false。</member>
         <member>illegal: 不能混合 <literal>"l"</literal> 和 <literal>"d"</literal> 修饰符用于 <parameter>mode</parameter> 参数。</member>
        </simplelist>
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>handler</parameter></term>
     <listitem>
      <para>
       用于访问 <parameter>path</parameter> 的 <link linkend="dba.requirements">处理器</link> 的名称。
       它接收所有给定给 <function>dba_open</function> 的可选参数，
       并可以代表它们执行操作。如果 <parameter>handler</parameter> 是 &null;，则调用默认处理器。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>permission</parameter></term>
     <listitem>
      <para>
       可选的 &integer; 参数，传递给驱动程序。它的含义与 <function>chmod</function> 的 <parameter>permissions</parameter> 参数相同，
       默认为 <literal>0644</literal>。
      </para>
      <para>
       <literal>db1</literal>、<literal>db2</literal>、<literal>db3</literal>、<literal>db4</literal>、
       <literal>dbm</literal>、<literal>gdbm</literal>、<literal>ndbm</literal> 和 <literal>lmdb</literal>
       驱动程序支持 <parameter>permission</parameter> 参数。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>map_size</parameter></term>
     <listitem>
      <para>
       可选的 &integer; 参数，传递给驱动程序。它的值应该是 OS 的页面大小的倍数，或者是零，以使用默认的映射大小。
      </para>
      <para>
       只有 <literal>lmdb</literal> 驱动程序接受 <parameter>map_size</parameter> 参数。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       传递给数据库驱动程序的标志。如果 &null;，将提供默认标志。
       目前，只有 LMDB 驱动程序支持以下标志
       <constant>DBA_LMDB_USE_SUB_DIR</constant> 和
       <constant>DBA_LMDB_NO_SUB_DIR</constant>。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   成功时返回一个 <classname>Dba\Connection</classname> 实例，&return.falseforfailure;。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   如果 <parameter>handler</parameter> 为 &null;，但没有默认处理器，则返回 &false;
   并发出一个 <constant>E_WARNING</constant> 级别的错误。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.4.0</entry>
      <entry>
       现在返回一个 <classname>Dba\Connection</classname> 实例；
       以前返回一个 &resource;。
      </entry>
     </row>
     <row>
      <entry>8.2.0</entry>
      <entry>
       <parameter>flags</parameter> 参数被添加。
      </entry>
     </row>
     <row>
      <entry>8.2.0</entry>
      <entry>
       <parameter>handler</parameter> 现在可以为 &null;。
      </entry>
     </row>
     <row>
      <entry>7.3.14, 7.4.2</entry>
      <entry>
       <literal>lmdb</literal> 驱动现在支持额外的 <parameter>map_size</parameter> 参数。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>dba_popen</function></member>
    <member><function>dba_close</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
