<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4dfe5cc41eabcfb5b7eb7afa194ce078ad4e1bf4 Maintainer: z warmwinter Status: ready -->
<!-- Reviewed: no -->
<!-- CREDITS: Jader --> 

<refentry xml:id="context.http" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" role="noversion">
 <refnamediv>
  <refname>HTTP context 选项</refname>
  <refpurpose>HTTP context 的选项列表</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>
   提供给 <literal>http://</literal> 和 <literal>https://</literal> 传输协议的 context 选项。
   transports.
  </para>
 </refsect1>

 <refsect1 role="options"><!-- {{{ -->
  &reftitle.options;
  <para>
   <variablelist>
    <varlistentry xml:id="context.http.method">
     <term>
      <parameter>method</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       远程服务器支持的 <constant>GET</constant>，<constant>POST</constant> 或其它 HTTP 方法。
      </para>
      <para>
       默认值是 <constant>GET</constant>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.header">
     <term>
      <parameter>header</parameter>
      <type>array</type> 或 <type>string</type>
     </term>
     <listitem>
      <para>
       请求期间发送的附加 header 。此选项中的值将覆盖其他值
       （如 <literal>User-agent:</literal>， <literal>Host:</literal> 和 
        <literal>Authentication:</literal>)，
        即使在执行 <literal>Location:</literal> 重定向时也是如此。
        所以，如果启用了 <parameter>follow_location</parameter>
        就不建议设置 <literal>Host:</literal> header。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.user-agent">
     <term>
      <parameter>user_agent</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       要发送的 header <literal>User-Agent:</literal> 的值。如果在上面的 
       <literal>header</literal> context 选项中没有指定 user-agent，此值将被使用。
      </para>
      <para>
       默认使用 &php.ini;  中设置的 <link linkend="ini.user-agent">user_agent</link>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.content">
     <term>
      <parameter>content</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       在 header 后面要发送的额外数据。通常使用POST或PUT请求。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.proxy">
     <term>
      <parameter>proxy</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       URI 指定的代理服务器的地址。(e.g.
       <literal>tcp://proxy.example.com:5100</literal>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.request-fulluri">
     <term>
      <parameter>request_fulluri</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       当设置为 &true; 时，在构建请求时将使用整个 URI 。(i.e.
       <literal>GET http://www.example.com/path/to/file.html HTTP/1.0</literal>)。
       虽然这是一个非标准的请求格式，但某些代理服务器需要它。
      </para>
      <para>
       默认值是 &false;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.follow-location">
     <term>
      <parameter>follow_location</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       跟随 <literal>Location</literal> header 的重定向。设置为 <literal>0</literal> 以禁用。
      </para>
      <para>
       默认值是 <literal>1</literal>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.max-redirects">
     <term>
      <parameter>max_redirects</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       跟随重定向的最大次数。值为 <literal>1</literal> 或更少则意味不跟随重定向。
      </para>
      <para>
       默认值是 <literal>20</literal>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.protocol-version">
     <term>
      <parameter>protocol_version</parameter>
      <type>float</type>
     </term>
     <listitem>
      <para>
       HTTP 协议版本。
      </para>
      <para>
       默认值是 <literal>1.0</literal>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.timeout">
     <term>
      <parameter>timeout</parameter>
      <type>float</type>
     </term>
     <listitem>
      <para>
       读取超时时间，单位为秒（s），用 <type>float</type> 指定(e.g. <literal>10.5</literal>)。
      </para>
      <para>
       默认使用 &php.ini; 中设置的 <link linkend="ini.default-socket-timeout">default_socket_timeout</link>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.ignore-errors">
     <term>
      <parameter>ignore_errors</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       即使是故障状态码依然获取内容。
      </para>
      <para>
       默认值为 &false;.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="examples"><!-- {{{ -->
  &reftitle.examples;
  <para>
   <example xml:id="context.http.example-post"><!-- {{{ -->
    <title>获取一个页面并发送 POST 数据</title>
    <programlisting role="php">
<![CDATA[
<?php

$postdata = http_build_query(
    array(
        'var1' => 'some content',
        'var2' => 'doh'
    )
);

$opts = array('http' =>
    array(
        'method'  => 'POST',
        'header'  => 'Content-type: application/x-www-form-urlencoded',
        'content' => $postdata
    )
);

$context = stream_context_create($opts);

$result = file_get_contents('http://example.com/submit.php', false, $context);

?>
]]>
    </programlisting>
   </example><!-- }}} -->
  </para>
  <para>
   <example xml:id="context.http.example-fetch-ignore-redirect"><!-- {{{ -->
    <title>忽略重定向并获取 header 和内容</title>
    <programlisting role="php">
<![CDATA[
<?php

$url = "http://www.example.org/header.php";

$opts = array('http' =>
    array(
        'method' => 'GET',
        'max_redirects' => '0',
        'ignore_errors' => '1'
    )
);

$context = stream_context_create($opts);
$stream = fopen($url, 'r', false, $context);

// header information as well as meta data
// about the stream
var_dump(stream_get_meta_data($stream));

// actual data at $url
var_dump(stream_get_contents($stream));
fclose($stream);
?>
]]>
    </programlisting>
   </example><!-- }}} -->
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <title>Underlying socket stream context options</title>
   <simpara>
    Additional context options may be supported by the
    <link linkend="transports.inet">underlying transport</link>
    For <literal>http://</literal> streams, refer to context
    options for the <literal>tcp://</literal> transport.  For
    <literal>https://</literal> streams, refer to context options
    for the <literal>ssl://</literal> transport.
   </simpara>
  </note>
  <note>
   <title>HTTP status line</title>
   <simpara>
    When this stream wrapper follows a redirect, the
    <literal>wrapper_data</literal> returned by
    <function>stream_get_meta_data</function> might not necessarily contain
    the HTTP status line that actually applies to the content data at index
    <literal>0</literal>.
   </simpara>
   <screen>
<![CDATA[
array (
  'wrapper_data' =>
  array (
    0 => 'HTTP/1.0 301 Moved Permanently',
    1 => 'Cache-Control: no-cache',
    2 => 'Connection: close',
    3 => 'Location: http://example.com/foo.jpg',
    4 => 'HTTP/1.1 200 OK',
    ...
]]>
   </screen>
   <simpara>
    The first request returned a <literal>301</literal> (permanent redirect),
    so the stream wrapper automatically followed the redirect to get a
    <literal>200</literal> response (index = <literal>4</literal>).
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="wrappers.http" /></member>
    <member><xref linkend="context.socket" /></member>
    <member><xref linkend="context.ssl" /></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

