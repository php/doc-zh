<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: b905b4cdeda10cc147107ef615f2d83ede7a7f24 Maintainer: avenger Status: ready -->
<!-- CREDITS: mowangjuanzi, Luffy -->
<reference xml:id="class.typeerror" role="exception" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>TypeError</title>
 <titleabbrev>TypeError</titleabbrev>

 <partintro>

<!-- {{{ Error intro -->
  <section xml:id="typeerror.intro">
   &reftitle.intro;
   <para>
    会抛出<classname>TypeError</classname> 的情况:
    
    <simplelist>
      <member>
      为类属性设置的值与该属性申明的类型不匹配。
     </member>
     <member>
      传递给函数的参数类型与函数预期声明的参数类型不匹配。
     </member>
     <member>
      函数返回的值与声明的函数返回类型不匹配
     </member>
    </simplelist>
  </para>
  </section>
<!-- }}} -->

  <section xml:id="typeerror.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis class="class">
    <ooexception>
     <exceptionname>TypeError</exceptionname>
    </ooexception>

    <ooclass>
     <modifier>extends</modifier>
     <classname>Error</classname>
    </ooclass>

    <classsynopsisinfo role="comment">&InheritedProperties;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.error')/db:partintro/db:section/db:classsynopsis/db:fieldsynopsis[preceding-sibling::db:classsynopsisinfo[1][@role='comment' and text()='&Properties;']]))">
     <xi:fallback/>
    </xi:include>

    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.error')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[@role='Error'])">
     <xi:fallback/>
    </xi:include>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.error')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[@role='Error'])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>

<!-- }}} -->

  </section>
  <section xml:id="typeerror.changelog" role="changelog">
   &reftitle.changelog;
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.1.0</entry>
       <entry>
        在严格模式下，传递给内置 PHP 函数的参数数量不正确时，不再抛出通用的 <classname>TypeError</classname>。
        相反，会抛出更具体的 <classname>ArgumentCountError</classname>，它是 <classname>TypeError</classname> 的子类。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </section>
 </partintro>
</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
