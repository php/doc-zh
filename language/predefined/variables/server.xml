<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: b767006c8672c9e8ecec8429bb4f3be8889bde6b Maintainer: HonestQiao Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<phpdoc:varentry xmlns:phpdoc="http://php.net/ns/phpdoc" xml:id="reserved.variables.server" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" role="noversion">
 <refnamediv>
  <refname>$_SERVER</refname>
  <refpurpose>服务器和执行环境信息</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>
   <varname>$_SERVER</varname> 是一个包含了诸如头信息（header）、路径（path）、以及脚本位置（script locations）等信息的
   &array;。这个数组中的条目由 Web 服务器创建，所以不能保证每个 Web
   服务器都提供全部条目；服务器可能会忽略一些，或者提供此处没有列举出来的其它内容。然而，大部分变量在
   <link xlink:href="&url.rfc;3875">CGI 1.1 规范</link>中都有说明，并且很可能会定义。
  </para>
  <note>
   <simpara>
    当在<link linkend="features.commandline">命令行</link>运行 PHP
    时，这些条目都将无效或者没有任何意义。
   </simpara>
  </note>
  <para>
   除了下面列出的元素之外，PHP 还将使用请求报头中的值创建其它元素，这些条目将命名为 <literal>HTTP_</literal>
   后跟报头名称，大写且使用下划线而不是连字符。例如 <literal>Accept-Language</literal> 报头将作为
   <code>$_SERVER['HTTP_ACCEPT_LANGUAGE']</code> 提供。
  </para>
 </refsect1>

 <refsect1 role="indices">
  &reftitle.indices;

  <para>
   <variablelist>
    <varlistentry>
     <term>'<varname>PHP_SELF</varname>'</term>
     <listitem>
      <simpara>
       当前执行脚本的文件名，与 document root 有关。例如，在地址为 <filename>http://example.com/foo/bar.php</filename> 的脚本中使用 <varname>$_SERVER['PHP_SELF']</varname> 将得到 <filename>/foo/bar.php</filename>。<link linkend="language.constants.predefined">__FILE__</link> 常量包含当前(例如包含)文件的完整路径和文件名。
      </simpara>
      <simpara>
       如果 PHP 以命令行模式运行，这个变量将包含脚本名。
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<link linkend="reserved.variables.argv">argv</link>'</term>
     <listitem>
      <simpara>
        传递给该脚本的参数的数组。当脚本以命令行方式运行时，argv 变量传递给程序 C 语言样式的命令行参数。当通过 GET 方式调用时，该变量包含query string。
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<link linkend="reserved.variables.argc">argc</link>'</term>
     <listitem>
      <simpara>
       包含命令行模式下传递给该脚本的参数的数目(如果运行在命令行模式下)。
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>GATEWAY_INTERFACE</varname>'</term>
     <listitem>
      <simpara>
       服务器使用的 CGI 规范的版本；例如，<literal>'CGI/1.1'</literal>。
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_ADDR</varname>'</term>
     <listitem>
      <simpara>
       当前运行脚本所在的服务器的 IP 地址。
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_NAME</varname>'</term>
     <listitem>
      <simpara>
       当前运行脚本所在的服务器的主机名。如果脚本运行于虚拟主机中，该名称是由那个虚拟主机所设置的值决定。
      </simpara>
      <note>
       <simpara>
        在 Apache 2 里，必须设置 <literal>UseCanonicalName = On</literal> 和
        <literal>ServerName</literal>。否则该值会由客户端提供，就有可能被伪造。上下文有安全性要求的环境里，不应该依赖此值。
       </simpara>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_SOFTWARE</varname>'</term>
     <listitem>
      <simpara>
       服务器标识字符串，在响应请求时的头信息中给出。
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_PROTOCOL</varname>'</term>
     <listitem>
      <simpara>
       请求页面时通信协议的名称和版本。例如，<literal>'HTTP/1.0'</literal>。
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>'<varname>REQUEST_METHOD</varname>'</term>
     <listitem>
      <simpara>
       访问页面使用的请求方法；例如，<literal>'GET'</literal>、<literal>'HEAD'</literal>、<literal>'POST'</literal>、<literal>'PUT'</literal>。
      </simpara>
      <note>
       <para>
        如果请求方法为 <literal>HEAD</literal>，PHP 脚本将在发送 Header 头信息之后终止(这意味着在产生任何输出后，不再有输出缓冲)。
       </para>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REQUEST_TIME</varname>'</term>
     <listitem>
      <simpara>
       请求开始时的时间戳。
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>'<varname>REQUEST_TIME_FLOAT</varname>'</term>
     <listitem>
      <simpara>
       请求开始时的时间戳，微秒级别的精准度。
      </simpara>
     </listitem>
    </varlistentry>
     
    <varlistentry>
     <term>'<varname>QUERY_STRING</varname>'</term>
     <listitem>
      <simpara>
       query string（查询字符串），如果有的话，通过它进行页面访问。
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>DOCUMENT_ROOT</varname>'</term>
     <listitem>
      <simpara>
       当前运行脚本所在的文档根目录。在服务器配置文件中定义。
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>HTTPS</varname>'</term>
     <listitem>
      <simpara>
      如果脚本是通过 HTTPS 协议被访问，则被设为一个非空的值。 
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REMOTE_ADDR</varname>'</term>
     <listitem>
      <simpara>
       浏览当前页面的用户的 IP 地址。
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REMOTE_HOST</varname>'</term>
     <listitem>
      <simpara>
       浏览当前页面的用户的主机名。DNS 反向解析不依赖于用户的 <varname>REMOTE_ADDR</varname>。
      </simpara>
      <note>
       <simpara>
        必须配置 Web 服务器以创建这个变量。例如在 Apache 中，<literal>HostnameLookups On</literal>
        必须在 &httpd.conf; 中设置才能存在。参见 <function>gethostbyaddr</function>。
       </simpara>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REMOTE_PORT</varname>'</term>
     <listitem>
      <simpara>
       用户机器上连接到 Web 服务器所使用的端口号。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>'<varname>REMOTE_USER</varname>'</term>
     <listitem>
      <simpara>
        经验证的用户
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REDIRECT_REMOTE_USER</varname>'</term>
     <listitem>
      <simpara>
        验证的用户，如果请求已在内部重定向。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>'<varname>SCRIPT_FILENAME</varname>'</term>
     <listitem>
      <para>
       当前执行脚本的绝对路径。
       <note>
        <para>
         如果在命令行界面（Command Line Interface, CLI）使用相对路径执行脚本，例如 <filename>file.php</filename> 或 <filename>../file.php</filename>，那么 <varname>$_SERVER['SCRIPT_FILENAME']</varname> 将包含用户指定的相对路径。
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_ADMIN</varname>'</term>
     <listitem>
      <simpara>
       该值指明了 Apache 服务器配置文件中的 SERVER_ADMIN 参数。如果脚本运行在一个虚拟主机上，则该值是那个虚拟主机的值。 
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>'<varname>SERVER_PORT</varname>'</term>
     <listitem>
      <simpara>
        Web 服务器使用的端口。默认值为 <literal>'80'</literal>。如果使用 SSL 安全连接，则这个值为用户设置的 HTTP 端口。
      </simpara>
      <note>
       <simpara>
        在 Apache 2 里，为了获取真实物理端口，必须设置 <literal>UseCanonicalName = On</literal> 以及
        <literal>UseCanonicalPhysicalPort = On</literal>，否则可能伪造此值，不一定会返回真实端口值。
        上下文有安全性要求的环境里，不应该依赖此值。
       </simpara>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_SIGNATURE</varname>'</term>
     <listitem>
      <simpara>
       包含了服务器版本和虚拟主机名的字符串。
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PATH_TRANSLATED</varname>'</term>
     <listitem>
      <simpara>
       当前脚本所在文件系统（非文档根目录）的基本路径。这是在服务器进行虚拟到真实路径的映像后的结果。
      </simpara>
      <note>
       <simpara>
        Apache 2 用户可以在 <filename>httpd.conf</filename> 中设置 <literal>AcceptPathInfo = On</literal> 来定义 <envar>PATH_INFO</envar>。
       </simpara>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SCRIPT_NAME</varname>'</term>
     <listitem>
      <simpara>
       包含当前脚本的路径。这在页面需要指向自己时非常有用。<link linkend="language.constants.predefined">__FILE__</link> 常量包含当前脚本(例如包含文件)的完整路径和文件名。
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REQUEST_URI</varname>'</term>
     <listitem>
      <simpara>
       URI 用来指定要访问的页面。例如 “<literal>/index.html</literal>”。
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PHP_AUTH_DIGEST</varname>'</term>
     <listitem>
      <simpara>
       当作为 Apache 模块运行时，进行 HTTP Digest 认证的过程中，此变量被设置成客户端发送的“Authorization” HTTP 头内容（以便作进一步的认证操作）。 
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PHP_AUTH_USER</varname>'</term>
     <listitem>
      <simpara>
       当 PHP 运行在 Apache 或 IIS（PHP 5 是 ISAPI）模块方式下，并且正在使用 HTTP 认证功能，这个变量便是用户输入的用户名。
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PHP_AUTH_PW</varname>'</term>
     <listitem>
      <simpara>
       当 PHP 运行在 Apache 或 IIS（PHP 5 是 ISAPI）模块方式下，并且正在使用 HTTP 认证功能，这个变量便是用户输入的密码。 
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>AUTH_TYPE</varname>'</term>
     <listitem>
      <simpara>
       当 PHP 运行在 Apache 模块方式下，并且正在使用 HTTP 认证功能，这个变量便是认证的类型。
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PATH_INFO</varname>'</term>
     <listitem>
      <simpara>
       如果存在的话，包含由客户端提供的、跟在真实脚本名称之后并且在查询字符串之前的路径信息。例如，如果当前脚本是通过
       URI <filename>http://www.example.com/php/path_info.php/some/stuff?foo=bar</filename> 访问，那么
       <varname>$_SERVER['PATH_INFO']</varname> 将包含 <literal>/some/stuff</literal>。
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>ORIG_PATH_INFO</varname>'</term>
     <listitem>
      <simpara>
       在被 PHP 处理之前，“<varname>PATH_INFO</varname>” 的原始版本。
      </simpara>
     </listitem>
    </varlistentry>

   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example xml:id="variable.server.basic">
    <title><varname>$_SERVER</varname> 范例</title>
    <programlisting role="php">
<![CDATA[
<?php
echo $_SERVER['SERVER_NAME'];
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
www.example.com
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  &note.is-superglobal;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="book.filter">过滤器扩展</link></member>
   </simplelist>
  </para>
 </refsect1>

</phpdoc:varentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
