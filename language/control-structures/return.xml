<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: db7aa4f29bd5909f8ab9e3739f60afb77837e4df Maintainer: dallas Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<sect1 xml:id="function.return" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>return</title>
 <?phpdoc print-version-for="return"?>
 <simpara>
  <literal>return</literal> 将程序控制返还给调用模块。
  将在调用模块中执行的下一句表达式中继续。
 </simpara>
 <simpara>
  如果在一个函数中调用 <function>return</function>
  语句，将立即结束此函数的执行并将它的参数作为函数的值返回。<function>return</function>
  也会终止 <function>eval</function> 语句或者脚本文件的执行。
 </simpara>
 <simpara>
  如果在全局范围中调用，则当前脚本文件中止运行。如果当前脚本文件是被
  <function>include</function> 的或者 <function>require</function>
  的，则控制交回调用文件。此外，如果当前脚本是被 <function>include</function>
  的，则 <function>return</function> 的值会被当作 <function>include</function>
  调用的返回值。如果在主脚本文件中调用
  <function>return</function>，则脚本中止运行。如果当前脚本文件是在 &php.ini;
  中的配置选项 <link
  linkend="ini.auto-prepend-file">auto_prepend_file</link> 或者 <link
  linkend="ini.auto-append-file">auto_append_file</link> 所指定的，则此脚本文件中止运行。
 </simpara>
 <simpara>
  更多信息见<link linkend="functions.returning-values">返回值</link>。
 </simpara>
 <para>
  <note>
   <simpara>
    注意既然 <function>return</function>
    是语言结构而不是函数，因此其参数没有必要用括号将其括起来，也不推荐这样用。
   </simpara>
  </note>
  <note>
   <simpara>
    如果没有提供参数，则一定不能用括号，此时返回 &null;。如果调用
    <literal>return</literal> 时加上了括号却又没有参数会导致解析错误。
   </simpara>
  </note>
 </para>
 <para>
  自 PHP 7.1.0 起，如果函数中声明的返回类型是 <type>void</type>
  而带了返回的参数，将导致
  <constant>E_COMPILE_ERROR</constant>，相反声明了返回类型而未带参数也会同样导致该错误。
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
