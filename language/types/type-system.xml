<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 23cda460978ca25b9c0be003862095cd0eb20b00 Maintainer: mowangjuanzi Status: ready -->
<sect1 xml:id="language.types.type-system">
 <title>类型系统</title>

 <para>
  PHP uses a nominal type system with a strong behavioral subtyping relation.
  The subtyping relation is checked at compile time whereas the verification of
  types is dynamically checked at run time.
 </para>

 <para>
  PHP 的类型系统支持各种基础类型，可以组合在一起创建更加复杂的类型。其中一些类型可以写成<link
  linkend="language.types.declarations">类型声明</link>。
 </para>

 <sect2 xml:id="language.types.type-system.base">
  <title>基本类型</title>
  <para>
   一些基础类型是内置类型，跟语言紧密集成，不能用用户定义类型重现（reproduced）。
  </para>

  <para>
   基础类型列表是：
   <itemizedlist>
    <listitem>
     <simpara>内置类型</simpara>
     <itemizedlist>
      <listitem>
       <simpara><type>null</type> 类型</simpara>
      </listitem>
      <listitem>
       <simpara>
        标量类型：
       </simpara>
       <itemizedlist>
        <listitem>
         <simpara><type>bool</type> 类型</simpara>
        </listitem>
        <listitem>
         <simpara><type>int</type> 类型</simpara>
        </listitem>
        <listitem>
         <simpara><type>float</type> 类型</simpara>
        </listitem>
        <listitem>
         <simpara><type>string</type> 类型</simpara>
        </listitem>
       </itemizedlist>
      </listitem>
      <listitem>
       <simpara><type>array</type> 类型</simpara>
      </listitem>
      <listitem>
       <simpara><type>object</type> 类型</simpara>
      </listitem>
      <listitem>
       <simpara><type>resource</type> 类型</simpara>
      </listitem>
      <listitem>
       <simpara><type>never</type> 类型</simpara>
      </listitem>
      <listitem>
       <simpara><type>void</type> 类型</simpara>
      </listitem>
      <listitem>
       <simpara>
        <link linkend="language.types.relative-class-types">相对类类型</link>：<type>self</type>、<type>parent</type>
        和 <type>static</type>
       </simpara>
      </listitem>
     </itemizedlist>
    </listitem>
    <listitem>
     <simpara>
      <link linkend="language.types.literal">字面量类型</link>
     </simpara>
     <itemizedlist>
      <listitem>
       <simpara><type>false</type></simpara>
      </listitem>
      <listitem>
       <simpara><type>true</type></simpara>
      </listitem>
     </itemizedlist>
    </listitem>
    <listitem>
     <simpara>
      用户定义的类型（通常称为类类型）
     </simpara>
     <itemizedlist>
      <listitem>
       <simpara><link linkend="language.oop5.interfaces">接口</link></simpara>
      </listitem>
      <listitem>
       <simpara><link linkend="language.oop5.basic.class">类</link></simpara>
      </listitem>
      <listitem>
       <simpara><link linkend="language.types.enumerations">枚举</link></simpara>
      </listitem>
     </itemizedlist>
    </listitem>
    <listitem>
     <simpara><type>callable</type> 类型</simpara>
    </listitem>
   </itemizedlist>
  </para>
 </sect2>

 <sect2 xml:id="language.types.type-system.composite">
  <title>复合类型</title>
  <para>
   可以将简单类型组合为复合类型。PHP 允许使用以下方式组合类型：
  </para>

  <itemizedlist>
   <listitem>
    <simpara>
     类类型（接口和类名）的交集。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     类型联合。
    </simpara>
   </listitem>
  </itemizedlist>

  <sect3 xml:id="language.types.type-system.composite.intersection">
   <title>交集类型</title>
   <para>
    交集类型接受满足多个类类型声明的值，而不是单个值。交集类型中的每个类型由 <literal>&amp;</literal>
    符号连接。因此，类型 <literal>T</literal>、<literal>U</literal> 和 <literal>V</literal>
    组成的交集类型将写成 <literal>T&amp;U&amp;V</literal>。
   </para>
  </sect3>

  <sect3 xml:id="language.types.type-system.composite.union">
   <title>联合类型</title>
   <para>
    联合类型接受多个不同类型的值，而不是单个类型。联合类型中的每个类型由 <literal>|</literal>
    符号连接。因此类型 <literal>T</literal>、<literal>U</literal> 和 <literal>V</literal>
    的联合类型写成 <literal>T|U|V</literal>。如果其中一种类型是交集类型，需要使用括号括起来，在
    <acronym>DNF</acronym> 中写成：<literal>T|(X&amp;Y)</literal>。
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="language.types.type-system.alias">
  <title>类型别名</title>

  <para>
   PHP 支持两种类型别名：<type>mixed</type> 和 <type>iterable</type>，分别对应
   <literal>object|resource|array|string|float|int|bool|null</literal> 和
   <literal>Traversable|array</literal> 的 <link
   linkend="language.types.type-system.composite.union">联合类型</link>。
  </para>

  <note>
   <simpara>
    PHP 不支持用户定义类型别名。
   </simpara>
  </note>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
