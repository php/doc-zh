<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: f4609f913fe6bf4a8b41328df9366726208b7e33 Maintainer: daijie Status: ready -->
<!-- CREDITS: mowangjuanzi -->
<sect1 xml:id="language.types.enumerations">
 <title>Enum 枚举</title>
 <?phpdoc print-version-for="enumerations"?>

 <sect2 xml:id="language.types.enumerations.basics">
  <title>枚举基础</title>

  <para>
   枚举是在类、类常量基础上的约束层，
   目标是提供一种能力：定义包含可能值的封闭集合类型。
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
enum Suit
{
    case Hearts;
    case Diamonds;
    case Clubs;
    case Spades;
}

function do_stuff(Suit $s)
{
    // ...
}

do_stuff(Suit::Spades);
?>
]]>
   </programlisting>
  </informalexample>

  <simpara>
   详情参阅<link linkend="language.enumerations">枚举</link>章节。
  </simpara>

 </sect2>
 
 <sect2 xml:id="language.types.enumerations.casting">
  <title>类型转换</title>
  
  <para>
   将 <type>enum</type> 转换为 <type>object</type> 不会有变化。
   将 <type>enum</type> 转换为 <type>array</type>，
   纯粹枚举会创建单个 <literal>name</literal> 键的数组；
   回退枚举创建带 <literal>name</literal> 和 <literal>value</literal> 键的数组。
   其他类型转换都会导致错误。
  </para>
 </sect2>
</sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
