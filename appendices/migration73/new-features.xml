<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: b37727abaf0e731a05c516fd85b44e86f4bf5c75 Maintainer: avenger Status: ready -->
<!-- CREDITS: mowangjuanzi, Luffy -->
<sect1 xml:id="migration73.new-features" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>新特性</title>

 <sect2 xml:id="migration73.new-features.core">
  <title>PHP 核心</title>

  <sect3 xml:id="migration73.new-features.core.heredoc">
   <title>更灵活的 Heredoc 和 Nowdoc 语法</title>

   <para>
    Heredoc 和 Nowdoc 语法变的更灵活。现在支持闭合标记符的缩进，并且不再强制闭合标记符的换行。
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.destruct-reference">
   <title>数组解构支持引用赋值</title>

   <para>
    数组解构现在支持使用语法 <literal>[&amp;$a, [$b, &amp;$c]] = $d</literal> 进行引用赋值。<function>list</function> 也支持同样的操作。
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.instanceof-literals">
   <title>Instanceof 操作符接受字面量</title>

   <para>
    <literal>instanceof</literal> 现在允许字面量作为第一个操作数，在这种情况下，结果始终为 &false;。
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.compileerror">
   <title>一些编译错误替换为 CompileError 异常</title>

   <para>
    新增 <classname>CompileError</classname> 异常，<classname>ParseError</classname> 继承该异常。现在，少量编译错误将抛出
    <classname>CompileError</classname>，而不是生成致命错误。目前仅影响 <constant>TOKEN_PARSE</constant> 模式下
    <function>token_get_all</function> 可能抛出的编译错误，但将来可能会转换更多错误。
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.trailing-commas">
   <title>调用中允许尾随逗号</title>

   <para>
    现在允许在函数和方法调用中使用尾随逗号。
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.argon2id">
   <title>Argon2id 支持</title>

   <para>
    <option role="configure">--with-password-argon2[=dir]</option> 配置参数现在提供了对
    <function>password_hash</function>、<function>password_verify</function>、<function>password_get_info</function> 和 <function>password_needs_rehash</function>
    函数的 Argon2i 和Argon2id 散列支持。可以使用 <constant>PASSWORD_ARGON2ID</constant> 常量对密码进行散列处理和验证。<function>password_*</function>
    函数现在对 Argon2i 和 Argon2id 的支持要求 PHP 链接的 libargon2 引用 library ≥ 20161029。
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration73.new-features.fpm">
  <title>FastCGI 进程管理器</title>

  <para>
   新增了自定义 FPM 日志记录的新选项：
   <variablelist>
    <varlistentry>
     <term><literal>log_limit</literal></term>
     <listitem>
      <simpara>
       此全局选项可用于设置日志记录的行限制，允许记录长度超过 1024 个字符的消息而不换行。还修复了各种封装器问题。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>log_buffering</literal></term>
     <listitem>
      <simpara>
       此全局选项实验性允许无需额外缓冲的日志记录。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>decorate_workers_output</literal></term>
     <listitem>
      <simpara>
       当启用 <literal>catch_workers_output</literal> 时，此 pool 选项允许禁用 worker 输出的输出装饰器。
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </sect2>

 <sect2 xml:id="migration73.new-features.bc">
  <title>BC 数学函数</title>

  <para>
   <function>bcscale</function> 现在可以用于检索当前使用的精度。
  </para>
 </sect2>

 <sect2 xml:id="migration73.new-features.ldap">
  <title>轻量目录访问协议</title>

  <para>
   <link linkend="book.ldap">LDAP</link> 查询函数和 <function>ldap_parse_result</function> 已新增对 LDAP 控件的完全支持：
   <itemizedlist>
    <listitem>
     <simpara>
      <function>ldap_add</function>、<function>ldap_mod_replace</function>、<function>ldap_mod_add</function>、<function>ldap_mod_del</function>、<function>ldap_rename</function>、<function>ldap_compare</function>、<function>ldap_delete</function>、<function>ldap_modify_batch</function>、<function>ldap_search</function>、<function>ldap_list</function>
      和 <function>ldap_read</function> 新增 <literal>$controls</literal> 参数，用于发送控件到服务器。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ldap_parse_result</function> 新增输出参数 <literal>$controls</literal> 用于从服务器中获取控件。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
     <function>ldap_get_option</function> 和 <function>ldap_set_option</function> 修复了对 <constant>LDAP_OPT_SERVER_CONTROLS</constant>
      和 <constant>LDAP_OPT_CLIENT_CONTROLS</constant> 的支持。
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </sect2>

 <sect2 xml:id="migration73.new-features.mbstring">
  <title>多字节字符串函数</title>

  <sect3 xml:id="migration73.new-features.mbstring.case-mapping-folding">
   <title>完整的大小写映射和大小写折叠支持</title>

   <para>
    新增完整的大小写映射和大小写折叠。与简单的大小写映射不同，完整的大小写映射可能会更改字符串的长度。例如：
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
mb_strtoupper("Straße");
// Produces STRAßE on PHP 7.2
// Produces STRASSE on PHP 7.3
?>
]]>
     </programlisting>
    </informalexample>
    通过 <function>mb_convert_case</function> 可以使用不同的大小写映射和折叠模式：
    <itemizedlist>
     <listitem>
      <simpara>
       <constant>MB_CASE_LOWER</constant>（用于 <function>mb_strtolower</function>）
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_UPPER</constant>（用于 <function>mb_strtoupper</function>）
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       <constant>MB_CASE_TITLE</constant>
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       <constant>MB_CASE_FOLD</constant>
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       <constant>MB_CASE_LOWER_SIMPLE</constant>
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       <constant>MB_CASE_UPPER_SIMPLE</constant>
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       <constant>MB_CASE_TITLE_SIMPLE</constant>
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       <constant>MB_CASE_FOLD_SIMPLE</constant>（用于不区分大小写操作）
      </simpara>
     </listitem> 
    </itemizedlist>
    仅执行绝对的、与语言无关的完整大小写映射。
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.case-insensitive-ops">
   <title>不区分大小写的字符串操作会使用大小写折叠</title>

   <para>
    不区分大小写的字符串操作现在在比较期间会使用大小写折叠（将所有字符转换为相同的大写或小写）而不是大小写映射（将所有字符转换为其等效的大写或者小写形式）。这意味着现在更多的字符将被视为（不区分大小写）相等。
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.mb-case-title">
   <title>MB_CASE_TITLE 执行标题大小写转换</title>

   <para>
    <function>mb_convert_case</function> 现在使用 <constant>MB_CASE_TITLE</constant> 基于 Unicode 属性衍生的
    Cased 和 CaseIgnorable 执行标题大小写转换。尤其是还改进了对引号和撇号的处理。
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.ucd11">
   <title>Unicode 11 支持</title>

   <para>
    <link linkend="book.mbstring">多字节字符串</link>数据表已经更新到 Unicode 11。
   </para> 
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.long-strings">
   <title>长字符串支持</title>

   <para>
    <link linkend="ref.mbstring">多字节字符串函数</link> 现在正确支持超过 2GB 的字符串。
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.performance">
   <title>性能提升</title>

   <para>
    <link linkend="book.mbstring">多字节字符串</link>扩展的性能得到了全面显著提高。最大的改进是大小写转换函数。
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.named-captures">
   <title>命名捕获支持</title>

   <para>
    <literal>mb_ereg_*</literal> 函数现在支持命名捕获。像 <function>mb_ereg</function> 这样的匹配函数现在将使用组号和名称返回命名捕获，类似于 PCRE：
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
mb_ereg('(?<word>\w+)', '国', $matches);
// => [0 => "国", 1 => "国", "word" => "国"];
?>
]]>
     </programlisting>
    </informalexample>
    此外，<function>mb_ereg_replace</function> 现在支持 <code>\k&lt;&gt;</code> 和 <code>\k''</code> 符号来引用替换字符串中的命名捕获：
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
mb_ereg_replace('\s*(?<word>\w+)\s*', "_\k<word>_\k'word'_", ' foo ');
// => "_foo_foo_"
?>
]]>
     </programlisting>
    </informalexample>
    <code>\k&lt;&gt;</code> 和 <code>\k''</code> 也可用于编号引用，组编号大于 9 也适用。
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration73.new-features.realine">
  <title>Readline</title>

  <para>
   <function>readline_info</function> 中新增对 <literal>completion_append_character</literal> 和 <literal>completion_suppress_append</literal>
   选项的支持。仅当 PHP 链接到 libreadline（而不是 libedit）时，这些选项才可用。
  </para>
 </sect2>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
