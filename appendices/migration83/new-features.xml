<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 617b58b308d1f1916efaa4a3eb158fed251ae439 Maintainer: mowangjuanzi Status: ready -->
<!-- CREDITS: Luffy -->
<sect1 xml:id="migration83.new-features" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>新功能</title>

 <sect2 xml:id="migration83.new-features.core">
  <title>PHP 核心</title>

  <sect3 xml:id="migration83.new-features.core.readonly-modifier-improvements">
   <title>只读修正</title>

   <para>
    匿名类现在可以标记为 readonly。
   </para>

   <para>
    只读属性现在可以在克隆时重新初始化。
    <!-- RFC: https://wiki.php.net/rfc/readonly_amendments -->
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.typed-class-constants">
   <title>类型化类常量</title>

   <para>
    类、接口、trait 和 enum 常量现在支持类型声明。
    <!-- RFC: https://wiki.php.net/rfc/typed_class_constants -->
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.closures-created-from-magic-methods">
   <title>从魔术方法中创建的闭包</title>

   <para>
    从魔术方法中创建的闭包现在接受命名参数。
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.final-modifier-method-from-trait">
   <title>trait 中的方法使用 final 修饰符</title>

   <para>
    final 修饰符现在可以用于 trait 中的方法。
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.override-attribute">
   <title>Override 注解</title>

   <para>
    新增 #[\Override] 注解用于检测方法是否在父类中存在或实现了接口。
    <!-- RFC: https://wiki.php.net/rfc/marking_overriden_methods -->
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.fetch-class-constant-dynamically-syntax">
   <title>动态语法获取类常量</title>

   <para>
    类常量现在可以使用 <code>C::{$name}</code> 语法动态访问。
    <!-- RFC: https://wiki.php.net/rfc/dynamic_class_constant_fetch -->
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.static-variable-initializers">
   <title>静态变量初始化</title>

   <para>
    静态变量初始化现在可以包含任意表达式。
    <!-- RFC: RFC: https://wiki.php.net/rfc/arbitrary_static_variable_initializers -->
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.fallback-value-syntax-for-php-ini">
   <title>ini 变量的后备值语法</title>

   <para>
    php.ini 现在支持后备/默认值语法。
    <!-- refs: https://github.com/php/php-src/pull/11351 -->
    <informalexample>
     <programlisting role="php">
      <![CDATA[
<?php
/*
/path/to/user.ini 上包含下列设置：

listen = localhost:${DRUPAL_FPM_PORT:-9000}
*/

$user_ini = parse_ini_file('/path/to/user.ini');
echo $user_ini['listen']; // localhost:9000
]]>
     </programlisting>
    </informalexample>

   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration83.new-features.cli">
  <title>CLI</title>

  <para>
   现在可以对多个文件进行 lint。
  </para>
 </sect2>

 <sect2 xml:id="migration83.new-features.dom">
  <title>DOM</title>

  <para>
   添加属性 <property>DOMElement::$className</property> 和
   <property>DOMElement::$id</property>。由于 libxml2
   底层限制，这些属性目前并非二进制安全。这意味着属性值将在 NUL 字节处截断。
  </para>

  <para>
   添加属性 <property>DOMNode::$isConnected</property>
   和 <property>DOMNameSpaceNode::$isConnected</property>。
  </para>

  <para>
   添加属性 <property>DOMNode::$parentElement</property>
   和 <property>DOMNameSpaceNode::$parentElement</property>。
  </para>
 </sect2>

 <sect2 xml:id="migration83.new-features.ffi">
  <title>FFI</title>

  <para>
   现在可以将 <classname>FFI\CData</classname> 分配给其它 FFI\CData。这意味着现在可以将
   CData 分配给结构和字段。
  </para>
 </sect2>

 <sect2 xml:id="migration83.new-features.opcache">
  <title>Opcache</title>

  <para>
   <code>opcache_get_status()['scripts'][n]['revalidate']</code> 现在包含 Unix 时间戳，表示下一次重新验证脚本时间戳的时间，由
   <link linkend="ini.opcache.revalidate-freq">opcache.revalidate_freq</link> INI 指令指定。
  </para>
 </sect2>

 <sect2 xml:id="migration83.new-features.posix">
  <title>POSIX</title>

  <para>
   <function>posix_getrlimit</function> 现在接受可选的
   <parameter>$resource</parameter> 参数用于获取单个资源限制。
  </para>

  <para>
   <function>posix_isatty</function> 按照通用的 ZPP 语义现在对整数将引发类型警告。
  </para>

  <para>
   <function>posix_isposix_ttynameatty</function> 按照通用的 ZPP 语义现在对整数将引发类型警告，并针对无效整数文件描述符引发值警告。
  </para>
 </sect2>

 <sect2 xml:id="migration83.new-features.streams">
  <title>Streams</title>

  <para>
   Streams 现在可以发出 <constant>STREAM_NOTIFY_COMPLETED</constant> 通知。之前没有实现过。
  </para>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
