<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 010542d1dcb9b1d5cd397a77ed580e50de25aca7 Maintainer: HonestQiao Status: ready -->
<!-- CREDITS: dallas, Luffy, mowangjuanzi -->
<appendix xml:id="reserved" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>保留字列表</title>
 <para>
  以下是 PHP 中预定义标识符的列表。没有列在下面的标识符可以在脚本中作为自定义标识符使用。这些列表包括关键字和预定义变量、常量和类名。这些列表可能有遗漏，它是不完整的。
 </para>

 <sect1 xml:id="reserved.keywords">
 <title>关键词列表</title>
  <simpara>
   这些词语在 PHP
   中有着特殊的意义。它们中有些像是函数，有些像是常量，但是它们不是真的，它们只是语言结构的一部分。不能使用它们的任何一个作为常量、类名或函数名。但是它们可以被用作类的属性、常量以及类的方法名，或者接口名和
   traits 名，除了 <literal>class</literal> 不能被用作常量名。
  </simpara>

  <table>
   <title>PHP 关键词</title>
   <tgroup cols="5">
    <tbody>
    <row>
       <entry>
        <function>__halt_compiler</function>
       </entry>
       <entry>
        <link linkend="language.oop5.abstract">abstract</link>
       </entry>
       <entry>
        <link linkend="language.operators.logical">and</link>
       </entry>
       <entry>
        <function>array</function>
       </entry>
       <entry>
        <link linkend="control-structures.foreach">as</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.break">break</link>
       </entry>
       <entry>
        <link linkend="language.types.callable">callable</link>
       </entry>
       <entry>
        <link linkend="control-structures.switch">case</link>
       </entry>
       <entry>
        <link linkend="language.exceptions">catch</link>
       </entry>
       <entry>
        <link linkend="language.oop5.basic.class">class</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.oop5.cloning">clone</link>
       </entry>
       <entry>
        <link linkend="language.oop5.constants">const</link>
       </entry>
       <entry>
        <link linkend="control-structures.continue">continue</link>
       </entry>
       <entry>
        <link linkend="control-structures.declare">declare</link>
       </entry>
       <entry>
        <link linkend="control-structures.switch">default</link>
       </entry>
      </row>
      <row>
       <entry>
        <function>die</function>
       </entry>
       <entry>
        <link linkend="control-structures.do.while">do</link>
       </entry>
       <entry>
        <function>echo</function>
       </entry>
       <entry>
        <link linkend="control-structures.else">else</link>
       </entry>
       <entry>
        <link linkend="control-structures.elseif">elseif</link>
       </entry>
      </row>
      <row>
       <entry>
        <function>empty</function>
       </entry>
       <entry>
        <link linkend="control-structures.declare">enddeclare</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endfor</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endforeach</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endif</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.alternative-syntax">endswitch</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endwhile</link>
       </entry>
       <entry>
        <function>eval</function>
       </entry>
       <entry>
        <function>exit</function>
       </entry>
       <entry>
        <link linkend="language.oop5.basic.extends">extends</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.oop5.final">final</link>
       </entry>
       <entry>
        <link linkend="language.exceptions">finally</link>
       </entry>
       <entry>
        <link linkend="functions.arrow">fn</link>（从 PHP 7.4 开始）
       </entry>
       <entry>
        <link linkend="control-structures.for">for</link>
       </entry>
       <entry>
        &foreach;
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="functions.user-defined">function</link>
       </entry>
       <entry>
        <link linkend="language.variables.scope">global</link>
       </entry>
       <entry>
        <link linkend="control-structures.goto">goto</link>
       </entry>
       <entry>
        <link linkend="control-structures.if">if</link>
       </entry>
       <entry>
        <link linkend="language.oop5.interfaces">implements</link>
       </entry>
      </row>
      <row>
       <entry>
        <function>include</function>
       </entry>
       <entry>
        <function>include_once</function>
       </entry>
       <entry>
        <link linkend="language.operators.type">instanceof</link>
       </entry>
       <entry>
        <link linkend="language.oop5.traits.conflict">insteadof</link>
       </entry>
       <entry>
        <link linkend="language.oop5.interfaces">interface</link>
       </entry>
      </row>
      <row>
       <entry>
        <function>isset</function>
       </entry>
       <entry>
        <function>list</function>
       </entry>
       <entry>
        &match;（从 PHP 8.0 开始）
       </entry>
       <entry>
        <link linkend="language.namespaces">namespace</link>
       </entry>
       <entry>
        <link linkend="language.oop5.basic.new">new</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.operators.logical">or</link>
       </entry>
       <entry>
        <function>print</function>
       </entry>
       <entry>
        <link linkend="language.oop5.visibility">private</link>
       </entry>
       <entry>
        <link linkend="language.oop5.visibility">protected</link>
       </entry>
       <entry>
        <link linkend="language.oop5.visibility">public</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.oop5.properties.readonly-properties">readonly</link>（自 PHP 8.1.0 起）*
       </entry>
       <entry>
        <function>require</function>
       </entry>
       <entry>
        <function>require_once</function>
       </entry>
       <entry>
        <function>return</function>
       </entry>
       <entry>
        <link linkend="language.variables.scope">static</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.switch">switch</link>
       </entry>
       <entry>
        <link linkend="language.exceptions">throw</link>
       </entry>
       <entry>
        <link linkend="language.oop5.traits">trait</link>
       </entry>
       <entry>
        <link linkend="language.exceptions">try</link>
       </entry>
       <entry>
        <function>unset</function>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.namespaces">use</link>
       </entry>
       <entry>
        <link linkend="language.oop5.properties">var</link>
       </entry>
       <entry>
        <link linkend="control-structures.while">while</link>
       </entry>
       <entry>
        <link linkend="language.operators.logical">xor</link>
       </entry>
       <entry>
        <link linkend="language.generators">yield</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.yield.from">yield from</link>
       </entry>
       <entry></entry>
       <entry></entry>
       <entry></entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>

  <simpara>
   * <literal>readonly</literal> 可用作函数名。
  </simpara>

  <table>
    <title>编译时常量</title>
    <tgroup cols="5">
     <tbody>
      <row>
       <entry>
        <link linkend="language.constants.predefined">__CLASS__</link>
       </entry>
       <entry> 
        <link linkend="language.constants.predefined">__DIR__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__FILE__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__FUNCTION__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__LINE__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__METHOD__</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.namespaces.nsconstants">__NAMESPACE__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__TRAIT__</link>
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect1>

  <sect1 xml:id="reserved.classes">
   <title>预定义类</title>
   <para>
    本节列出标准的预定义类。各种扩展库定义了其它类，其说明在各自的参考文档中。
   </para>

   <sect2 xml:id="reserved.classes.standard">
    <title>标准类</title>

    <simpara>
     这些类由一些内建在 PHP 中的标准函数定义。
    </simpara>

    <variablelist>
     <varlistentry>
      <term><classname>Directory</classname></term>
      <listitem>
       <simpara>
         由 <function>dir</function> 创建。
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>stdClass</classname></term>
      <listitem>
       <simpara>
        使用<link linkend="language.types.object.casting">类型转换为对象</link>或者各种标准函数创建的通用空类。
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>__PHP_Incomplete_Class</classname></term>
      <listitem>
       <simpara>
        可能由 <function>unserialize</function> 创建。
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>Exception</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>ErrorException</classname></term>
      <listitem>
       <simpara>

       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>php_user_filter</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>Closure</classname></term>
      <listitem>
       <simpara>
        预定义的 final 类 <classname>Closure</classname>，它可以用于实现
        <link
         linkend="functions.anonymous">匿名函数</link>。
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>Generator</classname></term>
      <listitem>
       <simpara>
        预定义的 final 类 <classname>Generator</classname>，它可以用于实现
        <link linkend="language.generators">生成器</link>。
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>ArithmeticError</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>AssertionError</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>DivisionByZeroError</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>Error</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>Throwable</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>ParseError</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>TypeError</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 xml:id="reserved.classes.special">
    <title>特殊的类</title>
    
    <simpara>
    以下这些标识符由于它们有特殊的用处，因此不可作为类名
    </simpara>
    
    <variablelist>
     <varlistentry>
      <term><classname>self</classname></term>
      <listitem>
       <simpara>
        <link linkend="language.oop5.paamayim-nekudotayim">当前类</link>。
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>static</classname></term>
      <listitem>
       <simpara>
        <link linkend="language.oop5.late-static-bindings">运行时的当前类</link>。
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>parent</classname></term>
      <listitem>
       <simpara>
        <link linkend="language.oop5.paamayim-nekudotayim">父级类</link>。
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

  </sect1>
  &appendices.reserved.constants;
  <sect1 xml:id="reserved.other-reserved-words">
   <title>其他保留字列表</title>
   <simpara>
    以下关键字不可被用于类名、接口名和trait名，在 PHP 8.0
    之前，它们被禁止用于命名空间。
   </simpara>
   <para>
    <table>
     <title>保留字</title>
     <tgroup cols="4">
      <tbody>
       <row>
        <entry>
         int
        </entry>
        <entry>
         float
        </entry>
        <entry>
         bool
        </entry>
        <entry>
         string
        </entry>
       </row>
       <row>
        <entry>
         true
        </entry>
        <entry>
         false
        </entry>
        <entry>
         null
        </entry>
        <entry>
         void（从 PHP 7.1 开始）
        </entry>
       </row>
       <row>
        <entry>
         iterable（从 PHP 7.1 开始）
        </entry>
        <entry>
         object（从 PHP 7.2 开始）
        </entry>
        <entry>
         mixed（从 PHP 8.0 开始）
        </entry>
        <entry>
         never（从 PHP 8.1 开始）
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   <para>
    以下关键词已经被建议保留。尽管你仍然可以将它们用于类名、接口名和 trait
    名，但是考虑到在将来的PHP版本中可能会使用，因此非常不推荐去使用它们。
   </para>
   <para>
    <table>
     <title>Soft reserved words</title>
     <tgroup cols="4">
      <tbody>
       <row>
        <entry>
         enum
        </entry>
        <entry>
         resource
        </entry>
        <entry>
         numeric
        </entry>
        <entry>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
  </sect1>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
