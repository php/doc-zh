<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: fccc7eb7010120c17732c57f93df1f321245376c Maintainer: Avenger Status: partial -->
<!-- CREDITS: mowangjuanzi, Luffy -->
<section xml:id="ini.core" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>&php.ini; 核心指令说明</title>
  <para>
   该列表只包含可以配置 PHP 的核心 &php.ini; 指令。扩展的指令处理在各个扩展的文档页面分别列出和详细说明；比如，有关 session
   指令可以在 <link linkend="session.configuration">sessions 页面</link>找到。
  </para>
  <note>
   <para>
    当未加载 &php.ini; 时，使用以下列出的默认值；开发和生产环境的 &php.ini; 值可能会有所不同。
   </para>
  </note>
  <section xml:id="ini.sect.language-options">
   <title>语言选项</title>
   <para>
    <table>
     <title>语言和杂类配置选项</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.short-open-tag">short_open_tag</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.precision">precision</link></entry>
        <entry>"14"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.serialize-precision">serialize_precision</link></entry>
        <entry>"-1"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry>
        在 PHP 7.1.0 以前，默认值为 17。
        </entry>
       </row>
       <row>
        <entry><link linkend="ini.disable-functions">disable_functions</link></entry>
        <entry>""</entry>
        <entry>仅为 PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.disable-classes">disable_classes</link></entry>
        <entry>""</entry>
        <entry>仅为 &php.ini;</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.exit-on-timeout">exit_on_timeout</link></entry>
        <entry>""</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.expose-php">expose_php</link></entry>
        <entry>"1"</entry>
        <entry>仅为 &php.ini;</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.hard-timeout">hard_timeout</link></entry>
        <entry>"2"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>从 PHP 7.1.0 起可用</entry>
       </row>
       <row>
        <entry><link linkend="ini.zend.exception-ignore-args">zend.exception_ignore_args</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry>从 PHP 7.4.0 起可用</entry>
       </row>
       <row>
        <entry><link linkend="ini.zend.multibyte">zend.multibyte</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.zend.script-encoding">zend.script_encoding</link></entry>
        <entry>NULL</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.zend.detect-unicode">zend.detect_unicode</link></entry>
        <entry>NULL</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.zend.signal-check">zend.signal_check</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.zend.assertions">zend.assertions</link></entry>
        <entry>"1"</entry>
        <entry>有限制的 PHP_INI_ALL</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.zend.exception-string-param-max-len">zend.exception_string_param_max_len</link></entry>
        <entry>"15"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry>自 PHP 8.0.0 起可用。</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry xml:id="ini.short-open-tag">
      <term>
       <parameter>short_open_tag</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
         告诉 PHP 是否允许 PHP 开放标签的缩写形式（<userinput>&lt;? ?&gt;</userinput>）。如果要 PHP 和 XML 结合使用，可以禁用此选项以便嵌入使用
         <userinput>&lt;?xml ?&gt;</userinput>。否则还可以通过 PHP 来打印，例如：<userinput>&lt;?php echo '&lt;?xml version="1.0"?&gt;';
         ?&gt;</userinput>。此外，如果禁用，必须使用 PHP 开放标签的完整形式（<userinput>&lt;?php ?&gt;</userinput>）。
       </para>
       <note>
        <para>
          本指令不会影响简写 <userinput>&lt;?=</userinput>，因为它始终可用。
        </para>
       </note>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.precision">
      <term>
       <parameter>precision</parameter>
       <type>int</type>
      </term>
      <listitem>
       <simpara>
        浮点数中显示有效数字的位数。<literal>-1</literal> 表示将使用增强算法来四舍五入此类数字。
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="ini.serialize-precision">
      <term>
       <parameter>serialize_precision</parameter>
       <type>int</type>
      </term>
      <listitem>
       <simpara>
        序列化浮点数时存储的有效数字的位数。<literal>-1</literal> 表示将使用增强算法来四舍五入此类数字。
      </simpara>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.expose-php">
      <term>
       <parameter>expose_php</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        确定是否向外界公开服务器上安装了 PHP，在 HTTP 标头中包含 PHP 版本号（例如：X-Powered-By: PHP/5.3.7）。
       </para>
      </listitem>
     </varlistentry>

    <varlistentry xml:id="ini.disable-functions">
     <term>
      <parameter>disable_functions</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       本指令可用于禁止某些函数。接受逗号分隔的函数名列表作为参数。
      </para>
       <para>
        此指令仅能禁用 <link linkend="functions.internal">内置函数</link>。
        不能影响<link linkend="functions.user-defined">用户自定义函数</link>。
      </para>
      <para>
       本指令只能设置在 &php.ini; 中。例如不能将其设置在 &httpd.conf; 中。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.disable-classes">
      <term>
       <parameter>disable_classes</parameter>
       <type>string</type>
      </term>
      <listitem>
       <simpara>
        本指令允许禁用某些类。接受逗号分隔的类名列表作为参数。
       </simpara>
       <simpara>
        本指令必须设置在 &php.ini; 中。例如不能将其设置在 &httpd.conf; 中。
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="ini.zend.assertions">
      <term>
       <parameter>zend.assertions</parameter>
       <type>int</type>
      </term>
      <listitem>
       <simpara>
        当设置为 <literal>1</literal> 时，生成断言代码并执行（开发模式）。当设置为 <literal>0</literal> 时，将生成断言代码，但运行时会跳过（不执行）。当设置为
        <literal>-1</literal> 时，不生成断言代码，使断言成本为零（生产模式）。
       </simpara>
       <note>
        <para>
         如果在生产模式下启动进程，则 <link linkend="ini.zend.assertions">zend.assertions</link> 不能在运行时修改，因为未生成断言代码。
        </para>
        <para>
         如果在开发模式下启动进程，则 <link linkend="ini.zend.assertions">zend.assertions</link> 不能在运行时设置为 <literal>-1</literal>。
        </para>
       </note>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="ini.zend.exception-string-param-max-len">
      <term>
       <parameter>zend.exception_string_param_max_len</parameter>
       <type>int</type>
      </term>
      <listitem>
       <simpara>
        字符串化栈追踪中字符串函数参数的最大长度。必须介于 <literal>"0"</literal> 和 <literal>"1000000"</literal> 之间。
       </simpara>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.hard-timeout">
      <term>
       <parameter>hard_timeout</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        当命中 <link linkend="ini.max-execution-time">max_execution_time</link> 中设置的超时的时候，PHP
        运行时将会优雅的销毁资源。如果在这时卡住，硬超时将计时设置的秒数。当命中硬超时的时候，PHP 将异常退出。当设置为 0
        时，硬超时始终不会激活。
       </para>
       <para>
        当 PHP 因硬超时而停止时，它看起来像这样：
        <screen>
<![CDATA[
Fatal error: Maximum execution time of 30+2 seconds exceeded (terminated) in Unknown on line 0
]]>
        </screen>
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.zend.exception-ignore-args">
      <term>
       <parameter>zend.exception_ignore_args</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        从异常产生的栈中排除参数。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.zend.multibyte">
      <term>
       <parameter>zend.multibyte</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        启用多字节编码的源文件解析。启用 zend.multibyte 是使用 SJIS、BIG5 等在多字节字符串数据中包含特殊字符的字符编码所必需的。ISO-8859-1
        兼容的编码，如 UTF-8、EUC 等，则不需要这个选项。
       </para>
       <para>
        启用 zend.multibyte 需要 mbstring 扩展可用。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.zend.script-encoding">
      <term>
       <parameter>zend.script_encoding</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        除非在脚本顶部出现 <link linkend="control-structures.declare.encoding">declare(encoding=...)</link>
        指令，否则将会使用此值。当使用不兼容 ISO-8859-1 的编码时，必须同时使用 zend.multibyte 和 zend.script_encoding。
       </para>
       <para>
        文本字符串将从 zend.script_encoding 直译为 mbstring.internal_encoding，就像调用了
        <function>mb_convert_encoding</function> 一样。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="ini.zend.detect-unicode">
      <term>
       <parameter>zend.detect_unicode</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        检查 BOM（Byte Order Mark，即字节顺序标记）并查看文件是否包含有效的多字节字符。此检测可以在处理 <function>__halt_compiler</function>
        执行。仅在 Zend 多字节模式下使用。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.zend.signal-check">
      <term>
       <parameter>zend.signal_check</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        在关闭时检查替换的信号处理程序。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.exit-on-timeout">
      <term>
       <parameter>exit_on_timeout</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        这是 Apache1 mod_php-only 指令，如果 PHP 执行超时，会强制 Apache 子程序退出。这样的超时会导致
        Apache1 内部的 longjmp() 调用，从而使一些扩展处于不一致的状态。通过终止进程，将会清除任何未完成的锁或内存。
       </para>
      </listitem>
     </varlistentry>
     
    </variablelist>
   </para>
  </section>
  
  <section xml:id="ini.sect.resource-limits">
   <title>资源限制</title>
   <para>
    <table>
     <title>资源限制</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.memory-limit">memory_limit</link></entry>
        <entry>"128M"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry xml:id="ini.memory-limit">
      <term>
       <parameter>memory_limit</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        设置了允许脚本分配的最大内存量，以字节为单位。这有助于防止写得不好的脚本吃掉服务器上所有可用的内存。请注意，如果不需要内存限制，请将此指令设置为
        <literal>-1</literal>。
       </para>
       
       &ini.shorthandbytes;
       
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
    请参阅：<link linkend="ini.max-execution-time">max_execution_time</link>。
   </para>
  </section>
  
  <section xml:id="ini.sect.performance">
   <title>性能调整</title>
   <para>
    <table>
     <title>性能调整</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.realpath-cache-size">realpath_cache_size</link></entry>
        <entry>"4M"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>PPHP 7.0.16 和 7.1.2 之前，默认值为 <literal>"16K"</literal></entry>
       </row>
       <row>
        <entry><link linkend="ini.realpath-cache-ttl">realpath_cache_ttl</link></entry>
        <entry>"120"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
      </tbody>
     </tgroup>
    </table>
    <note>
     <para>
      启用 <link linkend="ini.open-basedir">open_basedir</link> 将会
      <emphasis>禁用</emphasis> realpath 缓存。
     </para>
    </note>
   </para>
   &ini.descriptions.title;
   <para>
    <variablelist>
     <varlistentry xml:id="ini.realpath-cache-size">
      <term>
       <parameter>realpath_cache_size</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        设定 PHP 使用的 realpath 缓存的大小。在
        PHP 打开很多文件的系统中，这个值应该增加，以优化执行文件操作的数量。
       </para>
       <para>
        这里的大小表示存储的路径字符串的总字节数，加上与缓存条目相关的数据大小。这意味着，为了在缓存中存储更长的路径，缓存大小必须更大。这个值不直接控制可以缓存的不同路径的数量。
       </para>
       <para>
        缓存输入数据所需的大小取决于操作系统。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.realpath-cache-ttl">
      <term>
       <parameter>realpath_cache_ttl</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        缓存指定文件或目录的真实路径信息的持续时间（以秒为单位）。对于很少改变文件的系统，可以考虑增加该值。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
  </section>
  
  <section xml:id="ini.sect.data-handling">
   <title>数据处理</title>
   <para>
    <table>
     <title>数据处理配置选项</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.arg-separator.output">arg_separator.output</link></entry>
        <entry>"&amp;"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.arg-separator.input">arg_separator.input</link></entry>
        <entry>"&amp;"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.variables-order">variables_order</link></entry>
        <entry>"EGPCS"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.request-order">request_order</link></entry>
        <entry>""</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.auto-globals-jit">auto_globals_jit</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.register-argc-argv">register_argc_argv</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.enable-post-data-reading">enable_post_data_reading</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.post-max-size">post_max_size</link></entry>
        <entry>"8M"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.auto-prepend-file">auto_prepend_file</link></entry>
        <entry>NULL</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.auto-append-file">auto_append_file</link></entry>
        <entry>NULL</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.default-mimetype">default_mimetype</link></entry>
        <entry>"text/html"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.default-charset">default_charset</link></entry>
        <entry>"UTF-8"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.input-encoding">input_encoding</link></entry>
        <entry>""</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.output-encoding">output_encoding</link></entry>
        <entry>""</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.internal-encoding">internal_encoding</link></entry>
        <entry>""</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry xml:id="ini.arg-separator.output">
      <term>
       <parameter>arg_separator.output</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        在 PHP 生成的 URL 中用来分隔参数的分隔符。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.arg-separator.input">
      <term>
       <parameter>arg_separator.input</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        PHP 用于将输入的 URL 解析为变量的分隔符列表。
       </para>
       <note>
        <para>
         本指令中的每一个字符都被视为分隔符！
        </para>
       </note>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.variables-order">
      <term>
       <parameter>variables_order</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        设置 EGPCS（<literal>E</literal>nvironment、<literal>G</literal>et、<literal>P</literal>ost、<literal>C</literal>ookie 和
        <literal>S</literal>erver）变量解析的顺序。例如，如果 variables_order 设置为 <literal>"SP"</literal>，然后 PHP 将创建 &link.superglobals;
        <varname>$_SERVER</varname> 和 <varname>$_POST</varname>，但不会创建 <varname>$_ENV</varname>、<varname>$_GET</varname> 和
        <varname>$_COOKIE</varname>。设置为 "" 意味着不会设置 &link.superglobals;。
       </para>
       <warning>
        <para>
         在 CGI 和 FastCGI SAPI 中，<varname>$_SERVER</varname> 也包含环境的值；<literal>S</literal> 始终等同于 <literal>ES</literal>，而不关心
         <literal>E</literal> 在该指令中的位置。
        </para>
       </warning>
       <note>
        <para>
         <varname>$_REQUEST</varname> 的内容和顺序也受到此指令的影响。
        </para>
       </note>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.request-order">
      <term>
       <parameter>request_order</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        该指令描述了 PHP 将 GET、POST 和 Cookie 变量注册到 _REQUEST 数组中的顺序。注册是从左到右完成的，新值覆盖旧值。
       </para>
       <para>
        如果未设置此指令，则 <link linkend="ini.variables-order">variables_order</link> 用于 <varname>$_REQUEST</varname> 内容。
       </para>
       <para>
        请注意，出于安全考虑，默认分发的 <filename>php.ini</filename> 文件不包含 cookie 的 <literal>'C'</literal>。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.auto-globals-jit">
      <term>
       <parameter>auto_globals_jit</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        启用后，SERVER、REQUEST 和 ENV 变量在首次使用时（即时）创建，而不是在脚本启动时创建。如果这些变量未在脚本中使用，启用此指令将提高性能。
       </para>
       <warning>
        <para>
         在编译期间检查 SERVER、REQUEST 和 ENV 变量的使用，因此通过<link linkend="language.variables.variable">可变变量</link>使用它们将不会使其初始化。
        </para>
       </warning>
      </listitem>
     </varlistentry>

     
     <varlistentry xml:id="ini.register-argc-argv">
      <term>
       <parameter>register_argc_argv</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <simpara>
        告诉 PHP 是否声明 argv &amp; argc 变量（将包含 GET 信息）。
       </simpara>
       <simpara>
        另请参阅<link linkend="features.commandline">命令行</link>。
       </simpara>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.enable-post-data-reading">
      <term>
       <parameter>enable_post_data_reading</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <simpara>
        禁用这个选项会导致<emphasis>不会</emphasis>填充 <varname>$_POST</varname> 和 <varname>$_FILES</varname>。读取 postdata 的唯一方法是通过
        <link linkend="wrappers.php">php://input</link> 流封装协议。这对于代理请求或以高效内存的方式处理 POST 数据很有用。
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="ini.post-max-size">
      <term>
       <parameter>post_max_size</parameter>
       <type>int</type>
      </term>
      <listitem>
       <simpara>
        设置允许 post 数据的最大大小。此设置也会影响文件上传。要上传大文件，此值必须大于 <link linkend="ini.upload-max-filesize">upload_max_filesize</link>。
       </simpara>
       <simpara>
        一般来说，<link linkend="ini.memory-limit">memory_limit</link> 应该大于 <parameter>post_max_size</parameter>。
       </simpara>
       
       &ini.shorthandbytes;
       
       <simpara>
        如果 post 数据的大小大于 post_max_size，则 <varname>$_POST</varname> 和 <varname>$_FILES</varname>
        <link linkend="language.variables.superglobals">超全局变量</link>为空。这可以通过多种方式进行跟踪，例如通过将 <varname>$_GET</varname> 变量传递给处理数据的脚本，即
        <literal>&lt;form action="edit.php?processed=1"&gt;</literal>，然后检查是否设置了 <varname>$_GET['processed']</varname>。
       </simpara>
       <para>
        <note>
         <para>
          PHP 允许使用字节值的快捷方式，包括 K（千）、M（兆）和 G（千兆）。如果使用其中任何一个，PHP 将自动进行转换。注意不要超过 32 位有符号整数限制（如果使用的是 32 位版本），因为这会导致脚本失败。
         </para>
        </note>
       </para>
       <para>
        <table>
         <title><literal>post_max_size</literal> 变更日志</title>
         <tgroup cols="2">
          <thead>
           <row>
            <entry>&Version;</entry>
            <entry>&Description;</entry>
           </row>
          </thead>
          <tbody>
           <row>
            <entry>5.3.4</entry>
            <entry>
             <parameter>post_max_size</parameter> = 0 will not disable the limit when the content
             type is application/x-www-form-urlencoded or is not registered with PHP.
            </entry>
           </row>
           <row>
            <entry>5.3.2 , 5.2.12</entry>
            <entry>
             Allow unlimited post size by setting <parameter>post_max_size</parameter> to 0.
            </entry>
           </row>
          </tbody>
         </tgroup>
        </table>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="ini.auto-prepend-file">
      <term>
       <parameter>auto_prepend_file</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        指定在主文件之前自动解析的文件名。included 该文件像是用 <function>require</function> 函数调用的一样，因此使用了 <link linkend="ini.include-path">include_path</link>。
       </para>
       <para>
        特殊值 <literal>none</literal> 禁用 auto-prepending。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.auto-append-file">
      <term>
       <parameter>auto_append_file</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        指定在主文件之后自动解析的文件名。included 该文件像是用 <function>require</function> 函数调用的一样，因此使用了 <link linkend="ini.include-path">include_path</link>。
       </para>
       <para>
        特殊值 <literal>none</literal> 禁用 auto-prepending。
        <note>
         <simpara>
          如果脚本以 <function>exit</function> 终止，则<emphasis>不会</emphasis>发生 auto-append。
         </simpara>
        </note>
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.default-mimetype">
      <term>
       <parameter>default_mimetype</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        默认情况下，PHP 将使用 Content-Type 标头输出媒体类型。只需将其设置为空即可禁用。
       </para>
       <para>
        PHP 内置默认媒体类型设置为 text/html。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.default-charset">
      <term>
       <parameter>default_charset</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        “UTF-8”是默认值，如果省略 <parameter>encoding</parameter> 参数，它的值将用作 <function>htmlentities</function>、<function>html_entity_decode</function> 和 <function>htmlspecialchars</function>
        的默认字符编码。 如果未设置 <link linkend="ini.iconv.input-encoding"><parameter>iconv.input_encoding</parameter></link>、<link linkend="ini.iconv.output-encoding"><parameter>iconv.output_encoding</parameter></link>
        和 <link linkend="ini.iconv.internal-encoding"><parameter>iconv.internal_encoding</parameter></link> 配置选项，则 <parameter>default_charset</parameter> 的值也将用于设置 <link linkend="book.iconv">iconv</link>
        函数的默认字符集，如果 <link linkend="ini.mbstring.http-input"><parameter>mbstring.http_input</parameter></link> <link linkend="ini.mbstring.http-output"><parameter>mbstring.http_output</parameter></link>
        <link linkend="ini.mbstring.internal-encoding"><parameter>mbstring.internal_encoding</parameter></link> 配置选项未设置，则也可用于 <link linkend="book.mbstring">mbstring</link> 函数。
       </para>
       <para>
        如果标头未通过调用 <function>header</function> 覆盖，则所有版本的 PHP 都将使用此值作为 PHP 发送的默认 Content-Type 报头中的字符集。
       </para>
       <para>
        不推荐设置 <parameter>default_charset</parameter> 为空字符串。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.input-encoding">
      <term>
       <parameter>input_encoding</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        此设置用于多字节模块，例如 mbstring 和 iconv。 默认为空。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.output-encoding">
      <term>
       <parameter>output_encoding</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        此设置用于多字节模块，例如 mbstring 和 iconv。 默认为空。
       </para>
      </listitem>
     </varlistentry>
      
     <varlistentry xml:id="ini.internal-encoding">
      <term>
       <parameter>internal_encoding</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        此设置用于多字节模块，例如 mbstring 和 iconv。 默认为空。 如果为空，则使用 <link linkend="ini.default-charset">default_charset</link>。
       </para>
      </listitem>
     </varlistentry>
      
    </variablelist>
   </para>
  </section>
  
  <section xml:id="ini.sect.path-directory">
   <title>路径和目录</title>
   <para>
    <table>
     <title>路径和目录配置项</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.include-path">include_path</link></entry>
        <entry>".;/path/to/php/pear"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.open-basedir">open_basedir</link></entry>
        <entry>NULL</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.doc-root">doc_root</link></entry>
        <entry>NULL</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.user-dir">user_dir</link></entry>
        <entry>NULL</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.user-ini.cache-ttl">user_ini.cache_ttl</link></entry>
        <entry>"300"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.user-ini.filename">user_ini.filename</link></entry>
        <entry>".user.ini"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.extension-dir">extension_dir</link></entry>
        <entry>"/path/to/php"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.extension">extension</link></entry>
        <entry>NULL</entry>
        <entry>&php.ini; only</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.zend-extension">zend_extension</link></entry>
        <entry>NULL</entry>
        <entry>&php.ini; only</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.cgi.check-shebang-line">cgi.check_shebang_line</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.cgi.discard-path">cgi.discard_path</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.cgi.fix-pathinfo">cgi.fix_pathinfo</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.cgi.force-redirect">cgi.force_redirect</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.cgi.nph">cgi.nph</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.cgi.redirect-status-env">cgi.redirect_status_env</link></entry>
        <entry>NULL</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.cgi.rfc2616-headers">cgi.rfc2616_headers</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.fastcgi.impersonate">fastcgi.impersonate</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.fastcgi.logging">fastcgi.logging</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry xml:id="ini.include-path">
      <term>
       <parameter>include_path</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        指定 <function>require</function>、<function>include</function>、<function>fopen</function>、<function>file</function>、<function>readfile</function>
        和 <function>file_get_contents</function> 函数在其中查找文件的目录列表，格式类似于系统的 <envar>PATH</envar>
        环境变量：目录列表，在 Unix 中使用冒号分隔，在 Windows 中使用分号分隔。
       </para>
       <para>
        PHP considers each entry in the include path separately when looking for
        files to include. It will check the first path, and if it doesn't find
        it, check the next path, until it either locates the included file or
        returns with an
        <constant>E_WARNING</constant>
        or an <constant>E_ERROR</constant>. 
        You may modify or set your include path at runtime using
        <function>set_include_path</function>.
       </para>
       <para>
        <example>
         <title>Unix include_path</title>
         <programlisting role="php.ini">
<![CDATA[
include_path=".:/php/includes"
]]>
         </programlisting>
        </example>
       </para>
       <para>
        <example>
         <title>Windows include_path</title>
         <programlisting role="php.ini">
<![CDATA[
include_path=".;c:\php\includes"
]]>
         </programlisting>
        </example>
       </para>
       <para>
        Using a <literal>.</literal> in the include path allows for
        relative includes as it means the current directory.  However,
        it is more efficient to explicitly use <literal>include
        './file'</literal> than having PHP always check the current
        directory for every include.
       </para>
       <note>
        <para>
         <literal>ENV</literal> variables are also accessible in .ini files.
         As such it is possible to reference the home directory using
         <literal>${LOGIN}</literal> and <literal>${USER}</literal>.
        </para>
        <para>
         Environment variables may vary between Server APIs as those environments
         may be different.
        </para>       
       </note>
       <para>
        <example>
         <title>Unix include_path using ${USER} env variable</title>
         <programlisting role="php.ini">
<![CDATA[
include_path = ".:${USER}/pear/php"
]]>
         </programlisting>
        </example>
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.open-basedir">
      <term>
       <parameter>open_basedir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Limit the files that can be accessed by PHP to the specified
        directory-tree, including the file itself.
       </para>
       <para>
        When a script tries to access the filesystem, for example using 
        <function>include</function>, or <function>fopen</function>, the location of the file 
        is checked.
        When the file is outside the specified directory-tree, PHP will refuse to access it. 
        All symbolic links are resolved, so it's not possible to avoid this restriction
        with a symlink. If the file doesn't exist then the symlink couldn't be
        resolved and the filename is compared to (a resolved) <option>open_basedir</option>.
       </para>
       <para>
        <option>open_basedir</option> can affect more than just filesystem functions; for example 
        if <literal>MySQL</literal> is configured to use <literal>mysqlnd</literal> drivers,
        <literal>LOAD DATA INFILE</literal> will be affected by <option>open_basedir</option>.
        Much of the extended functionality of PHP uses <literal>open_basedir</literal> in this way.
       </para>
       <para>
        The special value <systemitem class="filesystem">.</systemitem>
        indicates that the working directory of the script will be used as the
        base-directory. This is, however, a little dangerous as the working directory
        of the script can easily be changed with <function>chdir</function>.
       </para>
       <para>
        In <filename>httpd.conf</filename>, <option>open_basedir</option> can be turned off
        (e.g. for some virtual hosts)
        <link linkend="configuration.changes.apache">the same way</link> as
        any other configuration directive with "<literal>php_admin_value open_basedir
        none</literal>".
       </para>
       <para>
        Under Windows, separate the directories with a semicolon. On all
        other systems, separate the directories with a colon. As an Apache
        module, <option>open_basedir</option> paths from parent directories are now
        automatically inherited.
       </para>
       <para>
        The restriction specified with <option>open_basedir</option> is a
        directory name, not a prefix.
       </para>
       <para>
        The default is to allow all files to be opened.
       </para>
       <note>
        <para>
         open_basedir can be tightened at run-time. This means
         that if open_basedir is set to <literal>/www/</literal> in &php.ini;
         a script can tighten the configuration to
         <literal>/www/tmp/</literal> at run-time with
         <function>ini_set</function>. When listing several directories, you
         can use the <constant>PATH_SEPARATOR</constant> constant as a separator
         regardless of the operating system.
        </para>
       </note>
       <note>
        <para>
         Using open_basedir will set <link linkend="ini.realpath-cache-size">realpath_cache_size</link>
         to <literal>0</literal> and thus <emphasis>disable</emphasis> the realpath cache.
        </para>
       </note>
       <caution>
        <para>
         <literal>open_basedir</literal> 只是额外的安全保障，并不全面，因此在需要安全性时并不能依赖它。
        </para>
       </caution>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.doc-root">
      <term>
       <parameter>doc_root</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        PHP's "root directory" on the server. Only used if
        non-empty.
        If PHP was not compiled with FORCE_REDIRECT, you <emphasis>should
        </emphasis> set doc_root if you are running PHP as a CGI under any web
        server (other than IIS). The alternative is to use the
        <link linkend="ini.cgi.force-redirect">
         cgi.force_redirect</link> configuration below.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.user-ini.cache-ttl">
      <term>
       <parameter>user_ini.cache_ttl</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.user-ini.filename">
      <term>
       <parameter>user_ini.filename</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.user-dir">
      <term>
       <parameter>user_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        The base name of the directory used on a user's home directory for PHP
        files, for example <filename class="directory">public_html
        </filename>.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.extension-dir">
      <term>
       <parameter>extension_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        PHP 寻找可动态加载扩展的目录。建议指定绝对路径。参阅 <link linkend="ini.enable-dl">enable_dl</link>
        和 <function>dl</function>。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.extension">
      <term>
       <parameter>extension</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Which dynamically loadable extensions to load when PHP starts up.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.zend-extension">
      <term>
       <parameter>zend_extension</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Name of dynamically loadable Zend extension (for example
        XDebug) to load when PHP starts up.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.cgi.check-shebang-line">
      <term>
       <parameter>cgi.check_shebang_line</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        Controls whether <acronym>CGI</acronym> PHP checks for line starting
        with <literal>#!</literal> (shebang) at the top of the running script.
        This line might be needed if the script support running both as
        stand-alone script and via PHP <acronym>CGI</acronym>. PHP in
        <acronym>CGI</acronym> mode skips this line and ignores its content if
        this directive is turned on.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.cgi.discard-path">
      <term>
       <parameter>cgi.discard_path</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        If this is enabled, the PHP CGI binary can safely be placed outside of
        the web tree and people will not be able to circumvent .htaccess security.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.cgi.fix-pathinfo">
      <term>
       <parameter>cgi.fix_pathinfo</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        Provides <emphasis>real</emphasis> <literal>PATH_INFO</literal>/
        <literal>PATH_TRANSLATED</literal> support for <acronym>CGI</acronym>.
        PHP's previous behaviour was to set <literal>PATH_TRANSLATED</literal>
        to <literal>SCRIPT_FILENAME</literal>, and to not grok what <literal>
        PATH_INFO</literal> is. For more information on
        <literal>PATH_INFO</literal>, see the <acronym>CGI</acronym> specs.
        Setting this to <literal>1</literal> will cause PHP
        <acronym>CGI</acronym> to fix its paths to conform to the spec. A
        setting of zero causes PHP to behave as before. It is turned on by
        default. You should fix your scripts to use
        <literal>SCRIPT_FILENAME</literal> rather than
        <literal>PATH_TRANSLATED</literal>.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.cgi.force-redirect">
      <term>
       <parameter>cgi.force_redirect</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        cgi.force_redirect is necessary to provide security running PHP as a
        <acronym>CGI</acronym> under most web servers. Left undefined, PHP
        turns this on by default. You can turn it off <emphasis>at your own
        risk</emphasis>.
       </para>
       <note>
        <para>
         Windows Users: When using IIS this option <emphasis>must</emphasis>
         be turned off. For OmniHTTPD or Xitami the same applies.
        </para>
       </note>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.cgi.nph">
      <term>
       <parameter>cgi.nph</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        If cgi.nph is enabled it will force cgi to always sent Status: 200 with
        every request.
        </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.cgi.redirect-status-env">
      <term>
       <parameter>cgi.redirect_status_env</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        If cgi.force_redirect is turned on, and you are not running under
        Apache or Netscape (iPlanet) web servers, you <emphasis>may</emphasis>
        need to set an environment variable name that PHP will look for to
        know it is OK to continue execution.
       </para>
       <note>
        <para>
         Setting this variable <emphasis>may</emphasis> cause security issues,
         <emphasis>know what you are doing first</emphasis>.
        </para>
       </note>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.cgi.rfc2616-headers">
      <term>
       <parameter>cgi.rfc2616_headers</parameter>
       <type>int</type>
      </term>
      <listitem>
      <para>
        Tells PHP what type of headers to use when sending HTTP response
        code. If it's set to 0, PHP sends a <link xlink:href="&url.rfc;3875">RFC 3875</link> 
        "Status:" header that is supported by Apache and other web servers. When this option 
        is set to 1, PHP will send <link xlink:href="&url.rfc;2616">RFC 2616</link> compliant
        headers.  
       </para>
       <para>
        If this option is enabled, and you are running PHP in a CGI environment (e.g. PHP-FPM)
        you should not use standard RFC 2616 style HTTP status response headers, you should 
        instead use their RFC 3875 equivalent e.g. instead of header("HTTP/1.0 404 Not found"); 
        you should use header("Status: 404 Not Found");
       </para>
       <para>
        Leave it set to 0 unless you know what you're doing.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.fastcgi.impersonate">
      <term>
       <parameter>fastcgi.impersonate</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        FastCGI under IIS (on WINNT based OS) supports the ability to impersonate
        security tokens of the calling client. This allows IIS to define the
        security context that the request runs under. mod_fastcgi under Apache
        does not currently support this feature (03/17/2002)
        Set to 1 if running under IIS. Default is zero.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.fastcgi.logging">
      <term>
       <parameter>fastcgi.logging</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        Turns on SAPI logging when using FastCGI. Default is 
        to enable logging.
       </para>
      </listitem>
     </varlistentry>
     
    </variablelist>
   </para>
  </section>
  
  <section xml:id="ini.sect.file-uploads">
   <title>文件上传</title>
   <para>
    <table>
     <title>文件上传配置项</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.file-uploads">file_uploads</link></entry>
        <entry>"1"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.upload-tmp-dir">upload_tmp_dir</link></entry>
        <entry>NULL</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.max-input-nesting-level">max_input_nesting_level</link></entry>
        <entry>64</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.max-input-vars">max_input_vars</link></entry>
        <entry>1000</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.upload-max-filesize">upload_max_filesize</link></entry>
        <entry>"2M"</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry></entry>
       </row>
       <row>
        <entry><link linkend="ini.max-file-uploads">max_file_uploads</link></entry>
        <entry>20</entry>
        <entry>PHP_INI_PERDIR</entry>
        <entry></entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry xml:id="ini.file-uploads">
      <term>
       <parameter>file_uploads</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        是否允许 HTTP <link linkend="features.file-upload">文件上传</link>。参阅
        <link linkend="ini.upload-max-filesize">upload_max_filesize</link>、<link linkend="ini.upload-tmp-dir">upload_tmp_dir</link> 和
        <link linkend="ini.post-max-size">post_max_size</link> 指令。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.upload-tmp-dir">
      <term>
       <parameter>upload_tmp_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        上传文件时用来存放文件的临时目录。必须允许运行 PHP 的任何用户写入。如果未指定，PHP 将使用系统默认值。
       </para>
       <para>
        如果此处指定的目录不可写，PHP 回退到系统默认临时目录。如果打开 <link
        linkend="ini.open-basedir">open_basedir</link>，然后允许系统临时目录才可以成功上传。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.upload-max-filesize">
      <term>
       <parameter>upload_max_filesize</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        上传文件的最大大小。
       </para>
       <para>
        <link linkend="ini.post-max-size">post_max_size</link> 必须大于此值。
       </para>
       
       &ini.shorthandbytes;
       
      </listitem>
     </varlistentry>
     
     <varlistentry xml:id="ini.max-file-uploads">
      <term>
       <parameter>max_file_uploads</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        允许同时上传的最大文件数。提交时留空的上传字段不计入此限制。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
  </section>
  
  <section xml:id="ini.sect.sql-general">
   <title>常规 SQL</title>
   <para>
    <table>
     <title>常规 SQL 配置项</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.sql.safe-mode">sql.safe_mode</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>自 PHP 7.2.0 起移除</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry xml:id="ini.sql.safe-mode">
      <term>
       <parameter>sql.safe_mode</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        If turned on, database connection functions that specify default values
        will use those values in place of any user-supplied arguments. For details
        on the default values, see the documentation for the relevant connection
        functions.
       </para>
       <warning>
        <simpara>
         此功能自 PHP 7.2.0 起<emphasis>移除</emphasis>。
        </simpara>
       </warning>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
  </section>
  
  <section xml:id="ini.sect.windows">
   <title>Windows 专用</title>
   <para>
    <table>
     <title>Windows 专用配置选项</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.windows-show-crt-warning">windows.show_crt_warning</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_ALL</entry>
        <entry></entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry xml:id="ini.windows-show-crt-warning">
      <term>
       <parameter>windows.show_crt_warning</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        该指令在启用时显示 Windows CRT 警告。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
  </section>
  
 </section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
