<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1268a5eebbd09dbc4c4d5272c2bcdc0b035c256c Maintainer: mowangjuanzi Status: ready -->
<!-- CREDITS: mowangjuanzi, Luffy -->
<appendix xml:id="transports" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>所支持的套接字传输器列表</title>
 <para>
  以下是 PHP 内置用于基于流的套接字函数例如 <function>fsockopen</function> 和 
  <function>stream_socket_client</function> 的各种 URL 风格的套接字传输器。这些传输器<emphasis>不适用</emphasis>于
  Socket 扩展库的<link linkend="ref.sockets">Socket 函数</link>。
 </para>

 <para>
  要得到自己的 PHP 版本中所安装的传输器列表，使用 <function>stream_get_transports</function>。
 </para>

 <section xml:id="transports.inet">
  <title>Internet 域：TCP，UDP，SSL 和 TLS</title>
  <simpara>
   <literal>ssl://</literal>、<literal>tls://</literal>、<literal>sslv2://</literal> &amp; <literal>sslv3://</literal>。
  </simpara>
  <note>
   <simpara>
    如果没有指定传输器，则假设是 <literal>tcp://</literal>。
   </simpara>
  </note>

  <itemizedlist>
   <listitem><simpara><literal>127.0.0.1</literal></simpara></listitem>
   <listitem><simpara><literal>fe80::1</literal></simpara></listitem>
   <listitem><simpara><literal>www.example.com</literal></simpara></listitem>
   <listitem><simpara><literal>tcp://127.0.0.1</literal></simpara></listitem>
   <listitem><simpara><literal>tcp://fe80::1</literal></simpara></listitem>
   <listitem><simpara><literal>tcp://www.example.com</literal></simpara></listitem>
   <listitem><simpara><literal>udp://www.example.com</literal></simpara></listitem>
   <listitem><simpara><literal>ssl://www.example.com</literal></simpara></listitem>
   <listitem><simpara><literal>sslv2://www.example.com</literal></simpara></listitem>
   <listitem><simpara><literal>sslv3://www.example.com</literal></simpara></listitem>
   <listitem><simpara><literal>tls://www.example.com</literal></simpara></listitem>
  </itemizedlist>

  <simpara>
   Internet 域套接字在目标地址中还期望有一个端口号。在 <function>fsockopen</function>
   中在第二个参数中指定，这样就不会影响传输器的 URL。然而在 <function>stream_socket_client</function>
   和相关的函数中是用传统的 URL，端口号在传输器 URL 后面以冒号分隔而指定。
  </simpara>

  <itemizedlist>
   <listitem><simpara><literal>tcp://127.0.0.1:80</literal></simpara></listitem>
   <listitem><simpara><literal>tcp://[fe80::1]:80</literal></simpara></listitem>
   <listitem><simpara><literal>tcp://www.example.com:80</literal></simpara></listitem>
  </itemizedlist>

  <note>
   <title>带端口号的 IPv6 数字地址</title>
   <simpara>
    在上面的第二个例子中，IPv4 和主机名的例子只加了一个冒号和端口号，但 IPv6 的地址被放在方括号中：
    <literal>[fe80::1]</literal>。这是为了将 IPv6 地址中的冒号和用来分隔端口号的冒号区别开来。
   </simpara>
  </note>

  <simpara>
    <literal>ssl://</literal> 和 <literal>tls://</literal> 传输器（仅在 openssl 支持已编译入 PHP 
    后可用）是 <literal>tcp://</literal> 传输器加入 SSL 加密后的扩展。
  </simpara>

  <simpara>
    <literal>ssl://</literal> 将根据远程服务器的兼容性和参数设置尝试与之建立 SSL V2 或 SSL V3 链接 
    <literal>sslv2://</literal> 和 <literal>sslv3://</literal> 将明确的选择 SSL V2 或 SSL V3 
    协议进行连接。
  </simpara>
 </section>

 <section xml:id="transports.unix">
  <title>Unix 域：Unix 和 UDG</title>
  <simpara>
   <literal>unix://</literal> 和
   <literal>udg://</literal>。
  </simpara>
  <itemizedlist>
   <listitem><simpara><literal>unix:///tmp/mysock</literal></simpara></listitem>
   <listitem><simpara><literal>udg:///tmp/mysock</literal></simpara></listitem>
  </itemizedlist>

  <simpara>
   <literal>unix://</literal> 提供了在 Unix 域中对套接字流连接的访问。
   <literal>udg://</literal> 提供了替代的传输器以用户数据报协议（UDP）来访问 Unix 域套接字。
  </simpara>

  <simpara>
   Unix 域套接字和 Internet 域套接字不同，不需要端口号。在 
   <function>fsockopen</function> 中 <parameter>portno</parameter> 参数应被设为 0。
  </simpara>

  <note>
   <simpara>
    Windows 不支持 Unix 域套接字。
   </simpara>
  </note>
 </section>

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
