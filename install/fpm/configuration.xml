<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4eeb07225f615fcde68cbefb84df2fc9bf278f1f Maintainer: HonestQiao Status: ready -->

<sect1 xml:id="install.fpm.configuration" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>配置</title>
 <para>
  FPM 使用类似 &php.ini; 语法的 <filename>php-fpm.conf</filename> 和进程池配置文件。
 </para>
 <sect2> 
  <title><filename>php-fpm.conf</filename> 全局配置段</title>
  <variablelist>
   <varlistentry xml:id="pid">
    <term>
     <parameter>pid</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      PID 文件的位置。默认为空。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="error-log">
    <term>
     <parameter>error_log</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      错误日志的位置。默认：<literal>#INSTALL_PREFIX#/log/php-fpm.log</literal>。
      如果设置为 "syslog"，日志将不会写入本地文件，而是发送到 syslogd。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="log-level">
    <term>
     <parameter>log_level</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      错误级别。可用级别为：alert（必须立即处理），error（错误情况），warning（警告情况），notice（一般重要信息），debug（调试信息）。默认：notice。
     </para> 
    </listitem>
   </varlistentry>
     <varlistentry xml:id="log-limit">
      <term>
       <parameter>log_limit</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        日志记录行的限制，允许记录超过 1024 个字符的消息而不需要换行。
        默认值：1024。
        PHP 7.3.0 起可用。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="log-buffering">
      <term>
       <parameter>log_buffering</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        实验性：没有额外缓冲的日志记录。
        默认值：yes。
        PHP 7.3.0 后可用。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="syslog-facility">
      <term>
       <parameter>syslog.facility</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        设置何种程序记录消息，默认值：daemon。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="syslog-ident">
      <term>
       <parameter>syslog.ident</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        为每条信息添加前缀。
        如果在同一台服务器上运行了多个 FPM 实例，可以修改此默认值来满足需求。默认值：php-fpm。
       </para>
      </listitem>
     </varlistentry>
   <varlistentry xml:id="emergency-restart-threshold">
    <term>
     <parameter>emergency_restart_threshold</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      如果子进程在 <literal>emergency_restart_interval</literal> 设定的时间内收到该参数设定次数的
      SIGSEGV 或者 SIGBUS退出信息号，则FPM会重新启动。0 表示“关闭该功能”。默认值：0（关闭）。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="emergency-restart-interval">
    <term>
     <parameter>emergency_restart_interval</parameter>
     <type>mixed</type>
    </term>
    <listitem>
     <para>
      <literal>emergency_restart_interval</literal>
      用于设定平滑重启的间隔时间。这么做有助于解决加速器中共享内存的使用问题。可用单位：s（秒），m（分），h（小时）或者
      d（天）。默认单位：s（秒）。默认值：0（关闭）。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="process-control-timeout">
    <term>
     <parameter>process_control_timeout</parameter>
     <type>mixed</type>
    </term>
    <listitem>
     <para>
      设置子进程接受主进程复用信号的超时时间。可用单位：s（秒），m（分），h（小时）或者
      d（天）。默认单位：s（秒）。默认值：0（关闭）。
     </para> 
    </listitem>
   </varlistentry>
     <varlistentry xml:id="process-max">
      <term>
       <parameter>process.max</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        Fork 的最大 FPM 进程数。使用动态管理进程数时，此设计可以控制在一个进程池内的全局进程数量。
        使用需谨慎。默认值：0。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="process-priority">
      <term>
       <parameter>process.priority</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        设置 master 进程的 nice(2) 优先级（如果设置了此值）。
        可以是 -19（最高优先级）到 20 （更低优先级）。
        默认值：不设置。
       </para>
      </listitem>
     </varlistentry>
   <varlistentry xml:id="daemonize">
    <term>
     <parameter>daemonize</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      设置 FPM 在后台运行。设置“no”将 FPM 保持在前台运行用于调试。默认值：yes。
     </para> 
    </listitem>
   </varlistentry>
     <varlistentry xml:id="rlimit-files-master">
      <term>
       <parameter>rlimit_files</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
          设置 master 进程的打开文件描述符 rlimit 数。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="rlimit-core-master">
      <term>
       <parameter>rlimit_core</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        设置 master 进程最大 core 的 rlimit 尺寸。
        默认值：0。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="events-mechanism">
      <term>
       <parameter>events.mechanism</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        设置 FPM 使用的事件机制。
        可用以下选项：select、pool、epoll、kqueue (*BSD)、port (Solaris)。
        默认值：不设置（自动检测）
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="systemd-interval">
      <term>
       <parameter>systemd_interval</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        使用 systemd 集成的 FPM 时，设置间歇秒数，报告健在通知给 systemd。
        设置为 0 表示禁用。默认值：10。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
 </sect2>
 
 <sect2> 
  <title>运行配置区段</title>
  <para>
   在FPM中，可以使用不同的设置来运行多个进程池。
   这些设置可以针对每个进程池单独设置。 
  </para>
  <variablelist>
   <varlistentry xml:id="listen">
    <term>
     <parameter>listen</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      设置接受 FastCGI 请求的地址。可用格式为：'ip:port'，'port'，'/path/to/unix/socket'。每个进程池都需要设置。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="listen-backlog">
    <term>
     <parameter>listen.backlog</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      设置 listen(2) 的 backlog 最大值。“-1”表示无限制。默认值：-1。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="listen-allowed-clients">
    <term>
     <parameter>listen.allowed_clients</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      设置允许连接到 FastCGI 的服务器 IPV4 地址。等同于 PHP FastCGI (5.2.2+) 中的 FCGI_WEB_SERVER_ADDRS
      环境变量。仅对 TCP 监听起作用。每个地址是用逗号分隔，如果没有设置或者为空，则允许任何服务器请求连接。默认值：any。
      支持 IPv6 地址。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="listen-owner">
    <term>
     <parameter>listen.owner</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      如果使用了 Unix 套接字，表示它的权限。在 Linux 中必须设置读/写权限，以便用于
      WEB 服务器连接。
      在很多 BSD 派生的系统中可以忽略权限允许自由连接。
      默认值：运行所使用的用户和组，权限为 0660。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="listen-group">
    <term>
     <parameter>listen.group</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      参见 <literal>listen.owner</literal>。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="listen-mode">
    <term>
     <parameter>listen.mode</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      参见 <literal>listen.owner</literal>。
     </para> 
    </listitem>
   </varlistentry>
     <varlistentry xml:id="listen-acl-users">
      <term>
       <parameter>listen.acl_users</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        当系统支持 POSIX ACL（Access Control Lists）时，可以设置使用此选项。
        当设置了的时候，将会忽略 <literal>listen.owner</literal> 和 <literal>listen.group</literal>。
        值是逗号分割的用户名列表。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="listen-acl-groups">
      <term>
       <parameter>listen.acl_groups</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        参见 <literal>listen.acl_users</literal>。
        值是逗号分割的用户组名称列表。
       </para>
      </listitem>
     </varlistentry>
   <varlistentry xml:id="user">
    <term>
     <parameter>user</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      FPM 进程运行的Unix用户。必须设置。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="group">
    <term>
     <parameter>group</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      FPM 进程运行的 Unix 用户组。如果不设置，就使用默认用户的用户组。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="pm">
    <term>
     <parameter>pm</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      设置进程管理器如何管理子进程。可用值：<literal>static</literal>，<literal>ondemand</literal>，<literal>dynamic</literal>。必须设置。
     </para>
     <para>
      <literal>static</literal> - 子进程的数量是固定的（<literal>pm.max_children</literal>）。
     </para>
     <para>
      <literal>ondemand</literal> - 进程在有需求时才产生（当请求时才启动。与
      dynamic 相反，在服务启动时 <literal>pm.start_servers</literal> 就启动了。
     </para>
     <para>
      <literal>dynamic</literal> - 
      子进程的数量在下面配置的基础上动态设置：<literal>pm.max_children</literal>，<literal>pm.start_servers</literal>，<literal>pm.min_spare_servers</literal>，<literal>pm.max_spare_servers</literal>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="pm.max-children">
    <term>
     <parameter>pm.max_children</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      <literal>pm</literal> 设置为 <literal>static</literal>
      时表示创建的子进程的数量，<literal>pm</literal> 设置为 
      <literal>dynamic</literal> 时表示最大可创建的子进程的数量。必须设置。
     </para>
     <para>
      该选项设置可以同时提供服务的请求数限制。类似 Apache 的 mpm_prefork 中 MaxClients
      的设置和 普通PHP FastCGI中的 <varname>PHP_FCGI_CHILDREN</varname> 环境变量。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="pm.start-servers">
    <term>
     <parameter>pm.start_servers</parameter>
     <type>in</type>
    </term>
    <listitem>
     <para>
      设置启动时创建的子进程数目。仅在 <literal>pm</literal> 设置为
      <literal>dynamic</literal> 时使用。默认值：min_spare_servers + (max_spare_servers -
      min_spare_servers) / 2。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="pm.min-spare-servers">
    <term>
     <parameter>pm.min_spare_servers</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      设置空闲服务进程的最低数目。仅在 <literal>pm</literal> 设置为 <literal>dynamic</literal> 时使用。必须设置。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="pm.max-spare-servers">
    <term>
     <parameter>pm.max_spare_servers</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      设置空闲服务进程的最大数目。仅在 <literal>pm</literal> 设置为 <literal>dynamic</literal> 时使用。必须设置。
     </para> 
    </listitem>
   </varlistentry>
     <varlistentry xml:id="pm.process-idle-timeout">
      <term>
       <parameter>pm.process_idle_timeout</parameter>
       <type>mixed</type>
      </term>
      <listitem>
       <para>
        秒数，多久之后结束空闲进程。
        仅当设置 <literal>pm</literal> 为 <literal>ondemand</literal>。
        可用单位：s（秒），m（分），h（小时）或者
      d（天）。默认单位：10s。
       </para>
      </listitem>
     </varlistentry>
   <varlistentry xml:id="pm.max-requests">
    <term>
     <parameter>pm.max_requests</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      设置每个子进程重生之前服务的请求数。对于可能存在内存泄漏的第三方模块来说是非常有用的。如果设置为
      '0' 则一直接受请求，等同于 <varname>PHP_FCGI_MAX_REQUESTS</varname> 环境变量。默认值：0。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="pm.status-path">
    <term>
     <parameter>pm.status_path</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      FPM 状态页面的网址。如果没有设置，则无法访问状态页面，默认值：无。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ping.path">
    <term>
     <parameter>ping.path</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      FPM 监控页面的 ping 网址。如果没有设置，则无法访问 ping
      页面。该页面用于外部检测 FPM 是否存活并且可以响应请求。请注意必须以斜线开头（/）。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ping.response">
    <term>
     <parameter>ping.response</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      用于定义 ping 请求的返回响应。返回为 HTTP 200 的 text/plain 格式文本。默认值：pong。
     </para> 
    </listitem>
   </varlistentry>
     <varlistentry xml:id="worker-process-priority">
      <term>
       <parameter>process.priority</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        设置 worker 的 nice(2)优先级（如果设置了的话）。
        该值从 -19（最高优先级） 到 20（更低优先级）。
        默认值：不设置
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="process-dumpable">
      <term>
       <parameter>process.dumpable</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        即使进程用户或者组跟主进程用户是不同的，也设置进程可转储标志 (PR_SET_DUMPABLE prctl)。 
        它允许为用户池创建进程 core dump 和 ptrace 进程。
        默认值：no。自 PHP 7.0.29、7.1.17 和 7.2.5 起可用。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="prefix">
      <term>
       <parameter>prefix</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        检测路径时使用的前缀。
       </para>
      </listitem>
     </varlistentry>
   <varlistentry xml:id="request-terminate-timeout">
    <term>
     <parameter>request_terminate_timeout</parameter>
     <type>mixed</type>
    </term>
    <listitem>
     <para>
      设置单个请求的超时中止时间。该选项可能会对 php.ini 设置中的 'max_execution_time'
      因为某些特殊原因没有中止运行的脚本有用。设置为 '0' 表示 'Off'。可用单位：s（秒），m（分），h（小时）或者
      d（天）。默认单位：s（秒）。默认值：0（关闭）。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="request-slowlog-timeout">
    <term>
     <parameter>request_slowlog_timeout</parameter>
     <type>mixed</type>
    </term>
    <listitem>
     <para>
      当一个请求该设置的超时时间后，就会将对应的 PHP 调用堆栈信息完整写入到慢日志中。设置为
      '0' 表示 'Off'。可用单位：s（秒），m（分），h（小时）或者
      d（天）。默认单位：s（秒）。默认值：0（关闭）。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="slowlog">
    <term>
     <parameter>slowlog</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      慢请求的记录日志。默认值：<literal>#INSTALL_PREFIX#/log/php-fpm.log.slow</literal>。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="rlimit-files">
    <term>
     <parameter>rlimit_files</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      设置文件打开描述符的 rlimit 限制。默认值：系统定义值。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="rlimit-core">
    <term>
     <parameter>rlimit_core</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      设置核心 rlimit 最大限制值。可用值：'unlimited'，0 或者正整数。默认值：系统定义值。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="chroot">
    <term>
     <parameter>chroot</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      启动时的 Chroot 目录。所定义的目录需要是绝对路径。如果没有设置，则 chroot 不被使用。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="chdir">
    <term>
     <parameter>chdir</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      设置启动目录，启动时会自动 Chdir 到该目录。所定义的目录需要是绝对路径。默认值：当前目录，或者根目录（chroot时）。
     </para> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="catch-workers-output">
    <term>
     <parameter>catch_workers_output</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      重定向运行过程中的 stdout 和 stderr 到主要的错误日志文件中。如果没有设置，stdout
      和 stderr 将会根据 FastCGI 的规则被重定向到 /dev/null。默认值：无。
     </para> 
    </listitem>
   </varlistentry>
     <varlistentry xml:id="decorate-workers-output">
      <term>
       <parameter>decorate_workers_output</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
       当 <link linkend="catch-workers-output">catch_workers_output</link> 启用时，
        为 worker 输出启用输出装饰。
        默认值：yes。
        自 PHP 7.3.0 起可用。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="clear-env">
      <term>
       <parameter>clear_env</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        为 FPM worker 进程清除环境变量。
        在进程池配置文件里设置环境变量前，阻止任意系统的环境变量进入 FPM worker 进程。
        默认值：Yes
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="security-limit-extensions">
      <term>
       <parameter>security.limit_extensions</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        限制 FPM 允许解析的脚本扩展名。
        此设置可以预防 web 服务器配置的错误。
        应当限制 FPM 仅仅解析 .php 扩展名，阻止恶意用户使用其他扩展名运行 php 代码。
        默认值： .php .phar
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="access-log">
      <term>
       <parameter>access.log</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Access log 文件。
        默认值：不设置
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="access-format">
      <term>
       <parameter>access.format</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        access log 的格式。
        默认: <literal>"%R - %u %t \"%m %r\" %s"</literal>：
        <table xml:id="fpm.configuration.access.format">
         <title>可用选项</title>
         <tgroup cols="2">
          <thead>
           <row>
            <entry>占位符</entry>
            <entry>描述</entry>
           </row>
          </thead>
          <tbody>
           <row>
            <entry>
             <constant>%C</constant>
            </entry>
            <entry>%CPU</entry>
           </row>
           <row>
            <entry>
             <constant>%d</constant>
            </entry>
            <entry>持续时间 µs</entry>
           </row>
           <row>
            <entry>
             <constant>%e</constant>
            </entry>
            <entry>fastcgi 环境变量</entry>
           </row>
           <row>
            <entry>
             <constant>%f</constant>
            </entry>
            <entry>脚本文件</entry>
           </row>
           <row>
            <entry>
             <constant>%l</constant>
            </entry>
            <entry>内容长度</entry>
           </row>
           <row>
            <entry>
             <constant>%m</constant>
            </entry>
            <entry>请求方法</entry>
           </row>
           <row>
            <entry>
             <constant>%M</constant>
            </entry>
            <entry>内存</entry>
           </row>
           <row>
            <entry>
             <constant>%n</constant>
            </entry>
            <entry>进程池（pool）名称</entry>
           </row>
           <row>
            <entry>
             <constant>%o</constant>
            </entry>
            <entry>header 输出</entry>
           </row>
           <row>
            <entry>
             <constant>%p</constant>
            </entry>
            <entry>PID</entry>
           </row>
           <row>
            <entry>
             <constant>%q</constant>
            </entry>
            <entry>查询字符串</entry>
           </row>
           <row>
            <entry>
             <constant>%Q</constant>
            </entry>
            <entry>%q 和 %r 之间的连接字符</entry>
           </row>
           <row>
            <entry>
             <constant>%r</constant>
            </entry>
            <entry>请求 URI</entry>
           </row>
           <row>
            <entry>
             <constant>%R</constant>
            </entry>
            <entry>远程 IP 地址</entry>
           </row>
           <row>
            <entry>
             <constant>%s</constant>
            </entry>
            <entry>状态码</entry>
           </row>
           <row>
            <entry>
             <constant>%T</constant>
            </entry>
            <entry>时间</entry>
           </row>
           <row>
            <entry>
             <constant>%t</constant>
            </entry>
            <entry>时间</entry>
           </row>
           <row>
            <entry>
             <constant>%u</constant>
            </entry>
            <entry>远程用户</entry>
           </row>
          </tbody>
         </tgroup>
        </table>
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
  
  <para>
   还可以在为一个运行池传递附加的环境变量，或者更新 PHP
   的配置值。可以在进程池配置文件中如下面的配置参数来做到：
   <example>
    <title>给运行池传递环境变量和设置 PHP 的配置值</title>
    <programlisting role="ini">
<![CDATA[
       env[HOSTNAME] = $HOSTNAME
       env[PATH] = /usr/local/bin:/usr/bin:/bin
       env[TMP] = /tmp
       env[TMPDIR] = /tmp
       env[TEMP] = /tmp

       php_admin_value[sendmail_path] = /usr/sbin/sendmail -t -i -f www@my.domain.com
       php_flag[display_errors] = off
       php_admin_value[error_log] = /var/log/fpm-php.www.log
       php_admin_flag[log_errors] = on
       php_admin_value[memory_limit] = 32M
       ]]>
      </programlisting>
     </example>
     PHP配置值通过 <literal>php_value</literal> 或者
     <literal>php_flag</literal> 设置，并且会覆盖以前的值。请注意 
     <link linkend="ini.disable-functions">disable_functions</link> 或者 
     <link linkend="ini.disable-classes">disable_classes</link> 在
     <filename>php.ini</filename> 之中定义的值不会被覆盖掉，但是会将新的设置附加在原有值的后面。
    </para>
    <para>
     使用 <literal>php_admin_value</literal> 或者 <literal>php_admin_flag</literal>
     定义的值，不能被 PHP 代码中的 <function>ini_set</function> 覆盖。
    </para>
    <para>
     可以通过 web 服务器设置 PHP 的设定。
     <example>
      <title>在 nginx.conf 中设定 PHP</title>
      <programlisting role="ini">
<![CDATA[
set $php_value "pcre.backtrack_limit=424242";
set $php_value "$php_value \n pcre.recursion_limit=99999";
fastcgi_param  PHP_VALUE $php_value;

fastcgi_param  PHP_ADMIN_VALUE "open_basedir=/var/www/htdocs";
       ]]>
      </programlisting>
     </example>
     <caution>
      <para>
       由于这些设定是以 FastCGI 标头传递给 php-fpm，php-fpm
       不应绑定到外部网可以访问的地址上，否则任何人都能修改 PHP
       的配置选项了。参见
       <link linkend="listen-allowed-clients">listen.allowed_clients</link>。
      </para>
     </caution>
    </para>
   </sect2>
   
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
